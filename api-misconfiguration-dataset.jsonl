[
  {
    "id": "api-001",
    "title": "Verbose Error Messages",
    "issue": "Exposes internal stack trace and system paths in error response.",
    "endpoint": "POST /api/login",
    "risk": "Information Disclosure",
    "impact": "Attacker can gather sensitive environment details for targeted attacks.",
    "recommendation": "Use generic error messages in production and log full details internally.",
    "category": "Verbose Errors",
    "api_type": "REST"
  },
  {
    "id": "api-002",
    "title": "Insecure Direct Object Reference (IDOR)",
    "issue": "User can access another user's data by modifying ID in request.",
    "endpoint": "GET /api/user/{id}",
    "risk": "Unauthorized Access",
    "impact": "Exposure of sensitive user data to unauthorized parties.",
    "recommendation": "Implement proper access controls and validate user permissions.",
    "category": "Access Control",
    "api_type": "REST"
  },
  {
    "id": "api-003",
    "title": "No Authentication on Sensitive Endpoint",
    "issue": "Endpoint allows access without any authentication.",
    "endpoint": "GET /api/admin/users",
    "risk": "Unauthorized Access",
    "impact": "Attackers can retrieve sensitive data without credentials.",
    "recommendation": "Enforce authentication and role-based access control.",
    "category": "Authentication",
    "api_type": "REST"
  },
  {
    "id": "api-004",
    "title": "Overly Permissive CORS Policy",
    "issue": "CORS allows all origins with credentials.",
    "endpoint": "OPTIONS /api/*",
    "risk": "Cross-Origin Attacks",
    "impact": "Unauthorized domains can access API with user credentials.",
    "recommendation": "Restrict CORS to trusted origins and disable credentials for public APIs.",
    "category": "Overly Permissive CORS",
    "api_type": "REST"
  },
  {
    "id": "api-005",
    "title": "Lack of Rate Limiting",
    "issue": "No limit on request frequency to login endpoint.",
    "endpoint": "POST /api/login",
    "risk": "Brute Force Attacks",
    "impact": "Attackers can attempt unlimited password guesses.",
    "recommendation": "Implement rate limiting and account lockout mechanisms.",
    "category": "Rate Limiting & Abuse",
    "api_type": "REST"
  },
  {
    "id": "api-006",
    "title": "Mass Assignment Vulnerability",
    "issue": "API allows updating sensitive fields like 'isAdmin' via user input.",
    "endpoint": "PUT /api/user/profile",
    "risk": "Privilege Escalation",
    "impact": "Users can gain unauthorized admin access.",
    "recommendation": "Use a whitelist for updatable fields and validate inputs.",
    "category": "Mass Assignment",
    "api_type": "REST"
  },
  {
    "id": "api-007",
    "title": "Excessive Data Exposure in GraphQL",
    "issue": "Query returns sensitive fields like passwords in response.",
    "endpoint": "POST /graphql",
    "risk": "Data Leakage",
    "impact": "Sensitive data exposed to clients unnecessarily.",
    "recommendation": "Restrict fields in GraphQL schema and use field-level access control.",
    "category": "Excessive Data Exposure",
    "api_type": "GraphQL"
  },
  {
    "id": "api-008",
    "title": "Insecure Default Configuration",
    "issue": "API uses default credentials for admin access.",
    "endpoint": "POST /api/admin/login",
    "risk": "Unauthorized Access",
    "impact": "Attackers can gain admin privileges with known credentials.",
    "recommendation": "Change default credentials and enforce strong password policies.",
    "category": "Insecure Defaults",
    "api_type": "REST"
  },
  {
    "id": "api-009",
    "title": "Broken Object Level Authorization (BOLA)",
    "issue": "User can modify another user's resource by changing ID.",
    "endpoint": "PATCH /api/orders/{orderId}",
    "risk": "Unauthorized Modification",
    "impact": "Attackers can alter or delete other users' data.",
    "recommendation": "Validate user ownership of resources before processing requests.",
    "category": "Access Control",
    "api_type": "REST"
  },
  {
    "id": "api-010",
    "title": "Weak Authentication Header",
    "issue": "API accepts unencrypted API keys in headers.",
    "endpoint": "GET /api/data",
    "risk": "Credential Exposure",
    "impact": "Attackers can intercept API keys in transit.",
    "recommendation": "Use secure token-based authentication with HTTPS.",
    "category": "Authentication",
    "api_type": "REST"
  },
  {
    "id": "api-011",
    "title": "Verbose GraphQL Error",
    "issue": "GraphQL errors expose database schema details.",
    "endpoint": "POST /graphql",
    "risk": "Information Disclosure",
    "impact": "Attackers can map database structure for exploitation.",
    "recommendation": "Sanitize GraphQL error responses in production.",
    "category": "Verbose Errors",
    "api_type": "GraphQL"
  },
  {
    "id": "api-012",
    "title": "No Rate Limiting on GraphQL Query",
    "issue": "Complex GraphQL queries can overload server.",
    "endpoint": "POST /graphql",
    "risk": "Denial of Service",
    "impact": "Attackers can crash the server with heavy queries.",
    "recommendation": "Implement query depth and complexity limits.",
    "category": "Rate Limiting & Abuse",
    "api_type": "GraphQL"
  },
  {
    "id": "api-013",
    "title": "Insecure CORS Wildcard",
    "issue": "CORS allows '*' origin for sensitive endpoints.",
    "endpoint": "OPTIONS /api/private",
    "risk": "Cross-Origin Attacks",
    "impact": "Malicious sites can access sensitive API data.",
    "recommendation": "Specify allowed origins explicitly in CORS policy.",
    "category": "Overly Permissive CORS",
    "api_type": "REST"
  },
  {
    "id": "api-014",
    "title": "Mass Assignment in GraphQL Mutation",
    "issue": "Mutation allows updating restricted fields like 'role'.",
    "endpoint": "POST /graphql",
    "risk": "Privilege Escalation",
    "impact": "Users can escalate privileges via mutation payloads.",
    "recommendation": "Restrict mutable fields in GraphQL schema.",
    "category": "Mass Assignment",
    "api_type": "GraphQL"
  },
  {
    "id": "api-015",
    "title": "Insecure Default Rate Limit",
    "issue": "Default rate limit allows 10,000 requests per minute.",
    "endpoint": "GET /api/public",
    "risk": "Resource Exhaustion",
    "impact": "Attackers can overwhelm server resources.",
    "recommendation": "Set strict rate limits based on endpoint sensitivity.",
    "category": "Rate Limiting & Abuse",
    "api_type": "REST"
  },
  {
    "id": "api-016",
    "title": "Admin Bypass via Parameter Tampering",
    "issue": "API allows admin access by modifying 'role' parameter.",
    "endpoint": "POST /api/auth",
    "risk": "Privilege Escalation",
    "impact": "Unauthorized users can gain admin access.",
    "recommendation": "Validate role assignments server-side.",
    "category": "Access Control",
    "api_type": "REST"
  },
  {
    "id": "api-017",
    "title": "Weak JWT Validation",
    "issue": "API accepts JWT with 'none' algorithm.",
    "endpoint": "GET /api/protected",
    "risk": "Unauthorized Access",
    "impact": "Attackers can bypass authentication with forged tokens.",
    "recommendation": "Enforce strong JWT validation and algorithm checks.",
    "category": "Authentication",
    "api_type": "REST"
  },
  {
    "id": "api-018",
    "title": "Verbose Error with SQL Details",
    "issue": "Error response leaks SQL query details.",
    "endpoint": "GET /api/search",
    "risk": "Information Disclosure",
    "impact": "Attackers can craft SQL injection attacks.",
    "recommendation": "Sanitize error messages and use parameterized queries.",
    "category": "Verbose Errors",
    "api_type": "REST"
  },
  {
    "id": "api-019",
    "title": "Excessive Data in REST Response",
    "issue": "API returns sensitive user data in public endpoint.",
    "endpoint": "GET /api/users",
    "risk": "Data Leakage",
    "impact": "Sensitive data exposed to unauthorized users.",
    "recommendation": "Filter response data to include only necessary fields.",
    "category": "Excessive Data Exposure",
    "api_type": "REST"
  },
  {
    "id": "api-020",
    "title": "Insecure Default Timeout",
    "issue": "Session tokens have no expiration time.",
    "endpoint": "POST /api/login",
    "risk": "Session Hijacking",
    "impact": "Stolen tokens remain valid indefinitely.",
    "recommendation": "Set short token expiration and refresh mechanisms.",
    "category": "Insecure Defaults",
    "api_type": "REST"
  },
  {
    "id": "api-021",
    "title": "IDOR in GraphQL Query",
    "issue": "GraphQL query allows accessing any user's data by ID.",
    "endpoint": "POST /graphql",
    "risk": "Unauthorized Access",
    "impact": "Exposure of sensitive data to unauthorized users.",
    "recommendation": "Implement object-level authorization in resolvers.",
    "category": "Access Control",
    "api_type": "GraphQL"
  },
  {
    "id": "api-022",
    "title": "No Authentication on Public Endpoint",
    "issue": "Public endpoint exposes sensitive configuration data.",
    "endpoint": "GET /api/config",
    "risk": "Information Disclosure",
    "impact": "Attackers can access system configuration details.",
    "recommendation": "Restrict public endpoints to non-sensitive data.",
    "category": "Authentication",
    "api_type": "REST"
  },
  {
    "id": "api-023",
    "title": "CORS Allows Null Origin",
    "issue": "API permits 'null' origin in CORS policy.",
    "endpoint": "OPTIONS /api/*",
    "risk": "Cross-Origin Attacks",
    "impact": "Malicious scripts can access API from sandboxed environments.",
    "recommendation": "Disallow 'null' origin in CORS configuration.",
    "category": "Overly Permissive CORS",
    "api_type": "REST"
  },
  {
    "id": "api-024",
    "title": "Rate Limit Bypass via IP Spoofing",
    "issue": "Rate limiting relies on client IP, which can be spoofed.",
    "endpoint": "POST /api/submit",
    "risk": "Abuse",
    "impact": "Attackers can bypass rate limits with spoofed IPs.",
    "recommendation": "Use token-based rate limiting instead of IP-based.",
    "category": "Rate Limiting & Abuse",
    "api_type": "REST"
  },
  {
    "id": "api-025",
    "title": "Mass Assignment in User Creation",
    "issue": "User creation allows setting 'verified' status.",
    "endpoint": "POST /api/users",
    "risk": "Privilege Escalation",
    "impact": "Attackers can create verified accounts without validation.",
    "recommendation": "Restrict sensitive fields in user creation payloads.",
    "category": "Mass Assignment",
    "api_type": "REST"
  },
  {
    "id": "api-026",
    "title": "GraphQL Introspection Enabled",
    "issue": "Introspection query exposes full schema details.",
    "endpoint": "POST /graphql",
    "risk": "Information Disclosure",
    "impact": "Attackers can map API structure for targeted attacks.",
    "recommendation": "Disable introspection in production environments.",
    "category": "Excessive Data Exposure",
    "api_type": "GraphQL"
  },
  {
    "id": "api-027",
    "title": "Insecure Default API Key",
    "issue": "API uses hardcoded default key for access.",
    "endpoint": "GET /api/data",
    "risk": "Unauthorized Access",
    "impact": "Attackers can access API with known key.",
    "recommendation": "Generate unique, revocable API keys per client.",
    "category": "Insecure Defaults",
    "api_type": "REST"
  },
  {
    "id": "api-028",
    "title": "BOLA in Order Deletion",
    "issue": "User can delete any order by modifying ID.",
    "endpoint": "DELETE /api/orders/{orderId}",
    "risk": "Unauthorized Deletion",
    "impact": "Attackers can delete other users' orders.",
    "recommendation": "Validate user ownership before deletion.",
    "category": "Access Control",
    "api_type": "REST"
  },
  {
    "id": "api-029",
    "title": "Weak Password Reset Token",
    "issue": "Password reset token is predictable and short-lived.",
    "endpoint": "POST /api/reset-password",
    "risk": "Account Takeover",
    "impact": "Attackers can guess tokens to reset user passwords.",
    "recommendation": "Use cryptographically secure, long-lived tokens.",
    "category": "Authentication",
    "api_type": "REST"
  },
  {
    "id": "api-030",
    "title": "Verbose Error with File Paths",
    "issue": "Error response includes server file paths.",
    "endpoint": "GET /api/files",
    "risk": "Information Disclosure",
    "impact": "Attackers can identify server structure for exploitation.",
    "recommendation": "Sanitize error messages to exclude file paths.",
    "category": "Verbose Errors",
    "api_type": "REST"
  },
  {
    "id": "api-031",
    "title": "Excessive GraphQL Field Exposure",
    "issue": "Query exposes sensitive fields like API keys.",
    "endpoint": "POST /graphql",
    "risk": "Data Leakage",
    "impact": "Attackers can access sensitive configuration data.",
    "recommendation": "Restrict sensitive fields in GraphQL responses.",
    "category": "Excessive Data Exposure",
    "api_type": "GraphQL"
  },
  {
    "id": "api-032",
    "title": "No Rate Limit on Password Reset",
    "issue": "No limit on password reset requests.",
    "endpoint": "POST /api/reset-password",
    "risk": "Abuse",
    "impact": "Attackers can flood users with reset emails.",
    "recommendation": "Implement rate limiting on reset endpoints.",
    "category": "Rate Limiting & Abuse",
    "api_type": "REST"
  },
  {
    "id": "api-033",
    "title": "CORS Allows Untrusted Origins",
    "issue": "CORS policy includes unverified third-party domains.",
    "endpoint": "OPTIONS /api/data",
    "risk": "Cross-Origin Attacks",
    "impact": "Malicious sites can access API data.",
    "recommendation": "Validate and restrict CORS to trusted domains only.",
    "category": "Overly Permissive CORS",
    "api_type": "REST"
  },
  {
    "id": "api-034",
    "title": "Mass Assignment in Profile Update",
    "issue": "Profile update allows changing email without verification.",
    "endpoint": "PUT /api/profile",
    "risk": "Account Compromise",
    "impact": "Attackers can hijack accounts by changing email.",
    "recommendation": "Require email verification for changes.",
    "category": "Mass Assignment",
    "api_type": "REST"
  },
  {
    "id": "api-035",
    "title": "Insecure Default CORS Headers",
    "issue": "Default CORS headers expose sensitive endpoints.",
    "endpoint": "OPTIONS /api/*",
    "risk": "Cross-Origin Attacks",
    "impact": "Unauthorized access to sensitive API endpoints.",
    "recommendation": "Configure CORS headers per endpoint sensitivity.",
    "category": "Overly Permissive CORS",
    "api_type": "REST"
  },
  {
    "id": "api-036",
    "title": "Admin Bypass via Header Injection",
    "issue": "API accepts admin role via custom header.",
    "endpoint": "POST /api/admin",
    "risk": "Privilege Escalation",
    "impact": "Attackers can gain admin access via header manipulation.",
    "recommendation": "Validate roles server-side, not via headers.",
    "category": "Access Control",
    "api_type": "REST"
  },
  {
    "id": "api-037",
    "title": "Weak OAuth Token Validation",
    "issue": "API does not validate OAuth token scope.",
    "endpoint": "GET /api/resources",
    "risk": "Unauthorized Access",
    "impact": "Attackers can access restricted resources with valid tokens.",
    "recommendation": "Validate OAuth token scopes and permissions.",
    "category": "Authentication",
    "api_type": "REST"
  },
  {
    "id": "api-038",
    "title": "Verbose Error with API Keys",
    "issue": "Error response leaks API key in message.",
    "endpoint": "POST /api/auth",
    "risk": "Credential Exposure",
    "impact": "Attackers can steal API keys for unauthorized access.",
    "recommendation": "Exclude sensitive data from error messages.",
    "category": "Verbose Errors",
    "api_type": "REST"
  },
  {
    "id": "api-039",
    "title": "GraphQL Batch Query Abuse",
    "issue": "No limit on batched GraphQL queries.",
    "endpoint": "POST /graphql",
    "risk": "Denial of Service",
    "impact": "Attackers can overload server with batched queries.",
    "recommendation": "Limit batch query size and complexity.",
    "category": "Rate Limiting & Abuse",
    "api_type": "GraphQL"
  },
  {
    "id": "api-040",
    "title": "Insecure Default Session Timeout",
    "issue": "API sessions remain active for 30 days.",
    "endpoint": "POST /api/login",
    "risk": "Session Hijacking",
    "impact": "Stolen sessions remain valid for extended periods.",
    "recommendation": "Set short session timeouts and refresh tokens.",
    "category": "Insecure Defaults",
    "api_type": "REST"
  },
  {
    "id": "api-041",
    "title": "IDOR in File Access",
    "issue": "User can access any file by modifying ID.",
    "endpoint": "GET /api/files/{fileId}",
    "risk": "Unauthorized Access",
    "impact": "Exposure of sensitive files to unauthorized users.",
    "recommendation": "Validate file ownership before access.",
    "category": "Access Control",
    "api_type": "REST"
  },
  {
    "id": "api-042",
    "title": "No Authentication on Delete Endpoint",
    "issue": "Delete endpoint accessible without authentication.",
    "endpoint": "DELETE /api/resources",
    "risk": "Unauthorized Deletion",
    "impact": "Attackers can delete resources without credentials.",
    "recommendation": "Require authentication for destructive actions.",
    "category": "Authentication",
    "api_type": "REST"
  },
  {
    "id": "api-043",
    "title": "CORS Exposes Credentials",
    "issue": "CORS allows credentials with wildcard origins.",
    "endpoint": "OPTIONS /api/private",
    "risk": "Cross-Origin Attacks",
    "impact": "Malicious sites can steal user credentials.",
    "recommendation": "Disable credentials in CORS for public APIs.",
    "category": "Overly Permissive CORS",
    "api_type": "REST"
  },
  {
    "id": "api-044",
    "title": "Rate Limit on Public API Too High",
    "issue": "Public API allows 1,000 requests per second.",
    "endpoint": "GET /api/public",
    "risk": "Resource Exhaustion",
    "impact": "Attackers can overwhelm server with requests.",
    "recommendation": "Lower rate limits for public APIs.",
    "category": "Rate Limiting & Abuse",
    "api_type": "REST"
  },
  {
    "id": "api-045",
    "title": "Mass Assignment in Role Update",
    "issue": "API allows updating user roles via public endpoint.",
    "endpoint": "PATCH /api/users",
    "risk": "Privilege Escalation",
    "impact": "Users can escalate to admin roles.",
    "recommendation": "Restrict role updates to admin-only endpoints.",
    "category": "Mass Assignment",
    "api_type": "REST"
  },
  {
    "id": "api-046",
    "title": "GraphQL Schema Leakage",
    "issue": "Introspection reveals internal-only fields.",
    "endpoint": "POST /graphql",
    "risk": "Information Disclosure",
    "impact": "Attackers can discover hidden API functionality.",
    "recommendation": "Hide internal fields in GraphQL schema.",
    "category": "Excessive Data Exposure",
    "api_type": "GraphQL"
  },
  {
    "id": "api-047",
    "title": "Insecure Default Token Scope",
    "issue": "API tokens have full access by default.",
    "endpoint": "POST /api/tokens",
    "risk": "Over-Privileged Access",
    "impact": "Compromised tokens grant excessive permissions.",
    "recommendation": "Assign least privilege to API tokens.",
    "category": "Insecure Defaults",
    "api_type": "REST"
  },
  {
    "id": "api-048",
    "title": "BOLA in Payment Access",
    "issue": "User can view any payment by changing ID.",
    "endpoint": "GET /api/payments/{paymentId}",
    "risk": "Unauthorized Access",
    "impact": "Exposure of sensitive payment data.",
    "recommendation": "Validate user ownership of payment records.",
    "category": "Access Control",
    "api_type": "REST"
  },
  {
    "id": "api-049",
    "title": "Weak API Key Rotation",
    "issue": "API keys do not expire or rotate.",
    "endpoint": "GET /api/data",
    "risk": "Credential Exposure",
    "impact": "Stolen keys remain valid indefinitely.",
    "recommendation": "Implement mandatory key rotation and expiration.",
    "category": "Authentication",
    "api_type": "REST"
  },
  {
    "id": "api-050",
    "title": "Verbose Error with User Data",
    "issue": "Error leaks user email in response.",
    "endpoint": "POST /api/register",
    "risk": "Data Leakage",
    "impact": "Attackers can harvest user data from errors.",
    "recommendation": "Sanitize error messages to exclude user data.",
    "category": "Verbose Errors",
    "api_type": "REST"
  },
  {
    "id": "api-051",
    "title": "GraphQL Query Overfetching",
    "issue": "Query returns entire user object unnecessarily.",
    "endpoint": "POST /graphql",
    "risk": "Data Leakage",
    "impact": "Exposes sensitive fields not needed by client.",
    "recommendation": "Use field selection to limit returned data.",
    "category": "Excessive Data Exposure",
    "api_type": "GraphQL"
  },
  {
    "id": "api-052",
    "title": "No Rate Limit on File Upload",
    "issue": "No limit on file upload requests.",
    "endpoint": "POST /api/upload",
    "risk": "Resource Exhaustion",
    "impact": "Attackers can overload storage with uploads.",
    "recommendation": "Implement rate limits and file size restrictions.",
    "category": "Rate Limiting & Abuse",
    "api_type": "REST"
  },
  {
    "id": "api-053",
    "title": "CORS Allows All Methods",
    "issue": "CORS permits all HTTP methods, including DELETE.",
    "endpoint": "OPTIONS /api/*",
    "risk": "Cross-Origin Attacks",
    "impact": "Malicious sites can perform destructive actions.",
    "recommendation": "Restrict CORS to necessary HTTP methods.",
    "category": "Overly Permissive CORS",
    "api_type": "REST"
  },
  {
    "id": "api-054",
    "title": "Mass Assignment in Settings Update",
    "issue": "API allows updating security settings via user input.",
    "endpoint": "PUT /api/settings",
    "risk": "Security Misconfiguration",
    "impact": "Attackers can disable security features.",
    "recommendation": "Restrict sensitive settings to admin control.",
    "category": "Mass Assignment",
    "api_type": "REST"
  },
  {
    "id": "api-055",
    "title": "Insecure Default Logging",
    "issue": "API logs sensitive data like passwords.",
    "endpoint": "POST /api/login",
    "risk": "Data Leakage",
    "impact": "Attackers with log access can steal credentials.",
    "recommendation": "Exclude sensitive data from logs.",
    "category": "Insecure Defaults",
    "api_type": "REST"
  },
  {
    "id": "api-056",
    "title": "IDOR in Message Access",
    "issue": "User can read any message by changing ID.",
    "endpoint": "GET /api/messages/{messageId}",
    "risk": "Unauthorized Access",
    "impact": "Exposure of private user communications.",
    "recommendation": "Validate message ownership before access.",
    "category": "Access Control",
    "api_type": "REST"
  },
  {
    "id": "api-057",
    "title": "No Token Revocation",
    "issue": "No mechanism to revoke compromised tokens.",
    "endpoint": "POST /api/auth",
    "risk": "Unauthorized Access",
    "impact": "Compromised tokens remain valid until expiry.",
    "recommendation": "Implement token revocation endpoints.",
    "category": "Authentication",
    "api_type": "REST"
  },
  {
    "id": "api-058",
    "title": "Verbose Error with Token Details",
    "issue": "Error response includes JWT details.",
    "endpoint": "POST /api/auth",
    "risk": "Information Disclosure",
    "impact": "Attackers can analyze token structure for attacks.",
    "recommendation": "Sanitize errors to exclude token details.",
    "category": "Verbose Errors",
    "api_type": "REST"
  },
  {
    "id": "api-059",
    "title": "GraphQL Denial of Service",
    "issue": "Nested queries cause server overload.",
    "endpoint": "POST /graphql",
    "risk": "Denial of Service",
    "impact": "Attackers can crash API with complex queries.",
    "recommendation": "Limit query depth and enforce timeouts.",
    "category": "Rate Limiting & Abuse",
    "api_type": "GraphQL"
  },
  {
    "id": "api-060",
    "title": "Insecure Default API Version",
    "issue": "API defaults to deprecated, insecure version.",
    "endpoint": "GET /api/v1/data",
    "risk": "Security Vulnerabilities",
    "impact": "Attackers can exploit known vulnerabilities in old versions.",
    "recommendation": "Default to latest, secure API version.",
    "category": "Insecure Defaults",
    "api_type": "REST"
  },
  {
    "id": "api-061",
    "title": "BOLA in Profile Access",
    "issue": "User can view any profile by changing ID.",
    "endpoint": "GET /api/profiles/{profileId}",
    "risk": "Unauthorized Access",
    "impact": "Exposure of sensitive user profiles.",
    "recommendation": "Validate profile ownership before access.",
    "category": "Access Control",
    "api_type": "REST"
  },
  {
    "id": "api-062",
    "title": "Weak Session Token Entropy",
    "issue": "Session tokens use low-entropy values.",
    "endpoint": "POST /api/login",
    "risk": "Session Hijacking",
    "impact": "Attackers can guess valid session tokens.",
    "recommendation": "Use high-entropy, cryptographically secure tokens.",
    "category": "Authentication",
    "api_type": "REST"
  },
  {
    "id": "api-063",
    "title": "CORS Exposes Internal Endpoints",
    "issue": "CORS allows access to internal-only endpoints.",
    "endpoint": "OPTIONS /api/internal",
    "risk": "Cross-Origin Attacks",
    "impact": "Malicious sites can access internal APIs.",
    "recommendation": "Exclude internal endpoints from CORS policy.",
    "category": "Overly Permissive CORS",
    "api_type": "REST"
  },
  {
    "id": "api-064",
    "title": "Rate Limit on Search Too High",
    "issue": "Search endpoint allows 5,000 requests per minute.",
    "endpoint": "GET /api/search",
    "risk": "Resource Exhaustion",
    "impact": "Attackers can overload search functionality.",
    "recommendation": "Lower rate limits for search endpoints.",
    "category": "Rate Limiting & Abuse",
    "api_type": "REST"
  },
  {
    "id": "api-065",
    "title": "Mass Assignment in Account Creation",
    "issue": "Account creation allows setting 'balance' field.",
    "endpoint": "POST /api/accounts",
    "risk": "Financial Fraud",
    "impact": "Attackers can create accounts with arbitrary balances.",
    "recommendation": "Exclude financial fields from user input.",
    "category": "Mass Assignment",
    "api_type": "REST"
  },
  {
    "id": "api-066",
    "title": "GraphQL Sensitive Field Exposure",
    "issue": "Query exposes admin-only fields to all users.",
    "endpoint": "POST /graphql",
    "risk": "Data Leakage",
    "impact": "Unauthorized access to admin data.",
    "recommendation": "Implement role-based field access in GraphQL.",
    "category": "Excessive Data Exposure",
    "api_type": "GraphQL"
  },
  {
    "id": "api-067",
    "title": "Insecure Default Encryption",
    "issue": "API uses weak encryption for sensitive data.",
    "endpoint": "POST /api/data",
    "risk": "Data Interception",
    "impact": "Attackers can decrypt sensitive data in transit.",
    "recommendation": "Use strong encryption like TLS 1.3.",
    "category": "Insecure Defaults",
    "api_type": "REST"
  },
  {
    "id": "api-068",
    "title": "IDOR in Transaction Access",
    "issue": "User can view any transaction by changing ID.",
    "endpoint": "GET /api/transactions/{transactionId}",
    "risk": "Unauthorized Access",
    "impact": "Exposure of sensitive transaction data.",
    "recommendation": "Validate transaction ownership before access.",
    "category": "Access Control",
    "api_type": "REST"
  },
  {
    "id": "api-069",
    "title": "No Token Scope Validation",
    "issue": "API does not check token scope for actions.",
    "endpoint": "POST /api/actions",
    "risk": "Over-Privileged Access",
    "impact": "Tokens can perform unauthorized actions.",
    "recommendation": "Validate token scopes for all actions.",
    "category": "Authentication",
    "api_type": "REST"
  },
  {
    "id": "api-070",
    "title": "Verbose Error with Database Info",
    "issue": "Error leaks database table names.",
    "endpoint": "GET /api/data",
    "risk": "Information Disclosure",
    "impact": "Attackers can target specific database tables.",
    "recommendation": "Sanitize errors to exclude database details.",
    "category": "Verbose Errors",
    "api_type": "REST"
  },
  {
    "id": "api-071",
    "title": "GraphQL Overfetching in List Query",
    "issue": "List query returns all fields, including sensitive ones.",
    "endpoint": "POST /graphql",
    "risk": "Data Leakage",
    "impact": "Exposes unnecessary sensitive data to clients.",
    "recommendation": "Limit fields returned in list queries.",
    "category": "Excessive Data Exposure",
    "api_type": "GraphQL"
  },
  {
    "id": "api-072",
    "title": "No Rate Limit on Data Export",
    "issue": "Data export endpoint has no request limits.",
    "endpoint": "GET /api/export",
    "risk": "Resource Exhaustion",
    "impact": "Attackers can overload server with export requests.",
    "recommendation": "Implement rate limits on export endpoints.",
    "category": "Rate Limiting & Abuse",
    "api_type": "REST"
  },
  {
    "id": "api-073",
    "title": "CORS Allows All Headers",
    "issue": "CORS permits all custom headers.",
    "endpoint": "OPTIONS /api/*",
    "risk": "Cross-Origin Attacks",
    "impact": "Malicious headers can bypass security controls.",
    "recommendation": "Restrict CORS to necessary headers only.",
    "category": "Overly Permissive CORS",
    "api_type": "REST"
  },
  {
    "id": "api-074",
    "title": "Mass Assignment in Transaction Update",
    "issue": "Transaction update allows changing 'amount' field.",
    "endpoint": "PUT /api/transactions",
    "risk": "Financial Fraud",
    "impact": "Attackers can manipulate transaction amounts.",
    "recommendation": "Restrict financial fields in updates.",
    "category": "Mass Assignment",
    "api_type": "REST"
  },
  {
    "id": "api-075",
    "title": "Insecure Default CORS Timeout",
    "issue": "CORS preflight cache duration is too long.",
    "endpoint": "OPTIONS /api/*",
    "risk": "Cross-Origin Attacks",
    "impact": "Stale CORS policies can be exploited.",
    "recommendation": "Set short cache duration for CORS preflight.",
    "category": "Overly Permissive CORS",
    "api_type": "REST"
  },
  {
    "id": "api-076",
    "title": "Admin Bypass via Query Parameter",
    "issue": "API grants admin access via query parameter.",
    "endpoint": "GET /api/admin?role=admin",
    "risk": "Privilege Escalation",
    "impact": "Attackers can gain admin access via URL manipulation.",
    "recommendation": "Validate roles server-side, not via parameters.",
    "category": "Access Control",
    "api_type": "REST"
  },
  {
    "id": "api-077",
    "title": "Weak Token Signing Key",
    "issue": "API uses weak key for token signing.",
    "endpoint": "POST /api/auth",
    "risk": "Token Forgery",
    "impact": "Attackers can forge valid tokens.",
    "recommendation": "Use strong, unique keys for token signing.",
    "category": "Authentication",
    "api_type": "REST"
  },
  {
    "id": "api-078",
    "title": "Verbose Error with Version Info",
    "issue": "Error leaks server software version.",
    "endpoint": "GET /api/status",
    "risk": "Information Disclosure",
    "impact": "Attackers can exploit known vulnerabilities in software.",
    "recommendation": "Sanitize errors to exclude version details.",
    "category": "Verbose Errors",
    "api_type": "REST"
  },
  {
    "id": "api-079",
    "title": "GraphQL Resource Exhaustion",
    "issue": "Unrestricted nested queries consume server resources.",
    "endpoint": "POST /graphql",
    "risk": "Denial of Service",
    "impact": "Attackers can overload server with deep queries.",
    "recommendation": "Enforce query depth and resource limits.",
    "category": "Rate Limiting & Abuse",
    "api_type": "GraphQL"
  },
  {
    "id": "api-080",
    "title": "Insecure Default Debug Mode",
    "issue": "API runs in debug mode, exposing sensitive data.",
    "endpoint": "GET /api/debug",
    "risk": "Information Disclosure",
    "impact": "Attackers can access debugging information.",
    "recommendation": "Disable debug mode in production.",
    "category": "Insecure Defaults",
    "api_type": "REST"
  }
  {
    "id": "api-081",
    "title": "SOAP Insecure Direct Object Reference",
    "issue": "SOAP request allows accessing any resource by modifying ID.",
    "endpoint": "POST /soap/resource",
    "risk": "Unauthorized Access",
    "impact": "Attackers can access sensitive resources of other users.",
    "recommendation": "Validate user permissions in SOAP handlers.",
    "category": "Access Control",
    "api_type": "SOAP"
  },
  {
    "id": "api-082",
    "title": "No Authentication in gRPC Service",
    "issue": "gRPC endpoint allows unauthenticated access to sensitive data.",
    "endpoint": "gRPC /service.GetData",
    "risk": "Unauthorized Access",
    "impact": "Attackers can retrieve sensitive data without credentials.",
    "recommendation": "Enforce authentication in gRPC interceptors.",
    "category": "Authentication",
    "api_type": "gRPC"
  },
  {
    "id": "api-083",
    "title": "WebSocket Rate Limit Missing",
    "issue": "No limit on WebSocket connection frequency.",
    "endpoint": "WS /ws/connect",
    "risk": "Resource Exhaustion",
    "impact": "Attackers can overwhelm server with connections.",
    "recommendation": "Implement connection rate limiting for WebSocket.",
    "category": "Rate Limiting & Abuse",
    "api_type": "WebSocket"
  },
  {
    "id": "api-084",
    "title": "Verbose SOAP Error Response",
    "issue": "SOAP fault exposes database connection details.",
    "endpoint": "POST /soap/login",
    "risk": "Information Disclosure",
    "impact": "Attackers can exploit database vulnerabilities.",
    "recommendation": "Sanitize SOAP fault messages in production.",
    "category": "Verbose Errors",
    "api_type": "SOAP"
  },
  {
    "id": "api-085",
    "title": "Insecure gRPC Default Config",
    "issue": "gRPC service uses insecure channel without TLS.",
    "endpoint": "gRPC /service.StreamData",
    "risk": "Data Interception",
    "impact": "Attackers can intercept sensitive data in transit.",
    "recommendation": "Enable TLS for all gRPC communications.",
    "category": "Insecure Defaults",
    "api_type": "gRPC"
  },
  {
    "id": "api-086",
    "title": "REST Overly Permissive CORS",
    "issue": "CORS allows all domains for sensitive endpoint.",
    "endpoint": "OPTIONS /api/transactions",
    "risk": "Cross-Origin Attacks",
    "impact": "Malicious sites can access transaction data.",
    "recommendation": "Restrict CORS to trusted domains only.",
    "category": "Overly Permissive CORS",
    "api_type": "REST"
  },
  {
    "id": "api-087",
    "title": "GraphQL Mass Assignment in Mutation",
    "issue": "Mutation allows setting 'accountStatus' field.",
    "endpoint": "POST /graphql",
    "risk": "Privilege Escalation",
    "impact": "Users can activate accounts without verification.",
    "recommendation": "Restrict sensitive fields in mutation inputs.",
    "category": "Mass Assignment",
    "api_type": "GraphQL"
  },
  {
    "id": "api-088",
    "title": "WebSocket Excessive Data Exposure",
    "issue": "WebSocket broadcasts sensitive user data to all clients.",
    "endpoint": "WS /ws/notifications",
    "risk": "Data Leakage",
    "impact": "Unauthorized clients receive sensitive data.",
    "recommendation": "Filter WebSocket messages to authorized clients.",
    "category": "Excessive Data Exposure",
    "api_type": "WebSocket"
  },
  {
    "id": "api-089",
    "title": "SOAP Admin Bypass",
    "issue": "SOAP endpoint allows admin access via parameter.",
    "endpoint": "POST /soap/admin",
    "risk": "Privilege Escalation",
    "impact": "Attackers can gain admin privileges.",
    "recommendation": "Validate admin roles server-side in SOAP handlers.",
    "category": "Access Control",
    "api_type": "SOAP"
  },
  {
    "id": "api-090",
    "title": "gRPC Weak Authentication",
    "issue": "gRPC uses static API key without rotation.",
    "endpoint": "gRPC /service.Authenticate",
    "risk": "Credential Exposure",
    "impact": "Attackers can reuse stolen keys indefinitely.",
    "recommendation": "Implement token-based auth with rotation.",
    "category": "Authentication",
    "api_type": "gRPC"
  },
  {
    "id": "api-091",
    "title": "REST No Rate Limit on Upload",
    "issue": "File upload endpoint has no rate limit.",
    "endpoint": "POST /api/upload",
    "risk": "Resource Exhaustion",
    "impact": "Attackers can overload storage with uploads.",
    "recommendation": "Set rate limits and size restrictions for uploads.",
    "category": "Rate Limiting & Abuse",
    "api_type": "REST"
  },
  {
    "id": "api-092",
    "title": "GraphQL Verbose Error Leak",
    "issue": "GraphQL error exposes resolver logic details.",
    "endpoint": "POST /graphql",
    "risk": "Information Disclosure",
    "impact": "Attackers can exploit resolver vulnerabilities.",
    "recommendation": "Sanitize GraphQL errors in production.",
    "category": "Verbose Errors",
    "api_type": "GraphQL"
  },
  {
    "id": "api-093",
    "title": "WebSocket Insecure Default",
    "issue": "WebSocket allows unencrypted connections.",
    "endpoint": "WS /ws/chat",
    "risk": "Data Interception",
    "impact": "Attackers can intercept chat messages.",
    "recommendation": "Enforce WSS (WebSocket Secure) protocol.",
    "category": "Insecure Defaults",
    "api_type": "WebSocket"
  },
  {
    "id": "api-094",
    "title": "SOAP Overly Permissive CORS",
    "issue": "CORS allows all origins for SOAP endpoint.",
    "endpoint": "OPTIONS /soap/*",
    "risk": "Cross-Origin Attacks",
    "impact": "Malicious sites can access SOAP services.",
    "recommendation": "Restrict CORS to trusted origins for SOAP.",
    "category": "Overly Permissive CORS",
    "api_type": "SOAP"
  },
  {
    "id": "api-095",
    "title": "REST Mass Assignment in Update",
    "issue": "Update allows changing 'userRole' field.",
    "endpoint": "PUT /api/users",
    "risk": "Privilege Escalation",
    "impact": "Users can escalate to admin roles.",
    "recommendation": "Whitelist updatable fields in updates.",
    "category": "Mass Assignment",
    "api_type": "REST"
  },
  {
    "id": "api-096",
    "title": "gRPC Excessive Data Exposure",
    "issue": "gRPC response includes sensitive metadata.",
    "endpoint": "gRPC /service.GetMetadata",
    "risk": "Data Leakage",
    "impact": "Attackers can access sensitive system metadata.",
    "recommendation": "Filter sensitive fields in gRPC responses.",
    "category": "Excessive Data Exposure",
    "api_type": "gRPC"
  },
  {
    "id": "api-097",
    "title": "WebSocket BOLA Vulnerability",
    "issue": "WebSocket allows accessing any channel by ID.",
    "endpoint": "WS /ws/channel/{channelId}",
    "risk": "Unauthorized Access",
    "impact": "Attackers can join private channels.",
    "recommendation": "Validate channel access permissions.",
    "category": "Access Control",
    "api_type": "WebSocket"
  },
  {
    "id": "api-098",
    "title": "SOAP Weak Authentication",
    "issue": "SOAP uses basic auth without HTTPS.",
    "endpoint": "POST /soap/auth",
    "risk": "Credential Exposure",
    "impact": "Attackers can intercept credentials in transit.",
    "recommendation": "Use HTTPS and token-based auth for SOAP.",
    "category": "Authentication",
    "api_type": "SOAP"
  },
  {
    "id": "api-099",
    "title": "GraphQL No Rate Limiting",
    "issue": "No limit on GraphQL subscription queries.",
    "endpoint": "POST /graphql",
    "risk": "Denial of Service",
    "impact": "Attackers can overload server with subscriptions.",
    "recommendation": "Implement subscription rate limits.",
    "category": "Rate Limiting & Abuse",
    "api_type": "GraphQL"
  },
  {
    "id": "api-100",
    "title": "REST Verbose Error with Config",
    "issue": "Error leaks server configuration details.",
    "endpoint": "GET /api/config",
    "risk": "Information Disclosure",
    "impact": "Attackers can exploit server settings.",
    "recommendation": "Sanitize error messages to exclude config data.",
    "category": "Verbose Errors",
    "api_type": "REST"
  },
  {
    "id": "api-101",
    "title": "gRPC Insecure Default Timeout",
    "issue": "gRPC calls have no timeout, risking hangs.",
    "endpoint": "gRPC /service.LongRunning",
    "risk": "Denial of Service",
    "impact": "Attackers can cause server resource exhaustion.",
    "recommendation": "Set strict timeouts for gRPC calls.",
    "category": "Insecure Defaults",
    "api_type": "gRPC"
  },
  {
    "id": "api-102",
    "title": "WebSocket Overly Permissive CORS",
    "issue": "CORS allows all origins for WebSocket endpoint.",
    "endpoint": "OPTIONS /ws/*",
    "risk": "Cross-Origin Attacks",
    "impact": "Malicious sites can connect to WebSocket.",
    "recommendation": "Restrict CORS for WebSocket endpoints.",
    "category": "Overly Permissive CORS",
    "api_type": "WebSocket"
  },
  {
    "id": "api-103",
    "title": "SOAP Mass Assignment in Request",
    "issue": "SOAP request allows setting 'isAdmin' field.",
    "endpoint": "POST /soap/user",
    "risk": "Privilege Escalation",
    "impact": "Attackers can gain admin privileges.",
    "recommendation": "Validate and restrict SOAP request fields.",
    "category": "Mass Assignment",
    "api_type": "SOAP"
  },
  {
    "id": "api-104",
    "title": "GraphQL Excessive Data in Subscription",
    "issue": "Subscription returns sensitive user data.",
    "endpoint": "POST /graphql",
    "risk": "Data Leakage",
    "impact": "Unauthorized clients receive sensitive updates.",
    "recommendation": "Filter subscription data to necessary fields.",
    "category": "Excessive Data Exposure",
    "api_type": "GraphQL"
  },
  {
    "id": "api-105",
    "title": "REST IDOR in Resource Access",
    "issue": "User can access any resource by modifying ID.",
    "endpoint": "GET /api/resources/{resourceId}",
    "risk": "Unauthorized Access",
    "impact": "Exposure of sensitive resources to attackers.",
    "recommendation": "Validate resource ownership before access.",
    "category": "Access Control",
    "api_type": "REST"
  },
  {
    "id": "api-106",
    "title": "gRPC Weak Token Validation",
    "issue": "gRPC accepts expired tokens.",
    "endpoint": "gRPC /service.Protected",
    "risk": "Unauthorized Access",
    "impact": "Attackers can reuse expired tokens.",
    "recommendation": "Validate token expiration in gRPC interceptors.",
    "category": "Authentication",
    "api_type": "gRPC"
  },
  {
    "id": "api-107",
    "title": "WebSocket No Rate Limit on Messages",
    "issue": "No limit on WebSocket message frequency.",
    "endpoint": "WS /ws/messages",
    "risk": "Resource Exhaustion",
    "impact": "Attackers can flood server with messages.",
    "recommendation": "Implement message rate limiting for WebSocket.",
    "category": "Rate Limiting & Abuse",
    "api_type": "WebSocket"
  },
  {
    "id": "api-108",
    "title": "SOAP Verbose Fault Message",
    "issue": "SOAP fault includes stack trace.",
    "endpoint": "POST /soap/process",
    "risk": "Information Disclosure",
    "impact": "Attackers can analyze code for vulnerabilities.",
    "recommendation": "Sanitize SOAP fault messages.",
    "category": "Verbose Errors",
    "api_type": "SOAP"
  },
  {
    "id": "api-109",
    "title": "REST Insecure Default Headers",
    "issue": "API exposes server version in headers.",
    "endpoint": "GET /api/status",
    "risk": "Information Disclosure",
    "impact": "Attackers can target known server vulnerabilities.",
    "recommendation": "Remove sensitive headers like server version.",
    "category": "Insecure Defaults",
    "api_type": "REST"
  },
  {
    "id": "api-110",
    "title": "GraphQL Overly Permissive CORS",
    "issue": "CORS allows all origins for GraphQL endpoint.",
    "endpoint": "OPTIONS /graphql",
    "risk": "Cross-Origin Attacks",
    "impact": "Malicious sites can query GraphQL API.",
    "recommendation": "Restrict CORS to trusted origins for GraphQL.",
    "category": "Overly Permissive CORS",
    "api_type": "GraphQL"
  },
  {
    "id": "api-111",
    "title": "gRPC Mass Assignment in Request",
    "issue": "gRPC request allows setting 'role' field.",
    "endpoint": "gRPC /service.UpdateUser",
    "risk": "Privilege Escalation",
    "impact": "Users can escalate privileges via requests.",
    "recommendation": "Restrict sensitive fields in gRPC messages.",
    "category": "Mass Assignment",
    "api_type": "gRPC"
  },
  {
    "id": "api-112",
    "title": "WebSocket Excessive Data Broadcast",
    "issue": "WebSocket sends sensitive data to all clients.",
    "endpoint": "WS /ws/updates",
    "risk": "Data Leakage",
    "impact": "Unauthorized clients receive sensitive data.",
    "recommendation": "Filter WebSocket broadcasts to authorized clients.",
    "category": "Excessive Data Exposure",
    "api_type": "WebSocket"
  },
  {
    "id": "api-113",
    "title": "SOAP BOLA Vulnerability",
    "issue": "SOAP request allows modifying any record by ID.",
    "endpoint": "POST /soap/records",
    "risk": "Unauthorized Modification",
    "impact": "Attackers can alter other users' records.",
    "recommendation": "Validate record ownership in SOAP handlers.",
    "category": "Access Control",
    "api_type": "SOAP"
  },
  {
    "id": "api-114",
    "title": "REST Weak Session Token",
    "issue": "Session tokens use predictable values.",
    "endpoint": "POST /api/login",
    "risk": "Session Hijacking",
    "impact": "Attackers can guess valid session tokens.",
    "recommendation": "Use cryptographically secure tokens.",
    "category": "Authentication",
    "api_type": "REST"
  },
  {
    "id": "api-115",
    "title": "gRPC No Rate Limiting",
    "issue": "No limit on gRPC request frequency.",
    "endpoint": "gRPC /service.StreamData",
    "risk": "Denial of Service",
    "impact": "Attackers can overwhelm server with requests.",
    "recommendation": "Implement rate limiting for gRPC services.",
    "category": "Rate Limiting & Abuse",
    "api_type": "gRPC"
  },
  {
    "id": "api-116",
    "title": "GraphQL Verbose Error with Schema",
    "issue": "Error leaks GraphQL schema details.",
    "endpoint": "POST /graphql",
    "risk": "Information Disclosure",
    "impact": "Attackers can map API for targeted attacks.",
    "recommendation": "Sanitize GraphQL error responses.",
    "category": "Verbose Errors",
    "api_type": "GraphQL"
  },
  {
    "id": "api-117",
    "title": "WebSocket Insecure Default Protocol",
    "issue": "WebSocket allows non-secure connections.",
    "endpoint": "WS /ws/stream",
    "risk": "Data Interception",
    "impact": "Attackers can intercept WebSocket data.",
    "recommendation": "Enforce WSS for all WebSocket connections.",
    "category": "Insecure Defaults",
    "api_type": "WebSocket"
  },
  {
    "id": "api-118",
    "title": "SOAP Overly Permissive Headers",
    "issue": "SOAP accepts arbitrary headers, risking injection.",
    "endpoint": "POST /soap/*",
    "risk": "Header Injection",
    "impact": "Attackers can manipulate SOAP requests.",
    "recommendation": "Validate and restrict SOAP headers.",
    "category": "Overly Permissive CORS",
    "api_type": "SOAP"
  },
  {
    "id": "api-119",
    "title": "REST Mass Assignment in Config",
    "issue": "API allows updating config via user input.",
    "endpoint": "PUT /api/config",
    "risk": "Security Misconfiguration",
    "impact": "Attackers can alter system configurations.",
    "recommendation": "Restrict config updates to admin endpoints.",
    "category": "Mass Assignment",
    "api_type": "REST"
  },
  {
    "id": "api-120",
    "title": "gRPC Excessive Data in Response",
    "issue": "gRPC response includes sensitive user data.",
    "endpoint": "gRPC /service.GetUser",
    "risk": "Data Leakage",
    "impact": "Unauthorized access to sensitive user data.",
    "recommendation": "Filter sensitive fields in gRPC responses.",
    "category": "Excessive Data Exposure",
    "api_type": "gRPC"
  },
  {
    "id": "api-121",
    "title": "WebSocket Admin Bypass",
    "issue": "WebSocket allows admin access via message parameter.",
    "endpoint": "WS /ws/admin",
    "risk": "Privilege Escalation",
    "impact": "Attackers can gain admin privileges.",
    "recommendation": "Validate admin roles server-side for WebSocket.",
    "category": "Access Control",
    "api_type": "WebSocket"
  },
  {
    "id": "api-122",
    "title": "SOAP Weak Token Validation",
    "issue": "SOAP accepts invalid or expired tokens.",
    "endpoint": "POST /soap/auth",
    "risk": "Unauthorized Access",
    "impact": "Attackers can bypass authentication.",
    "recommendation": "Validate tokens strictly in SOAP handlers.",
    "category": "Authentication",
    "api_type": "SOAP"
  },
  {
    "id": "api-123",
    "title": "REST No Rate Limit on Login",
    "issue": "No limit on login attempts.",
    "endpoint": "POST /api/login",
    "risk": "Brute Force Attacks",
    "impact": "Attackers can attempt unlimited logins.",
    "recommendation": "Implement login attempt rate limiting.",
    "category": "Rate Limiting & Abuse",
    "api_type": "REST"
  },
  {
    "id": "api-124",
    "title": "gRPC Verbose Error Leak",
    "issue": "gRPC error exposes internal service details.",
    "endpoint": "gRPC /service.Process",
    "risk": "Information Disclosure",
    "impact": "Attackers can exploit service vulnerabilities.",
    "recommendation": "Sanitize gRPC error messages.",
    "category": "Verbose Errors",
    "api_type": "gRPC"
  },
  {
    "id": "api-125",
    "title": "GraphQL Insecure Default Resolver",
    "issue": "Default resolver exposes sensitive fields.",
    "endpoint": "POST /graphql",
    "risk": "Data Leakage",
    "impact": "Attackers can access restricted data.",
    "recommendation": "Configure resolvers to exclude sensitive fields.",
    "category": "Insecure Defaults",
    "api_type": "GraphQL"
  },
  {
    "id": "api-126",
    "title": "WebSocket Overly Permissive Origin",
    "issue": "WebSocket allows all origins for connection.",
    "endpoint": "WS /ws/connect",
    "risk": "Cross-Origin Attacks",
    "impact": "Malicious sites can establish WebSocket connections.",
    "recommendation": "Restrict WebSocket origins to trusted domains.",
    "category": "Overly Permissive CORS",
    "api_type": "WebSocket"
  },
  {
    "id": "api-127",
    "title": "SOAP Mass Assignment in Update",
    "issue": "SOAP allows updating sensitive fields like 'balance'.",
    "endpoint": "POST /soap/update",
    "risk": "Financial Fraud",
    "impact": "Attackers can manipulate financial data.",
    "recommendation": "Restrict sensitive fields in SOAP updates.",
    "category": "Mass Assignment",
    "api_type": "SOAP"
  },
  {
    "id": "api-128",
    "title": "REST Excessive Data in Response",
    "issue": "API returns sensitive fields in public response.",
    "endpoint": "GET /api/public",
    "risk": "Data Leakage",
    "impact": "Unauthorized access to sensitive data.",
    "recommendation": "Filter response data to exclude sensitive fields.",
    "category": "Excessive Data Exposure",
    "api_type": "REST"
  },
  {
    "id": "api-129",
    "title": "gRPC BOLA in Data Access",
    "issue": "gRPC allows accessing any data by ID.",
    "endpoint": "gRPC /service.GetData",
    "risk": "Unauthorized Access",
    "impact": "Exposure of sensitive data to attackers.",
    "recommendation": "Validate data ownership in gRPC services.",
    "category": "Access Control",
    "api_type": "gRPC"
  },
  {
    "id": "api-130",
    "title": "WebSocket Weak Authentication",
    "issue": "WebSocket uses weak token for authentication.",
    "endpoint": "WS /ws/auth",
    "risk": "Unauthorized Access",
    "impact": "Attackers can bypass WebSocket authentication.",
    "recommendation": "Use strong, secure tokens for WebSocket auth.",
    "category": "Authentication",
    "api_type": "WebSocket"
  },
  {
    "id": "api-131",
    "title": "GraphQL No Rate Limit on Mutations",
    "issue": "No limit on GraphQL mutation frequency.",
    "endpoint": "POST /graphql",
    "risk": "Denial of Service",
    "impact": "Attackers can overload server with mutations.",
    "recommendation": "Implement mutation rate limiting.",
    "category": "Rate Limiting & Abuse",
    "api_type": "GraphQL"
  },
  {
    "id": "api-132",
    "title": "SOAP Verbose Error with WSDL",
    "issue": "SOAP error exposes WSDL schema details.",
    "endpoint": "POST /soap/service",
    "risk": "Information Disclosure",
    "impact": "Attackers can map SOAP service structure.",
    "recommendation": "Sanitize SOAP errors to exclude WSDL data.",
    "category": "Verbose Errors",
    "api_type": "SOAP"
  },
  {
    "id": "api-133",
    "title": "REST Insecure Default Token",
    "issue": "API uses default token for public access.",
    "endpoint": "GET /api/public",
    "risk": "Unauthorized Access",
    "impact": "Attackers can access API with known token.",
    "recommendation": "Generate unique tokens per client.",
    "category": "Insecure Defaults",
    "api_type": "REST"
  },
  {
    "id": "api-134",
    "title": "gRPC Overly Permissive CORS",
    "issue": "CORS allows all origins for gRPC gateway.",
    "endpoint": "OPTIONS /grpc/*",
    "risk": "Cross-Origin Attacks",
    "impact": "Malicious sites can access gRPC services.",
    "recommendation": "Restrict CORS for gRPC gateway endpoints.",
    "category": "Overly Permissive CORS",
    "api_type": "gRPC"
  },
  {
    "id": "api-135",
    "title": "WebSocket Mass Assignment in Message",
    "issue": "WebSocket allows setting 'role' in messages.",
    "endpoint": "WS /ws/messages",
    "risk": "Privilege Escalation",
    "impact": "Users can escalate privileges via messages.",
    "recommendation": "Restrict sensitive fields in WebSocket messages.",
    "category": "Mass Assignment",
    "api_type": "WebSocket"
  },
  {
    "id": "api-136",
    "title": "GraphQL Excessive Data in Query",
    "issue": "Query returns sensitive fields unnecessarily.",
    "endpoint": "POST /graphql",
    "risk": "Data Leakage",
    "impact": "Exposes sensitive data to unauthorized users.",
    "recommendation": "Limit fields in GraphQL query responses.",
    "category": "Excessive Data Exposure",
    "api_type": "GraphQL"
  },
  {
    "id": "api-137",
    "title": "SOAP IDOR in Data Access",
    "issue": "SOAP request allows accessing any data by ID.",
    "endpoint": "POST /soap/data",
    "risk": "Unauthorized Access",
    "impact": "Exposure of sensitive data to attackers.",
    "recommendation": "Validate data ownership in SOAP requests.",
    "category": "Access Control",
    "api_type": "SOAP"
  },
  {
    "id": "api-138",
    "title": "REST Weak Password Policy",
    "issue": "API accepts weak passwords for authentication.",
    "endpoint": "POST /api/register",
    "risk": "Account Compromise",
    "impact": "Attackers can brute force weak passwords.",
    "recommendation": "Enforce strong password policies.",
    "category": "Authentication",
    "api_type": "REST"
  },
  {
    "id": "api-139",
    "title": "gRPC No Rate Limit on Stream",
    "issue": "No limit on gRPC streaming requests.",
    "endpoint": "gRPC /service.StreamData",
    "risk": "Denial of Service",
    "impact": "Attackers can overload server with streams.",
    "recommendation": "Implement streaming rate limits.",
    "category": "Rate Limiting & Abuse",
    "api_type": "gRPC"
  },
  {
    "id": "api-140",
    "title": "WebSocket Verbose Error Broadcast",
    "issue": "WebSocket error messages expose server details.",
    "endpoint": "WS /ws/connect",
    "risk": "Information Disclosure",
    "impact": "Attackers can exploit server vulnerabilities.",
    "recommendation": "Sanitize WebSocket error messages.",
    "category": "Verbose Errors",
    "api_type": "WebSocket"
  },
  {
    "id": "api-141",
    "title": "GraphQL Insecure Default Schema",
    "issue": "Default schema exposes internal fields.",
    "endpoint": "POST /graphql",
    "risk": "Data Leakage",
    "impact": "Attackers can access hidden fields.",
    "recommendation": "Hide internal fields in GraphQL schema.",
    "category": "Insecure Defaults",
    "api_type": "GraphQL"
  },
  {
    "id": "api-142",
    "title": "SOAP Overly Permissive Methods",
    "issue": "SOAP allows all HTTP methods.",
    "endpoint": "POST /soap/*",
    "risk": "Cross-Origin Attacks",
    "impact": "Malicious methods can bypass controls.",
    "recommendation": "Restrict SOAP to necessary HTTP methods.",
    "category": "Overly Permissive CORS",
    "api_type": "SOAP"
  },
  {
    "id": "api-143",
    "title": "REST Mass Assignment in Settings",
    "issue": "API allows updating security settings.",
    "endpoint": "PUT /api/settings",
    "risk": "Security Misconfiguration",
    "impact": "Attackers can disable security features.",
    "recommendation": "Restrict settings updates to admins.",
    "category": "Mass Assignment",
    "api_type": "REST"
  },
  {
    "id": "api-144",
    "title": "gRPC Excessive Data in Stream",
    "issue": "gRPC stream includes sensitive metadata.",
    "endpoint": "gRPC /service.StreamMetadata",
    "risk": "Data Leakage",
    "impact": "Unauthorized access to sensitive metadata.",
    "recommendation": "Filter sensitive data in gRPC streams.",
    "category": "Excessive Data Exposure",
    "api_type": "gRPC"
  },
  {
    "id": "api-145",
    "title": "WebSocket BOLA in Channel Access",
    "issue": "WebSocket allows accessing any channel by ID.",
    "endpoint": "WS /ws/channels/{channelId}",
    "risk": "Unauthorized Access",
    "impact": "Attackers can access private channels.",
    "recommendation": "Validate channel access permissions.",
    "category": "Access Control",
    "api_type": "WebSocket"
  },
  {
    "id": "api-146",
    "title": "SOAP No Token Revocation",
    "issue": "No mechanism to revoke SOAP tokens.",
    "endpoint": "POST /soap/auth",
    "risk": "Unauthorized Access",
    "impact": "Compromised tokens remain valid.",
    "recommendation": "Implement token revocation for SOAP.",
    "category": "Authentication",
    "api_type": "SOAP"
  },
  {
    "id": "api-147",
    "title": "REST No Rate Limit on Export",
    "issue": "Data export endpoint has no limits.",
    "endpoint": "GET /api/export",
    "risk": "Resource Exhaustion",
    "impact": "Attackers can overload server with exports.",
    "recommendation": "Implement rate limits on export endpoints.",
    "category": "Rate Limiting & Abuse",
    "api_type": "REST"
  },
  {
    "id": "api-148",
    "title": "gRPC Verbose Error with Protobuf",
    "issue": "Error leaks protobuf schema details.",
    "endpoint": "gRPC /service.Process",
    "risk": "Information Disclosure",
    "impact": "Attackers can map gRPC service structure.",
    "recommendation": "Sanitize gRPC error messages.",
    "category": "Verbose Errors",
    "api_type": "gRPC"
  },
  {
    "id": "api-149",
    "title": "WebSocket Insecure Default Timeout",
    "issue": "WebSocket connections have no timeout.",
    "endpoint": "WS /ws/stream",
    "risk": "Resource Exhaustion",
    "impact": "Attackers can maintain open connections indefinitely.",
    "recommendation": "Set timeouts for WebSocket connections.",
    "category": "Insecure Defaults",
    "api_type": "WebSocket"
  },
  {
    "id": "api-150",
    "title": "GraphQL Overly Permissive CORS",
    "issue": "CORS allows credentials with all origins.",
    "endpoint": "OPTIONS /graphql",
    "risk": "Cross-Origin Attacks",
    "impact": "Malicious sites can access GraphQL with credentials.",
    "recommendation": "Disable credentials in CORS for GraphQL.",
    "category": "Overly Permissive CORS",
    "api_type": "GraphQL"
  }
  {
    "id": "api-151",
    "title": "Partner API IDOR Vulnerability",
    "issue": "Partner API allows access to other partners' data via ID manipulation.",
    "endpoint": "GET /partner-api/data/{partnerId}",
    "risk": "Unauthorized Access",
    "impact": "Exposure of sensitive partner data to unauthorized entities.",
    "recommendation": "Implement partner-specific access controls.",
    "category": "Access Control",
    "api_type": "Partner APIs"
  },
  {
    "id": "api-152",
    "title": "Composite API Weak Authentication",
    "issue": "Composite API uses single shared key for all services.",
    "endpoint": "POST /composite-api/integrate",
    "risk": "Credential Exposure",
    "impact": "Compromised key grants access to all integrated services.",
    "recommendation": "Use unique tokens per service with scope validation.",
    "category": "Authentication",
    "api_type": "Composite APIs"
  },
  {
    "id": "api-153",
    "title": "Public API No Rate Limiting",
    "issue": "Public API allows unlimited requests to data endpoint.",
    "endpoint": "GET /public-api/data",
    "risk": "Resource Exhaustion",
    "impact": "Attackers can overload server with requests.",
    "recommendation": "Implement strict rate limiting for public APIs.",
    "category": "Rate Limiting & Abuse",
    "api_type": "Public APIs"
  },
  {
    "id": "api-154",
    "title": "Internal API Verbose Error",
    "issue": "Internal API error exposes server stack trace.",
    "endpoint": "POST /internal-api/process",
    "risk": "Information Disclosure",
    "impact": "Attackers can exploit server vulnerabilities.",
    "recommendation": "Sanitize error messages for internal APIs.",
    "category": "Verbose Errors",
    "api_type": "Internal APIs"
  },
  {
    "id": "api-155",
    "title": "Private API Insecure Defaults",
    "issue": "Private API uses default credentials for access.",
    "endpoint": "GET /private-api/config",
    "risk": "Unauthorized Access",
    "impact": "Attackers can access private API with known credentials.",
    "recommendation": "Change default credentials and enforce strong auth.",
    "category": "Insecure Defaults",
    "api_type": "Private APIs"
  },
  {
    "id": "api-156",
    "title": "REST API Overly Permissive CORS",
    "issue": "CORS allows all origins for REST API endpoint.",
    "endpoint": "OPTIONS /rest-api/*",
    "risk": "Cross-Origin Attacks",
    "impact": "Malicious sites can access REST API data.",
    "recommendation": "Restrict CORS to trusted origins only.",
    "category": "Overly Permissive CORS",
    "api_type": "REST APIs"
  },
  {
    "id": "api-157",
    "title": "JSON-RPC Mass Assignment",
    "issue": "JSON-RPC allows setting sensitive fields like 'role'.",
    "endpoint": "POST /json-rpc/update",
    "risk": "Privilege Escalation",
    "impact": "Users can escalate privileges via RPC calls.",
    "recommendation": "Whitelist allowed fields in JSON-RPC requests.",
    "category": "Mass Assignment",
    "api_type": "JSON-RPC"
  },
  {
    "id": "api-158",
    "title": "SOAP API Excessive Data Exposure",
    "issue": "SOAP response includes sensitive user data.",
    "endpoint": "POST /soap-api/user",
    "risk": "Data Leakage",
    "impact": "Unauthorized access to sensitive user information.",
    "recommendation": "Filter sensitive fields in SOAP responses.",
    "category": "Excessive Data Exposure",
    "api_type": "SOAP APIs"
  },
  {
    "id": "api-159",
    "title": "GraphQL BOLA Vulnerability",
    "issue": "GraphQL query allows accessing any record by ID.",
    "endpoint": "POST /graphql",
    "risk": "Unauthorized Access",
    "impact": "Exposure of sensitive data to unauthorized users.",
    "recommendation": "Validate object-level authorization in resolvers.",
    "category": "Access Control",
    "api_type": "GraphQL"
  },
  {
    "id": "api-160",
    "title": "Open API Weak Token Validation",
    "issue": "Open API accepts tokens without scope checks.",
    "endpoint": "GET /open-api/resources",
    "risk": "Unauthorized Access",
    "impact": "Attackers can perform unauthorized actions.",
    "recommendation": "Validate token scopes for all actions.",
    "category": "Authentication",
    "api_type": "Open APIs"
  },
  {
    "id": "api-161",
    "title": "REST No Rate Limit on Search",
    "issue": "No limit on search endpoint requests.",
    "endpoint": "GET /rest/search",
    "risk": "Resource Exhaustion",
    "impact": "Attackers can overload search functionality.",
    "recommendation": "Implement rate limiting on search endpoints.",
    "category": "Rate Limiting & Abuse",
    "api_type": "REST"
  },
  {
    "id": "api-162",
    "title": "Soap Verbose Fault Message",
    "issue": "SOAP fault exposes database schema details.",
    "endpoint": "POST /soap/service",
    "risk": "Information Disclosure",
    "impact": "Attackers can map database for attacks.",
    "recommendation": "Sanitize SOAP fault messages.",
    "category": "Verbose Errors",
    "api_type": "Soap"
  },
  {
    "id": "api-163",
    "title": "Partner API Insecure Defaults",
    "issue": "Partner API uses insecure HTTP protocol.",
    "endpoint": "GET /partner-api/data",
    "risk": "Data Interception",
    "impact": "Attackers can intercept partner data in transit.",
    "recommendation": "Enforce HTTPS for all partner API calls.",
    "category": "Insecure Defaults",
    "api_type": "Partner APIs"
  },
  {
    "id": "api-164",
    "title": "Composite API Overly Permissive CORS",
    "issue": "CORS allows all origins for composite API.",
    "endpoint": "OPTIONS /composite-api/*",
    "risk": "Cross-Origin Attacks",
    "impact": "Malicious sites can access composite API data.",
    "recommendation": "Restrict CORS to trusted domains.",
    "category": "Overly Permissive CORS",
    "api_type": "Composite APIs"
  },
  {
    "id": "api-165",
    "title": "Public API Mass Assignment",
    "issue": "Public API allows setting 'verified' status.",
    "endpoint": "POST /public-api/users",
    "risk": "Privilege Escalation",
    "impact": "Attackers can create verified accounts.",
    "recommendation": "Restrict sensitive fields in public API.",
    "category": "Mass Assignment",
    "api_type": "Public APIs"
  },
  {
    "id": "api-166",
    "title": "Internal API Excessive Data Exposure",
    "issue": "Internal API returns sensitive config data.",
    "endpoint": "GET /internal-api/config",
    "risk": "Data Leakage",
    "impact": "Attackers with access can exploit configurations.",
    "recommendation": "Filter sensitive data in internal API responses.",
    "category": "Excessive Data Exposure",
    "api_type": "Internal APIs"
  },
  {
    "id": "api-167",
    "title": "Private API Admin Bypass",
    "issue": "Private API allows admin access via parameter.",
    "endpoint": "POST /private-api/admin",
    "risk": "Privilege Escalation",
    "impact": "Attackers can gain admin privileges.",
    "recommendation": "Validate admin roles server-side.",
    "category": "Access Control",
    "api_type": "Private APIs"
  },
  {
    "id": "api-168",
    "title": "JSON-RPC Weak Authentication",
    "issue": "JSON-RPC uses static API key without rotation.",
    "endpoint": "POST /json-rpc/auth",
    "risk": "Credential Exposure",
    "impact": "Stolen keys grant indefinite access.",
    "recommendation": "Implement token-based auth with rotation.",
    "category": "Authentication",
    "api_type": "JSON-RPC"
  },
  {
    "id": "api-169",
    "title": "SOAP API No Rate Limiting",
    "issue": "No limit on SOAP request frequency.",
    "endpoint": "POST /soap-api/process",
    "risk": "Denial of Service",
    "impact": "Attackers can overload server with requests.",
    "recommendation": "Implement rate limiting for SOAP APIs.",
    "category": "Rate Limiting & Abuse",
    "api_type": "SOAP APIs"
  },
  {
    "id": "api-170",
    "title": "GraphQL Verbose Error Leak",
    "issue": "GraphQL error exposes resolver logic.",
    "endpoint": "POST /graphql",
    "risk": "Information Disclosure",
    "impact": "Attackers can exploit resolver vulnerabilities.",
    "recommendation": "Sanitize GraphQL error messages.",
    "category": "Verbose Errors",
    "api_type": "GraphQL"
  },
  {
    "id": "api-171",
    "title": "Open API Insecure Default Token",
    "issue": "Open API uses default token for access.",
    "endpoint": "GET /open-api/data",
    "risk": "Unauthorized Access",
    "impact": "Attackers can access API with known token.",
    "recommendation": "Generate unique tokens per client.",
    "category": "Insecure Defaults",
    "api_type": "Open APIs"
  },
  {
    "id": "api-172",
    "title": "REST Overly Permissive CORS",
    "issue": "CORS allows credentials with all origins.",
    "endpoint": "OPTIONS /rest/*",
    "risk": "Cross-Origin Attacks",
    "impact": "Malicious sites can access REST data with credentials.",
    "recommendation": "Disable credentials in CORS for REST.",
    "category": "Overly Permissive CORS",
    "api_type": "REST"
  },
  {
    "id": "api-173",
    "title": "Soap Mass Assignment in Request",
    "issue": "SOAP allows setting 'isAdmin' field.",
    "endpoint": "POST /soap/user",
    "risk": "Privilege Escalation",
    "impact": "Attackers can gain admin privileges.",
    "recommendation": "Restrict sensitive fields in SOAP requests.",
    "category": "Mass Assignment",
    "api_type": "Soap"
  },
  {
    "id": "api-174",
    "title": "Partner API Excessive Data Exposure",
    "issue": "Partner API returns sensitive partner metadata.",
    "endpoint": "GET /partner-api/metadata",
    "risk": "Data Leakage",
    "impact": "Unauthorized access to partner metadata.",
    "recommendation": "Filter sensitive fields in partner API responses.",
    "category": "Excessive Data Exposure",
    "api_type": "Partner APIs"
  },
  {
    "id": "api-175",
    "title": "Composite API BOLA Vulnerability",
    "issue": "Composite API allows modifying any record by ID.",
    "endpoint": "POST /composite-api/update",
    "risk": "Unauthorized Modification",
    "impact": "Attackers can alter other users' data.",
    "recommendation": "Validate record ownership in composite API.",
    "category": "Access Control",
    "api_type": "Composite APIs"
  },
  {
    "id": "api-176",
    "title": "Public API Weak Token Validation",
    "issue": "Public API accepts expired tokens.",
    "endpoint": "GET /public-api/resources",
    "risk": "Unauthorized Access",
    "impact": "Attackers can reuse expired tokens.",
    "recommendation": "Validate token expiration strictly.",
    "category": "Authentication",
    "api_type": "Public APIs"
  },
  {
    "id": "api-177",
    "title": "Internal API No Rate Limiting",
    "issue": "No limit on internal API request frequency.",
    "endpoint": "POST /internal-api/process",
    "risk": "Resource Exhaustion",
    "impact": "Attackers with access can overload server.",
    "recommendation": "Implement rate limiting for internal APIs.",
    "category": "Rate Limiting & Abuse",
    "api_type": "Internal APIs"
  },
  {
    "id": "api-178",
    "title": "Private API Verbose Error",
    "issue": "Private API error leaks server details.",
    "endpoint": "GET /private-api/status",
    "risk": "Information Disclosure",
    "impact": "Attackers can exploit server vulnerabilities.",
    "recommendation": "Sanitize error messages for private APIs.",
    "category": "Verbose Errors",
    "api_type": "Private APIs"
  },
  {
    "id": "api-179",
    "title": "JSON-RPC Insecure Defaults",
    "issue": "JSON-RPC uses insecure HTTP protocol.",
    "endpoint": "POST /json-rpc/call",
    "risk": "Data Interception",
    "impact": "Attackers can intercept RPC data.",
    "recommendation": "Enforce HTTPS for JSON-RPC calls.",
    "category": "Insecure Defaults",
    "api_type": "JSON-RPC"
  },
  {
    "id": "api-180",
    "title": "SOAP API Overly Permissive CORS",
    "issue": "CORS allows all origins for SOAP API.",
    "endpoint": "OPTIONS /soap-api/*",
    "risk": "Cross-Origin Attacks",
    "impact": "Malicious sites can access SOAP API.",
    "recommendation": "Restrict CORS to trusted origins.",
    "category": "Overly Permissive CORS",
    "api_type": "SOAP APIs"
  },
  {
    "id": "api-181",
    "title": "GraphQL Mass Assignment in Mutation",
    "issue": "Mutation allows setting 'accountBalance'.",
    "endpoint": "POST /graphql",
    "risk": "Financial Fraud",
    "impact": "Attackers can manipulate account balances.",
    "recommendation": "Restrict sensitive fields in mutations.",
    "category": "Mass Assignment",
    "api_type": "GraphQL"
  },
  {
    "id": "api-182",
    "title": "Open API Excessive Data Exposure",
    "issue": "Open API returns sensitive fields in response.",
    "endpoint": "GET /open-api/users",
    "risk": "Data Leakage",
    "impact": "Unauthorized access to sensitive data.",
    "recommendation": "Filter sensitive fields in open API responses.",
    "category": "Excessive Data Exposure",
    "api_type": "Open APIs"
  },
  {
    "id": "api-183",
    "title": "REST Admin Bypass via Parameter",
    "issue": "REST API grants admin access via query parameter.",
    "endpoint": "GET /rest/admin?role=admin",
    "risk": "Privilege Escalation",
    "impact": "Attackers can gain admin privileges.",
    "recommendation": "Validate roles server-side.",
    "category": "Access Control",
    "api_type": "REST"
  },
  {
    "id": "api-184",
    "title": "Soap Weak Authentication",
    "issue": "SOAP uses basic auth without HTTPS.",
    "endpoint": "POST /soap/auth",
    "risk": "Credential Exposure",
    "impact": "Attackers can intercept credentials.",
    "recommendation": "Use HTTPS and token-based auth.",
    "category": "Authentication",
    "api_type": "Soap"
  },
  {
    "id": "api-185",
    "title": "Partner API No Rate Limiting",
    "issue": "No limit on partner API request frequency.",
    "endpoint": "POST /partner-api/process",
    "risk": "Resource Exhaustion",
    "impact": "Attackers can overload partner API.",
    "recommendation": "Implement rate limiting for partner APIs.",
    "category": "Rate Limiting & Abuse",
    "api_type": "Partner APIs"
  },
  {
    "id": "api-186",
    "title": "Composite API Verbose Error",
    "issue": "Composite API error exposes service details.",
    "endpoint": "POST /composite-api/integrate",
    "risk": "Information Disclosure",
    "impact": "Attackers can exploit service vulnerabilities.",
    "recommendation": "Sanitize composite API error messages.",
    "category": "Verbose Errors",
    "api_type": "Composite APIs"
  },
  {
    "id": "api-187",
    "title": "Public API Insecure Defaults",
    "issue": "Public API uses weak encryption for data.",
    "endpoint": "GET /public-api/data",
    "risk": "Data Interception",
    "impact": "Attackers can decrypt sensitive data.",
    "recommendation": "Use strong encryption like TLS 1.3.",
    "category": "Insecure Defaults",
    "api_type": "Public APIs"
  },
  {
    "id": "api-188",
    "title": "Internal API Overly Permissive CORS",
    "issue": "CORS allows all origins for internal API.",
    "endpoint": "OPTIONS /internal-api/*",
    "risk": "Cross-Origin Attacks",
    "impact": "Malicious sites can access internal API.",
    "recommendation": "Restrict CORS for internal APIs.",
    "category": "Overly Permissive CORS",
    "api_type": "Internal APIs"
  },
  {
    "id": "api-189",
    "title": "Private API Mass Assignment",
    "issue": "Private API allows setting 'securityLevel'.",
    "endpoint": "POST /private-api/config",
    "risk": "Security Misconfiguration",
    "impact": "Attackers can alter security settings.",
    "recommendation": "Restrict sensitive fields in private API.",
    "category": "Mass Assignment",
    "api_type": "Private APIs"
  },
  {
    "id": "api-190",
    "title": "JSON-RPC Excessive Data Exposure",
    "issue": "JSON-RPC returns sensitive fields in response.",
    "endpoint": "POST /json-rpc/call",
    "risk": "Data Leakage",
    "impact": "Unauthorized access to sensitive data.",
    "recommendation": "Filter sensitive fields in JSON-RPC responses.",
    "category": "Excessive Data Exposure",
    "api_type": "JSON-RPC"
  },
  {
    "id": "api-191",
    "title": "SOAP API BOLA Vulnerability",
    "issue": "SOAP API allows modifying any record by ID.",
    "endpoint": "POST /soap-api/records",
    "risk": "Unauthorized Modification",
    "impact": "Attackers can alter other users' data.",
    "recommendation": "Validate record ownership in SOAP API.",
    "category": "Access Control",
    "api_type": "SOAP APIs"
  },
  {
    "id": "api-192",
    "title": "GraphQL Weak Token Validation",
    "issue": "GraphQL accepts tokens without expiration checks.",
    "endpoint": "POST /graphql",
    "risk": "Unauthorized Access",
    "impact": "Attackers can reuse expired tokens.",
    "recommendation": "Validate token expiration in GraphQL.",
    "category": "Authentication",
    "api_type": "GraphQL"
  },
  {
    "id": "api-193",
    "title": "Open API No Rate Limiting",
    "issue": "No limit on open API request frequency.",
    "endpoint": "GET /open-api/data",
    "risk": "Resource Exhaustion",
    "impact": "Attackers can overload open API.",
    "recommendation": "Implement rate limiting for open APIs.",
    "category": "Rate Limiting & Abuse",
    "api_type": "Open APIs"
  },
  {
    "id": "api-194",
    "title": "REST Verbose Error with Config",
    "issue": "REST error leaks configuration details.",
    "endpoint": "GET /rest/config",
    "risk": "Information Disclosure",
    "impact": "Attackers can exploit config vulnerabilities.",
    "recommendation": "Sanitize REST error messages.",
    "category": "Verbose Errors",
    "api_type": "REST"
  },
  {
    "id": "api-195",
    "title": "Soap Insecure Default Token",
    "issue": "SOAP uses default token for access.",
    "endpoint": "POST /soap/auth",
    "risk": "Unauthorized Access",
    "impact": "Attackers can access SOAP with known token.",
    "recommendation": "Generate unique tokens for SOAP.",
    "category": "Insecure Defaults",
    "api_type": "Soap"
  },
  {
    "id": "api-196",
    "title": "Partner API Overly Permissive CORS",
    "issue": "CORS allows all origins for partner API.",
    "endpoint": "OPTIONS /partner-api/*",
    "risk": "Cross-Origin Attacks",
    "impact": "Malicious sites can access partner API.",
    "recommendation": "Restrict CORS for partner APIs.",
    "category": "Overly Permissive CORS",
    "api_type": "Partner APIs"
  },
  {
    "id": "api-197",
    "title": "Composite API Mass Assignment",
    "issue": "Composite API allows setting 'accessLevel'.",
    "endpoint": "POST /composite-api/update",
    "risk": "Privilege Escalation",
    "impact": "Attackers can escalate privileges.",
    "recommendation": "Restrict sensitive fields in composite API.",
    "category": "Mass Assignment",
    "api_type": "Composite APIs"
  },
  {
    "id": "api-198",
    "title": "Public API Excessive Data Exposure",
    "issue": "Public API returns sensitive user data.",
    "endpoint": "GET /public-api/users",
    "risk": "Data Leakage",
    "impact": "Unauthorized access to sensitive data.",
    "recommendation": "Filter sensitive fields in public API responses.",
    "category": "Excessive Data Exposure",
    "api_type": "Public APIs"
  },
  {
    "id": "api-199",
    "title": "Internal API Admin Bypass",
    "issue": "Internal API allows admin access via header.",
    "endpoint": "POST /internal-api/admin",
    "risk": "Privilege Escalation",
    "impact": "Attackers can gain admin privileges.",
    "recommendation": "Validate admin roles server-side.",
    "category": "Access Control",
    "api_type": "Internal APIs"
  },
  {
    "id": "api-200",
    "title": "Private API Weak Authentication",
    "issue": "Private API uses weak API key.",
    "endpoint": "GET /private-api/data",
    "risk": "Credential Exposure",
    "impact": "Attackers can access private API.",
    "recommendation": "Use strong, rotated API keys.",
    "category": "Authentication",
    "api_type": "Private APIs"
  },
  {
    "id": "api-201",
    "title": "JSON-RPC No Rate Limiting",
    "issue": "No limit on JSON-RPC request frequency.",
    "endpoint": "POST /json-rpc/call",
    "risk": "Resource Exhaustion",
    "impact": "Attackers can overload JSON-RPC server.",
    "recommendation": "Implement rate limiting for JSON-RPC.",
    "category": "Rate Limiting & Abuse",
    "api_type": "JSON-RPC"
  },
  {
    "id": "api-202",
    "title": "SOAP API Verbose Error",
    "issue": "SOAP error exposes stack trace.",
    "endpoint": "POST /soap-api/service",
    "risk": "Information Disclosure",
    "impact": "Attackers can exploit code vulnerabilities.",
    "recommendation": "Sanitize SOAP API error messages.",
    "category": "Verbose Errors",
    "api_type": "SOAP APIs"
  },
  {
    "id": "api-203",
    "title": "GraphQL Insecure Default Schema",
    "issue": "Default schema exposes internal fields.",
    "endpoint": "POST /graphql",
    "risk": "Data Leakage",
    "impact": "Attackers can access hidden fields.",
    "recommendation": "Hide internal fields in GraphQL schema.",
    "category": "Insecure Defaults",
    "api_type": "GraphQL"
  },
  {
    "id": "api-204",
    "title": "Open API Overly Permissive CORS",
    "issue": "CORS allows all origins for open API.",
    "endpoint": "OPTIONS /open-api/*",
    "risk": "Cross-Origin Attacks",
    "impact": "Malicious sites can access open API.",
    "recommendation": "Restrict CORS for open APIs.",
    "category": "Overly Permissive CORS",
    "api_type": "Open APIs"
  },
  {
    "id": "api-205",
    "title": "REST Mass Assignment in Update",
    "issue": "REST allows updating 'userRole' field.",
    "endpoint": "PUT /rest/users",
    "risk": "Privilege Escalation",
    "impact": "Users can escalate to admin roles.",
    "recommendation": "Whitelist updatable fields in REST.",
    "category": "Mass Assignment",
    "api_type": "REST"
  },
  {
    "id": "api-206",
    "title": "Soap Excessive Data Exposure",
    "issue": "SOAP response includes sensitive metadata.",
    "endpoint": "POST /soap/metadata",
    "risk": "Data Leakage",
    "impact": "Unauthorized access to metadata.",
    "recommendation": "Filter sensitive fields in SOAP responses.",
    "category": "Excessive Data Exposure",
    "api_type": "Soap"
  },
  {
    "id": "api-207",
    "title": "Partner API BOLA Vulnerability",
    "issue": "Partner API allows accessing any data by ID.",
    "endpoint": "GET /partner-api/data/{id}",
    "risk": "Unauthorized Access",
    "impact": "Exposure of sensitive partner data.",
    "recommendation": "Validate data ownership in partner API.",
    "category": "Access Control",
    "api_type": "Partner APIs"
  },
  {
    "id": "api-208",
    "title": "Composite API Weak Token",
    "issue": "Composite API uses predictable tokens.",
    "endpoint": "POST /composite-api/auth",
    "risk": "Unauthorized Access",
    "impact": "Attackers can guess valid tokens.",
    "recommendation": "Use high-entropy tokens for composite API.",
    "category": "Authentication",
    "api_type": "Composite APIs"
  },
  {
    "id": "api-209",
    "title": "Public API No Rate Limit on Upload",
    "issue": "No limit on file upload requests.",
    "endpoint": "POST /public-api/upload",
    "risk": "Resource Exhaustion",
    "impact": "Attackers can overload storage.",
    "recommendation": "Implement rate and size limits for uploads.",
    "category": "Rate Limiting & Abuse",
    "api_type": "Public APIs"
  },
  {
    "id": "api-210",
    "title": "Internal API Verbose Error Leak",
    "issue": "Internal API error exposes database details.",
    "endpoint": "POST /internal-api/query",
    "risk": "Information Disclosure",
    "impact": "Attackers can exploit database vulnerabilities.",
    "recommendation": "Sanitize internal API error messages.",
    "category": "Verbose Errors",
    "api_type": "Internal APIs"
  },
  {
    "id": "api-211",
    "title": "Private API Insecure Default Config",
    "issue": "Private API runs in debug mode.",
    "endpoint": "GET /private-api/debug",
    "risk": "Information Disclosure",
    "impact": "Attackers can access debugging data.",
    "recommendation": "Disable debug mode in production.",
    "category": "Insecure Defaults",
    "api_type": "Private APIs"
  },
  {
    "id": "api-212",
    "title": "JSON-RPC Overly Permissive CORS",
    "issue": "CORS allows all origins for JSON-RPC.",
    "endpoint": "OPTIONS /json-rpc/*",
    "risk": "Cross-Origin Attacks",
    "impact": "Malicious sites can access JSON-RPC.",
    "recommendation": "Restrict CORS for JSON-RPC.",
    "category": "Overly Permissive CORS",
    "api_type": "JSON-RPC"
  },
  {
    "id": "api-213",
    "title": "SOAP API Mass Assignment",
    "issue": "SOAP allows setting 'balance' field.",
    "endpoint": "POST /soap-api/update",
    "risk": "Financial Fraud",
    "impact": "Attackers can manipulate financial data.",
    "recommendation": "Restrict sensitive fields in SOAP API.",
    "category": "Mass Assignment",
    "api_type": "SOAP APIs"
  },
  {
    "id": "api-214",
    "title": "GraphQL Excessive Data in Subscription",
    "issue": "Subscription returns sensitive user data.",
    "endpoint": "POST /graphql",
    "risk": "Data Leakage",
    "impact": "Unauthorized clients receive sensitive updates.",
    "recommendation": "Filter subscription data in GraphQL.",
    "category": "Excessive Data Exposure",
    "api_type": "GraphQL"
  },
  {
    "id": "api-215",
    "title": "Open API Admin Bypass",
    "issue": "Open API allows admin access via parameter.",
    "endpoint": "GET /open-api/admin",
    "risk": "Privilege Escalation",
    "impact": "Attackers can gain admin privileges.",
    "recommendation": "Validate admin roles server-side.",
    "category": "Access Control",
    "api_type": "Open APIs"
  },
  {
    "id": "api-216",
    "title": "REST Weak Password Reset",
    "issue": "REST API uses predictable reset tokens.",
    "endpoint": "POST /rest/reset-password",
    "risk": "Account Takeover",
    "impact": "Attackers can reset user passwords.",
    "recommendation": "Use secure, unpredictable reset tokens.",
    "category": "Authentication",
    "api_type": "REST"
  },
  {
    "id": "api-217",
    "title": "Soap No Rate Limiting",
    "issue": "No limit on SOAP request frequency.",
    "endpoint": "POST /soap/service",
    "risk": "Denial of Service",
    "impact": "Attackers can overload SOAP server.",
    "recommendation": "Implement rate limiting for SOAP.",
    "category": "Rate Limiting & Abuse",
    "api_type": "Soap"
  },
  {
    "id": "api-218",
    "title": "Partner API Verbose Error",
    "issue": "Partner API error leaks partner IDs.",
    "endpoint": "POST /partner-api/process",
    "risk": "Information Disclosure",
    "impact": "Attackers can target specific partners.",
    "recommendation": "Sanitize partner API error messages.",
    "category": "Verbose Errors",
    "api_type": "Partner APIs"
  },
  {
    "id": "api-219",
    "title": "Composite API Insecure Defaults",
    "issue": "Composite API uses weak encryption.",
    "endpoint": "POST /composite-api/integrate",
    "risk": "Data Interception",
    "impact": "Attackers can decrypt integrated data.",
    "recommendation": "Use strong encryption for composite API.",
    "category": "Insecure Defaults",
    "api_type": "Composite APIs"
  },
  {
    "id": "api-220",
    "title": "Public API Overly Permissive CORS",
    "issue": "CORS allows all origins for public API.",
    "endpoint": "OPTIONS /public-api/*",
    "risk": "Cross-Origin Attacks",
    "impact": "Malicious sites can access public API.",
    "recommendation": "Restrict CORS for public APIs.",
    "category": "Overly Permissive CORS",
    "api_type": "Public APIs"
  }
  {
    "id": "api-221",
    "title": "Partner API Token Replay Vulnerability",
    "issue": "Partner API does not validate token uniqueness, allowing replay attacks.",
    "endpoint": "POST /partner-api/v2/authenticate",
    "risk": "Unauthorized Access",
    "impact": "Attackers can reuse captured tokens for unauthorized access.",
    "recommendation": "Implement nonce or timestamp in token validation.",
    "category": "Authentication",
    "api_type": "Partner APIs"
  },
  {
    "id": "api-222",
    "title": "Composite API Nested Service IDOR",
    "issue": "Composite API allows access to nested service data via ID manipulation.",
    "endpoint": "POST /composite-api/v1/integrate/service/{serviceId}",
    "risk": "Unauthorized Access",
    "impact": "Exposure of sensitive nested service data.",
    "recommendation": "Validate user permissions for nested services.",
    "category": "Access Control",
    "api_type": "Composite APIs"
  },
  {
    "id": "api-223",
    "title": "Public API Unlimited Batch Requests",
    "issue": "No limit on batch request size in public API.",
    "endpoint": "POST /public-api/v3/batch",
    "risk": "Denial of Service",
    "impact": "Attackers can overload server with large batch requests.",
    "recommendation": "Limit batch request size and frequency.",
    "category": "Rate Limiting & Abuse",
    "api_type": "Public APIs"
  },
  {
    "id": "api-224",
    "title": "Internal API Debug Endpoint Exposure",
    "issue": "Internal API exposes debug endpoint with verbose logs.",
    "endpoint": "GET /internal-api/debug/logs",
    "risk": "Information Disclosure",
    "impact": "Attackers can extract sensitive system information.",
    "recommendation": "Disable debug endpoints in production.",
    "category": "Verbose Errors",
    "api_type": "Internal APIs"
  },
  {
    "id": "api-225",
    "title": "Private API Weak Key Rotation",
    "issue": "Private API keys lack enforced rotation policy.",
    "endpoint": "GET /private-api/v1/secure-data",
    "risk": "Credential Exposure",
    "impact": "Stolen keys remain valid indefinitely.",
    "recommendation": "Enforce periodic key rotation and revocation.",
    "category": "Insecure Defaults",
    "api_type": "Private APIs"
  },
  {
    "id": "api-226",
    "title": "REST API CORS Credential Leak",
    "issue": "CORS allows credentials with untrusted origins.",
    "endpoint": "OPTIONS /rest-api/v2/protected",
    "risk": "Cross-Origin Attacks",
    "impact": "Malicious sites can steal user credentials.",
    "recommendation": "Disable credentials in CORS for untrusted origins.",
    "category": "Overly Permissive CORS",
    "api_type": "REST APIs"
  },
  {
    "id": "api-227",
    "title": "JSON-RPC Sensitive Parameter Injection",
    "issue": "JSON-RPC allows injection of sensitive parameters like 'admin'.",
    "endpoint": "POST /json-rpc/v1/execute",
    "risk": "Privilege Escalation",
    "impact": "Attackers can gain unauthorized admin access.",
    "recommendation": "Validate and sanitize JSON-RPC parameters.",
    "category": "Mass Assignment",
    "api_type": "JSON-RPC"
  },
  {
    "id": "api-228",
    "title": "SOAP API Sensitive Metadata Leak",
    "issue": "SOAP response includes internal server metadata.",
    "endpoint": "POST /soap-api/v2/metadata",
    "risk": "Data Leakage",
    "impact": "Attackers can exploit server configuration details.",
    "recommendation": "Filter metadata from SOAP responses.",
    "category": "Excessive Data Exposure",
    "api_type": "SOAP APIs"
  },
  {
    "id": "api-229",
    "title": "GraphQL Nested Query Overfetching",
    "issue": "Nested query returns sensitive fields unnecessarily.",
    "endpoint": "POST /graphql/v1/query",
    "risk": "Data Leakage",
    "impact": "Exposes sensitive nested data to unauthorized users.",
    "recommendation": "Restrict nested fields in GraphQL queries.",
    "category": "Excessive Data Exposure",
    "api_type": "GraphQL"
  },
  {
    "id": "api-230",
    "title": "Open API Weak JWT Signature",
    "issue": "Open API accepts weakly signed JWTs.",
    "endpoint": "GET /open-api/v1/resources",
    "risk": "Token Forgery",
    "impact": "Attackers can forge valid JWTs for access.",
    "recommendation": "Use strong signing algorithms like RS256.",
    "category": "Authentication",
    "api_type": "Open APIs"
  },
  {
    "id": "api-231",
    "title": "REST API Concurrent Request Abuse",
    "issue": "No limit on concurrent requests to critical endpoint.",
    "endpoint": "POST /rest-api/v3/transactions",
    "risk": "Resource Exhaustion",
    "impact": "Attackers can overload server with concurrent requests.",
    "recommendation": "Limit concurrent requests per user.",
    "category": "Rate Limiting & Abuse",
    "api_type": "REST"
  },
  {
    "id": "api-232",
    "title": "Soap Fault Code Injection",
    "issue": "SOAP fault allows injection of malicious code in errors.",
    "endpoint": "POST /soap/v1/service",
    "risk": "Information Disclosure",
    "impact": "Attackers can exploit injected code in errors.",
    "recommendation": "Sanitize and validate SOAP fault messages.",
    "category": "Verbose Errors",
    "api_type": "Soap"
  },
  {
    "id": "api-233",
    "title": "Partner API Unencrypted Token Storage",
    "issue": "Partner API stores tokens in plaintext.",
    "endpoint": "POST /partner-api/v2/token",
    "risk": "Credential Exposure",
    "impact": "Attackers with database access can steal tokens.",
    "recommendation": "Encrypt tokens before storage.",
    "category": "Insecure Defaults",
    "api_type": "Partner APIs"
  },
  {
    "id": "api-234",
    "title": "Composite API Cross-Service CORS",
    "issue": "CORS allows untrusted origins across composite services.",
    "endpoint": "OPTIONS /composite-api/v1/services/*",
    "risk": "Cross-Origin Attacks",
    "impact": "Malicious sites can access composite service data.",
    "recommendation": "Restrict CORS per service in composite API.",
    "category": "Overly Permissive CORS",
    "api_type": "Composite APIs"
  },
  {
    "id": "api-235",
    "title": "Public API Sensitive Header Exposure",
    "issue": "Public API exposes sensitive headers in response.",
    "endpoint": "GET /public-api/v2/info",
    "risk": "Information Disclosure",
    "impact": "Attackers can exploit exposed headers for attacks.",
    "recommendation": "Remove sensitive headers from responses.",
    "category": "Excessive Data Exposure",
    "api_type": "Public APIs"
  },
  {
    "id": "api-236",
    "title": "Internal API Privilege Escalation",
    "issue": "Internal API allows role elevation via parameter.",
    "endpoint": "POST /internal-api/v1/roles",
    "risk": "Privilege Escalation",
    "impact": "Attackers can gain unauthorized admin access.",
    "recommendation": "Validate role changes server-side.",
    "category": "Access Control",
    "api_type": "Internal APIs"
  },
  {
    "id": "api-237",
    "title": "Private API Unvalidated Redirect",
    "issue": "Private API allows unvalidated redirects in auth flow.",
    "endpoint": "GET /private-api/v1/redirect",
    "risk": "Open Redirect",
    "impact": "Attackers can redirect users to malicious sites.",
    "recommendation": "Validate redirect URLs in auth flow.",
    "category": "Authentication",
    "api_type": "Private APIs"
  },
  {
    "id": "api-238",
    "title": "JSON-RPC Batch Request Overload",
    "issue": "No limit on JSON-RPC batch request complexity.",
    "endpoint": "POST /json-rpc/v2/batch",
    "risk": "Denial of Service",
    "impact": "Attackers can overload server with complex batches.",
    "recommendation": "Limit batch request size and complexity.",
    "category": "Rate Limiting & Abuse",
    "api_type": "JSON-RPC"
  },
  {
    "id": "api-239",
    "title": "SOAP API XML Entity Expansion",
    "issue": "SOAP API vulnerable to XML entity expansion attacks.",
    "endpoint": "POST /soap-api/v3/process",
    "risk": "Denial of Service",
    "impact": "Attackers can crash server with malicious XML.",
    "recommendation": "Disable XML entity expansion in SOAP parser.",
    "category": "Insecure Defaults",
    "api_type": "SOAP APIs"
  },
  {
    "id": "api-240",
    "title": "GraphQL Introspection Misconfiguration",
    "issue": "GraphQL introspection exposes internal schema details.",
    "endpoint": "POST /graphql/v2/introspection",
    "risk": "Information Disclosure",
    "impact": "Attackers can map internal API structure.",
    "recommendation": "Disable introspection in production.",
    "category": "Verbose Errors",
    "api_type": "GraphQL"
  },
  {
    "id": "api-241",
    "title": "Open API Unscoped Token Access",
    "issue": "Open API tokens grant access to all endpoints.",
    "endpoint": "GET /open-api/v2/all",
    "risk": "Over-Privileged Access",
    "impact": "Compromised tokens grant excessive permissions.",
    "recommendation": "Implement fine-grained token scopes.",
    "category": "Authentication",
    "api_type": "Open APIs"
  },
  {
    "id": "api-242",
    "title": "REST API Parameter Tampering",
    "issue": "REST API allows tampering with sensitive query parameters.",
    "endpoint": "GET /rest-api/v2/settings?param=admin",
    "risk": "Privilege Escalation",
    "impact": "Attackers can manipulate settings for unauthorized access.",
    "recommendation": "Validate and sanitize query parameters.",
    "category": "Access Control",
    "api_type": "REST"
  },
  {
    "id": "api-243",
    "title": "Soap Sensitive WSDL Exposure",
    "issue": "SOAP WSDL exposes sensitive endpoint details.",
    "endpoint": "GET /soap/v1/wsdl",
    "risk": "Information Disclosure",
    "impact": "Attackers can map SOAP service for attacks.",
    "recommendation": "Restrict WSDL access to authorized users.",
    "category": "Excessive Data Exposure",
    "api_type": "Soap"
  },
  {
    "id": "api-244",
    "title": "gRPC Stream Replay Attack",
    "issue": "gRPC stream lacks replay protection.",
    "endpoint": "gRPC /service.StreamV2",
    "risk": "Unauthorized Access",
    "impact": "Attackers can replay streams for unauthorized actions.",
    "recommendation": "Implement stream nonce validation.",
    "category": "Authentication",
    "api_type": "gRPC"
  },
  {
    "id": "api-245",
    "title": "WebSocket Message Injection",
    "issue": "WebSocket allows injection of malicious message payloads.",
    "endpoint": "WS /ws/v1/messages",
    "risk": "Data Manipulation",
    "impact": "Attackers can manipulate WebSocket messages.",
    "recommendation": "Validate and sanitize WebSocket payloads.",
    "category": "Mass Assignment",
    "api_type": "WebSocket"
  },
  {
    "id": "api-246",
    "title": "Partner API Unrestricted Endpoint Access",
    "issue": "Partner API allows access to restricted endpoints without checks.",
    "endpoint": "GET /partner-api/v3/restricted",
    "risk": "Unauthorized Access",
    "impact": "Attackers can access sensitive partner endpoints.",
    "recommendation": "Enforce endpoint-level access controls.",
    "category": "Access Control",
    "api_type": "Partner APIs"
  },
  {
    "id": "api-247",
    "title": "Composite API Service Overload",
    "issue": "No limit on composite API service calls.",
    "endpoint": "POST /composite-api/v2/call",
    "risk": "Denial of Service",
    "impact": "Attackers can overload integrated services.",
    "recommendation": "Limit service call frequency and complexity.",
    "category": "Rate Limiting & Abuse",
    "api_type": "Composite APIs"
  },
  {
    "id": "api-248",
    "title": "Public API Sensitive Cookie Exposure",
    "issue": "Public API exposes sensitive data in cookies.",
    "endpoint": "GET /public-api/v3/session",
    "risk": "Data Leakage",
    "impact": "Attackers can steal sensitive cookie data.",
    "recommendation": "Avoid sensitive data in cookies; use tokens.",
    "category": "Excessive Data Exposure",
    "api_type": "Public APIs"
  },
  {
    "id": "api-249",
    "title": "Internal API Insecure Session Timeout",
    "issue": "Internal API sessions lack timeout enforcement.",
    "endpoint": "POST /internal-api/v2/session",
    "risk": "Session Hijacking",
    "impact": "Stolen sessions remain valid indefinitely.",
    "recommendation": "Enforce short session timeouts.",
    "category": "Insecure Defaults",
    "api_type": "Internal APIs"
  },
  {
    "id": "api-250",
    "title": "Private API CORS Method Overreach",
    "issue": "CORS allows unsafe methods like PATCH for private API.",
    "endpoint": "OPTIONS /private-api/v1/*",
    "risk": "Cross-Origin Attacks",
    "impact": "Malicious sites can perform destructive actions.",
    "recommendation": "Restrict CORS methods to safe ones.",
    "category": "Overly Permissive CORS",
    "api_type": "Private APIs"
  },
  {
    "id": "api-251",
    "title": "JSON-RPC Parameter Overwrite",
    "issue": "JSON-RPC allows overwriting critical parameters.",
    "endpoint": "POST /json-rpc/v3/update",
    "risk": "Privilege Escalation",
    "impact": "Attackers can manipulate critical settings.",
    "recommendation": "Restrict overwritable parameters in JSON-RPC.",
    "category": "Mass Assignment",
    "api_type": "JSON-RPC"
  },
  {
    "id": "api-252",
    "title": "SOAP API Verbose Fault Injection",
    "issue": "SOAP fault exposes injectable fault details.",
    "endpoint": "POST /soap-api/v2/fault",
    "risk": "Information Disclosure",
    "impact": "Attackers can exploit fault injection for attacks.",
    "recommendation": "Sanitize SOAP fault responses.",
    "category": "Verbose Errors",
    "api_type": "SOAP APIs"
  },
  {
    "id": "api-253",
    "title": "GraphQL Subscription Overload",
    "issue": "No limit on GraphQL subscription connections.",
    "endpoint": "POST /graphql/v3/subscribe",
    "risk": "Denial of Service",
    "impact": "Attackers can overload server with subscriptions.",
    "recommendation": "Limit subscription connections per user.",
    "category": "Rate Limiting & Abuse",
    "api_type": "GraphQL"
  },
  {
    "id": "api-254",
    "title": "Open API Weak Encryption Key",
    "issue": "Open API uses weak encryption key for tokens.",
    "endpoint": "POST /open-api/v2/auth",
    "risk": "Credential Exposure",
    "impact": "Attackers can decrypt tokens for access.",
    "recommendation": "Use strong encryption keys for tokens.",
    "category": "Authentication",
    "api_type": "Open APIs"
  },
  {
    "id": "api-255",
    "title": "REST API Hidden Endpoint Exposure",
    "issue": "REST API exposes undocumented sensitive endpoint.",
    "endpoint": "GET /rest-api/v3/hidden",
    "risk": "Unauthorized Access",
    "impact": "Attackers can access hidden functionality.",
    "recommendation": "Secure or remove undocumented endpoints.",
    "category": "Access Control",
    "api_type": "REST"
  },
  {
    "id": "api-256",
    "title": "Soap XML Injection Vulnerability",
    "issue": "SOAP API vulnerable to XML injection in requests.",
    "endpoint": "POST /soap/v2/request",
    "risk": "Data Manipulation",
    "impact": "Attackers can manipulate SOAP request data.",
    "recommendation": "Validate and sanitize XML inputs.",
    "category": "Mass Assignment",
    "api_type": "Soap"
  },
  {
    "id": "api-257",
    "title": "gRPC Metadata Injection",
    "issue": "gRPC allows injection of malicious metadata.",
    "endpoint": "gRPC /service.MetadataV1",
    "risk": "Data Manipulation",
    "impact": "Attackers can manipulate gRPC metadata.",
    "recommendation": "Validate and sanitize gRPC metadata.",
    "category": "Mass Assignment",
    "api_type": "gRPC"
  },
  {
    "id": "api-258",
    "title": "WebSocket Unrestricted Channel Creation",
    "issue": "WebSocket allows unauthorized channel creation.",
    "endpoint": "WS /ws/v2/channels",
    "risk": "Unauthorized Access",
    "impact": "Attackers can create unauthorized channels.",
    "recommendation": "Validate channel creation permissions.",
    "category": "Access Control",
    "api_type": "WebSocket"
  },
  {
    "id": "api-259",
    "title": "Partner API Weak Session Validation",
    "issue": "Partner API accepts invalid session tokens.",
    "endpoint": "GET /partner-api/v3/session",
    "risk": "Unauthorized Access",
    "impact": "Attackers can bypass session validation.",
    "recommendation": "Strictly validate session tokens.",
    "category": "Authentication",
    "api_type": "Partner APIs"
  },
  {
    "id": "api-260",
    "title": "Composite API Unrestricted Service Call",
    "issue": "Composite API allows unrestricted service calls.",
    "endpoint": "POST /composite-api/v3/call",
    "risk": "Unauthorized Access",
    "impact": "Attackers can invoke restricted services.",
    "recommendation": "Validate service call permissions.",
    "category": "Access Control",
    "api_type": "Composite APIs"
  },
  {
    "id": "api-261",
    "title": "Public API Verbose Logging",
    "issue": "Public API logs sensitive request data.",
    "endpoint": "POST /public-api/v2/submit",
    "risk": "Information Disclosure",
    "impact": "Attackers with log access can steal data.",
    "recommendation": "Exclude sensitive data from logs.",
    "category": "Verbose Errors",
    "api_type": "Public APIs"
  },
  {
    "id": "api-262",
    "title": "Internal API No Rate Limiting",
    "issue": "Internal API lacks rate limiting on critical endpoint.",
    "endpoint": "POST /internal-api/v3/critical",
    "risk": "Resource Exhaustion",
    "impact": "Attackers can overload internal API.",
    "recommendation": "Implement rate limiting on critical endpoints.",
    "category": "Rate Limiting & Abuse",
    "api_type": "Internal APIs"
  },
  {
    "id": "api-263",
    "title": "Private API Weak Encryption",
    "issue": "Private API uses outdated encryption protocol.",
    "endpoint": "GET /private-api/v2/data",
    "risk": "Data Interception",
    "impact": "Attackers can decrypt sensitive data.",
    "recommendation": "Upgrade to TLS 1.3 encryption.",
    "category": "Insecure Defaults",
    "api_type": "Private APIs"
  },
  {
    "id": "api-264",
    "title": "JSON-RPC Overly Permissive CORS",
    "issue": "CORS allows all origins for JSON-RPC endpoint.",
    "endpoint": "OPTIONS /json-rpc/v2/*",
    "risk": "Cross-Origin Attacks",
    "impact": "Malicious sites can access JSON-RPC.",
    "recommendation": "Restrict CORS to trusted origins.",
    "category": "Overly Permissive CORS",
    "api_type": "JSON-RPC"
  },
  {
    "id": "api-265",
    "title": "SOAP API Sensitive Parameter Exposure",
    "issue": "SOAP API exposes sensitive parameters in response.",
    "endpoint": "POST /soap-api/v3/process",
    "risk": "Data Leakage",
    "impact": "Attackers can extract sensitive parameters.",
    "recommendation": "Filter sensitive parameters from responses.",
    "category": "Excessive Data Exposure",
    "api_type": "SOAP APIs"
  },
  {
    "id": "api-266",
    "title": "GraphQL Unauthorized Mutation Access",
    "issue": "GraphQL mutation allows unauthorized updates.",
    "endpoint": "POST /graphql/v2/mutation",
    "risk": "Unauthorized Modification",
    "impact": "Attackers can modify data without permission.",
    "recommendation": "Enforce strict mutation access controls.",
    "category": "Access Control",
    "api_type": "GraphQL"
  },
  {
    "id": "api-267",
    "title": "Open API Unvalidated Input",
    "issue": "Open API does not validate input payloads.",
    "endpoint": "POST /open-api/v3/submit",
    "risk": "Data Manipulation",
    "impact": "Attackers can submit malicious data.",
    "recommendation": "Implement strict input validation.",
    "category": "Mass Assignment",
    "api_type": "Open APIs"
  },
  {
    "id": "api-268",
    "title": "REST API Session Fixation",
    "issue": "REST API does not regenerate session IDs.",
    "endpoint": "POST /rest-api/v2/login",
    "risk": "Session Hijacking",
    "impact": "Attackers can hijack user sessions.",
    "recommendation": "Regenerate session IDs upon login.",
    "category": "Authentication",
    "api_type": "REST"
  },
  {
    "id": "api-269",
    "title": "Soap Unrestricted File Access",
    "issue": "SOAP API allows access to arbitrary files via path parameter.",
    "endpoint": "POST /soap/v2/files",
    "risk": "Unauthorized Access",
    "impact": "Attackers can access sensitive server files.",
    "recommendation": "Restrict file access to authorized paths.",
    "category": "Access Control",
    "api_type": "Soap"
  },
  {
    "id": "api-270",
    "title": "gRPC Unvalidated Stream Input",
    "issue": "gRPC stream accepts unvalidated input data.",
    "endpoint": "gRPC /service.StreamInput",
    "risk": "Data Manipulation",
    "impact": "Attackers can inject malicious stream data.",
    "recommendation": "Validate all gRPC stream inputs.",
    "category": "Mass Assignment",
    "api_type": "gRPC"
  },
  {
    "id": "api-271",
    "title": "WebSocket Unrestricted Broadcast",
    "issue": "WebSocket broadcasts messages to all clients.",
    "endpoint": "WS /ws/v2/broadcast",
    "risk": "Data Leakage",
    "impact": "Unauthorized clients receive sensitive broadcasts.",
    "recommendation": "Restrict broadcasts to authorized clients.",
    "category": "Excessive Data Exposure",
    "api_type": "WebSocket"
  },
  {
    "id": "api-272",
    "title": "Partner API Token Lifetime Overreach",
    "issue": "Partner API tokens have excessive lifetime.",
    "endpoint": "POST /partner-api/v3/token",
    "risk": "Unauthorized Access",
    "impact": "Stolen tokens remain valid for too long.",
    "recommendation": "Set short token lifetimes and refresh.",
    "category": "Authentication",
    "api_type": "Partner APIs"
  },
  {
    "id": "api-273",
    "title": "Composite API Service Misconfiguration",
    "issue": "Composite API exposes misconfigured service endpoints.",
    "endpoint": "POST /composite-api/v2/service",
    "risk": "Unauthorized Access",
    "impact": "Attackers can exploit misconfigured services.",
    "recommendation": "Securely configure composite service endpoints.",
    "category": "Insecure Defaults",
    "api_type": "Composite APIs"
  },
  {
    "id": "api-274",
    "title": "Public API Unthrottled Downloads",
    "issue": "No throttling on public API download endpoint.",
    "endpoint": "GET /public-api/v3/download",
    "risk": "Resource Exhaustion",
    "impact": "Attackers can overload server with downloads.",
    "recommendation": "Implement download throttling mechanisms.",
    "category": "Rate Limiting & Abuse",
    "api_type": "Public APIs"
  },
  {
    "id": "api-275",
    "title": "Internal API Sensitive Log Exposure",
    "issue": "Internal API exposes sensitive logs via endpoint.",
    "endpoint": "GET /internal-api/v2/logs",
    "risk": "Information Disclosure",
    "impact": "Attackers can access sensitive log data.",
    "recommendation": "Restrict log access to authorized users.",
    "category": "Excessive Data Exposure",
    "api_type": "Internal APIs"
  },
  {
    "id": "api-276",
    "title": "Private API Unsecured Admin Endpoint",
    "issue": "Private API admin endpoint lacks authentication.",
    "endpoint": "POST /private-api/v2/admin",
    "risk": "Unauthorized Access",
    "impact": "Attackers can perform admin actions.",
    "recommendation": "Enforce strict authentication for admin endpoints.",
    "category": "Access Control",
    "api_type": "Private APIs"
  },
  {
    "id": "api-277",
    "title": "JSON-RPC Unvalidated Method Calls",
    "issue": "JSON-RPC allows unvalidated method invocations.",
    "endpoint": "POST /json-rpc/v3/call",
    "risk": "Unauthorized Access",
    "impact": "Attackers can invoke restricted methods.",
    "recommendation": "Validate JSON-RPC method calls.",
    "category": "Access Control",
    "api_type": "JSON-RPC"
  },
  {
    "id": "api-278",
    "title": "SOAP API Unfiltered Response Data",
    "issue": "SOAP API returns unfiltered sensitive data.",
    "endpoint": "POST /soap-api/v4/response",
    "risk": "Data Leakage",
    "impact": "Attackers can access sensitive response data.",
    "recommendation": "Filter sensitive data from SOAP responses.",
    "category": "Excessive Data Exposure",
    "api_type": "SOAP APIs"
  },
  {
    "id": "api-279",
    "title": "GraphQL Unrestricted Query Depth",
    "issue": "GraphQL allows unlimited query depth.",
    "endpoint": "POST /graphql/v3/query",
    "risk": "Denial of Service",
    "impact": "Attackers can overload server with deep queries.",
    "recommendation": "Enforce query depth limits.",
    "category": "Rate Limiting & Abuse",
    "api_type": "GraphQL"
  },
  {
    "id": "api-280",
    "title": "Open API Insecure Token Storage",
    "issue": "Open API stores tokens in unencrypted format.",
    "endpoint": "POST /open-api/v3/auth",
    "risk": "Credential Exposure",
    "impact": "Attackers can steal tokens from storage.",
    "recommendation": "Encrypt tokens in storage.",
    "category": "Insecure Defaults",
    "api_type": "Open APIs"
  },
  {
    "id": "api-281",
    "title": "REST API Unvalidated Header Input",
    "issue": "REST API trusts unvalidated custom headers.",
    "endpoint": "GET /rest-api/v4/custom",
    "risk": "Privilege Escalation",
    "impact": "Attackers can manipulate headers for access.",
    "recommendation": "Validate and sanitize custom headers.",
    "category": "Access Control",
    "api_type": "REST"
  },
  {
    "id": "api-282",
    "title": "Soap Verbose Error with Code",
    "issue": "SOAP error exposes internal code snippets.",
    "endpoint": "POST /soap/v3/error",
    "risk": "Information Disclosure",
    "impact": "Attackers can exploit code vulnerabilities.",
    "recommendation": "Sanitize SOAP error messages.",
    "category": "Verbose Errors",
    "api_type": "Soap"
  },
  {
    "id": "api-283",
    "title": "gRPC Unrestricted Stream Access",
    "issue": "gRPC stream allows unauthorized access.",
    "endpoint": "gRPC /service.StreamAccess",
    "risk": "Unauthorized Access",
    "impact": "Attackers can access restricted streams.",
    "recommendation": "Enforce stream access controls.",
    "category": "Access Control",
    "api_type": "gRPC"
  },
  {
    "id": "api-284",
    "title": "WebSocket Unfiltered Message Data",
    "issue": "WebSocket messages include sensitive data.",
    "endpoint": "WS /ws/v3/messages",
    "risk": "Data Leakage",
    "impact": "Unauthorized clients receive sensitive data.",
    "recommendation": "Filter sensitive data from WebSocket messages.",
    "category": "Excessive Data Exposure",
    "api_type": "WebSocket"
  },
  {
    "id": "api-285",
    "title": "Partner API Unsecured Callback URL",
    "issue": "Partner API accepts unvalidated callback URLs.",
    "endpoint": "POST /partner-api/v4/callback",
    "risk": "Open Redirect",
    "impact": "Attackers can redirect users to malicious sites.",
    "recommendation": "Validate callback URLs strictly.",
    "category": "Authentication",
    "api_type": "Partner APIs"
  },
  {
    "id": "api-286",
    "title": "Composite API Unthrottled Service Calls",
    "issue": "No throttling on composite API service invocations.",
    "endpoint": "POST /composite-api/v4/invoke",
    "risk": "Denial of Service",
    "impact": "Attackers can overload composite services.",
    "recommendation": "Implement service call throttling.",
    "category": "Rate Limiting & Abuse",
    "api_type": "Composite APIs"
  },
  {
    "id": "api-287",
    "title": "Public API Unsecured Debug Endpoint",
    "issue": "Public API exposes unsecured debug endpoint.",
    "endpoint": "GET /public-api/v4/debug",
    "risk": "Information Disclosure",
    "impact": "Attackers can access debugging information.",
    "recommendation": "Secure or disable debug endpoints.",
    "category": "Insecure Defaults",
    "api_type": "Public APIs"
  },
  {
    "id": "api-288",
    "title": "Internal API Overly Permissive CORS",
    "issue": "CORS allows all origins for internal API endpoint.",
    "endpoint": "OPTIONS /internal-api/v4/*",
    "risk": "Cross-Origin Attacks",
    "impact": "Malicious sites can access internal API.",
    "recommendation": "Restrict CORS to trusted origins.",
    "category": "Overly Permissive CORS",
    "api_type": "Internal APIs"
  },
  {
    "id": "api-289",
    "title": "Private API Sensitive Parameter Injection",
    "issue": "Private API allows injection of sensitive parameters.",
    "endpoint": "POST /private-api/v3/config",
    "risk": "Privilege Escalation",
    "impact": "Attackers can manipulate sensitive settings.",
    "recommendation": "Validate and restrict private API parameters.",
    "category": "Mass Assignment",
    "api_type": "Private APIs"
  },
  {
    "id": "api-290",
    "title": "JSON-RPC Unrestricted Method Access",
    "issue": "JSON-RPC allows access to restricted methods.",
    "endpoint": "POST /json-rpc/v4/methods",
    "risk": "Unauthorized Access",
    "impact": "Attackers can invoke restricted functionality.",
    "recommendation": "Restrict JSON-RPC method access.",
    "category": "Access Control",
    "api_type": "JSON-RPC"
  },
  {
    "id": "api-291",
    "title": "SOAP API Unfiltered Fault Data",
    "issue": "SOAP fault includes sensitive server data.",
    "endpoint": "POST /soap-api/v5/fault",
    "risk": "Information Disclosure",
    "impact": "Attackers can exploit server details.",
    "recommendation": "Filter sensitive data from SOAP faults.",
    "category": "Verbose Errors",
    "api_type": "SOAP APIs"
  },
  {
    "id": "api-292",
    "title": "GraphQL Unrestricted Subscription Access",
    "issue": "GraphQL subscriptions allow unauthorized access.",
    "endpoint": "POST /graphql/v4/subscribe",
    "risk": "Unauthorized Access",
    "impact": "Attackers can subscribe to restricted updates.",
    "recommendation": "Enforce subscription access controls.",
    "category": "Access Control",
    "api_type": "GraphQL"
  },
  {
    "id": "api-293",
    "title": "Open API Weak Token Entropy",
    "issue": "Open API tokens use low-entropy values.",
    "endpoint": "POST /open-api/v4/auth",
    "risk": "Token Guessing",
    "impact": "Attackers can guess valid tokens.",
    "recommendation": "Use high-entropy token generation.",
    "category": "Authentication",
    "api_type": "Open APIs"
  },
  {
    "id": "api-294",
    "title": "REST API Unsecured Backup Endpoint",
    "issue": "REST API exposes unsecured backup endpoint.",
    "endpoint": "GET /rest-api/v4/backup",
    "risk": "Data Leakage",
    "impact": "Attackers can access sensitive backups.",
    "recommendation": "Secure or disable backup endpoints.",
    "category": "Excessive Data Exposure",
    "api_type": "REST"
  },
  {
    "id": "api-295",
    "title": "Soap Unvalidated XML Input",
    "issue": "SOAP API accepts unvalidated XML payloads.",
    "endpoint": "POST /soap/v4/input",
    "risk": "Data Manipulation",
    "impact": "Attackers can inject malicious XML data.",
    "recommendation": "Validate and sanitize XML inputs.",
    "category": "Mass Assignment",
    "api_type": "Soap"
  },
  {
    "id": "api-296",
    "title": "gRPC Unrestricted Metadata Access",
    "issue": "gRPC allows unauthorized metadata access.",
    "endpoint": "gRPC /service.MetadataV2",
    "risk": "Information Disclosure",
    "impact": "Attackers can access sensitive metadata.",
    "recommendation": "Restrict metadata access in gRPC.",
    "category": "Excessive Data Exposure",
    "api_type": "gRPC"
  },
  {
    "id": "api-297",
    "title": "WebSocket Unsecured Channel Access",
    "issue": "WebSocket channels lack access controls.",
    "endpoint": "WS /ws/v4/channels",
    "risk": "Unauthorized Access",
    "impact": "Attackers can access restricted channels.",
    "recommendation": "Implement channel access controls.",
    "category": "Access Control",
    "api_type": "WebSocket"
  },
  {
    "id": "api-298",
    "title": "Partner API Unthrottled Token Issuance",
    "issue": "No limit on partner API token issuance rate.",
    "endpoint": "POST /partner-api/v4/token",
    "risk": "Resource Exhaustion",
    "impact": "Attackers can overwhelm token issuance system.",
    "recommendation": "Throttle token issuance requests.",
    "category": "Rate Limiting & Abuse",
    "api_type": "Partner APIs"
  },
  {
    "id": "api-299",
    "title": "Composite API Insecure Service Binding",
    "issue": "Composite API uses insecure service bindings.",
    "endpoint": "POST /composite-api/v4/bind",
    "risk": "Data Interception",
    "impact": "Attackers can intercept service communications.",
    "recommendation": "Use secure bindings for composite services.",
    "category": "Insecure Defaults",
    "api_type": "Composite APIs"
  },
  {
    "id": "api-300",
    "title": "Public API Unfiltered Response Headers",
    "issue": "Public API response headers expose server details.",
    "endpoint": "GET /public-api/v4/status",
    "risk": "Information Disclosure",
    "impact": "Attackers can exploit server vulnerabilities.",
    "recommendation": "Filter sensitive response headers.",
    "category": "Verbose Errors",
    "api_type": "Public APIs"
  }
]